openapi: 3.0.1
info:
  title: Resource Ordering
  description: 'TMF652: The Resource Order API provides a standard mechanism for creating/placing, updating, canceling and deleting a Resource Order with all necessary order parameters. A Resource Order is based on a resource candidate that is defined in the resource catalog. A Resource candidate makes a Resource Specification available to a resource catalog. Resources can be logical (eg: MSISDN, IP-addresses) or physical (eg: cables, routers, firewalls).'
  version: 4.0.0
servers:
  - url: https://serverRoot/tmf-api/resourceOrdering/v4/
tags:
  - name: resourceOrder
  - name: cancelResourceOrder
  - name: notification listeners (client side)
  - name: events subscription
paths:
  /resourceOrder:
    get:
      tags:
        - resourceOrder
      summary: List or find ResourceOrder objects
      description: This operation list or find ResourceOrder entities
      operationId: listResourceOrder
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - resourceOrder
      summary: Creates a ResourceOrder
      description: This operation creates a ResourceOrder entity.
      operationId: createResourceOrder
      requestBody:
        description: The ResourceOrder to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceOrder_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: resourceOrder
  /resourceOrder/{id}:
    get:
      tags:
        - resourceOrder
      summary: Retrieves a ResourceOrder by ID
      description: This operation retrieves a ResourceOrder entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveResourceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the ResourceOrder
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - resourceOrder
      summary: Deletes a ResourceOrder
      description: This operation deletes a ResourceOrder entity.
      operationId: deleteResourceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the ResourceOrder
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - resourceOrder
      summary: Updates partially a ResourceOrder
      description: This operation updates partially a ResourceOrder entity.
      operationId: patchResourceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the ResourceOrder
          required: true
          schema:
            type: string
      requestBody:
        description: The ResourceOrder to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceOrder_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: resourceOrder
  /cancelResourceOrder:
    get:
      tags:
        - cancelResourceOrder
      summary: List or find CancelResourceOrder objects
      description: This operation list or find CancelResourceOrder entities
      operationId: listCancelResourceOrder
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CancelResourceOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - cancelResourceOrder
      summary: Creates a CancelResourceOrder
      description: This operation creates a CancelResourceOrder entity.
      operationId: createCancelResourceOrder
      requestBody:
        description: The CancelResourceOrder to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelResourceOrder_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResourceOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: cancelResourceOrder
  /cancelResourceOrder/{id}:
    get:
      tags:
        - cancelResourceOrder
      summary: Retrieves a CancelResourceOrder by ID
      description: This operation retrieves a CancelResourceOrder entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveCancelResourceOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the CancelResourceOrder
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResourceOrder'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hub:
    post:
      tags:
        - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        '201':
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/resourceOrderCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ResourceOrderCreateEvent
      description: Example of a client listener for receiving the notification ResourceOrderCreateEvent
      operationId: listenToResourceOrderCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceOrderCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/resourceOrderAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ResourceOrderAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification ResourceOrderAttributeValueChangeEvent
      operationId: listenToResourceOrderAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceOrderAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/resourceOrderStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ResourceOrderStateChangeEvent
      description: Example of a client listener for receiving the notification ResourceOrderStateChangeEvent
      operationId: listenToResourceOrderStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceOrderStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/resourceOrderDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ResourceOrderDeleteEvent
      description: Example of a client listener for receiving the notification ResourceOrderDeleteEvent
      operationId: listenToResourceOrderDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceOrderDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/resourceOrderInformationRequiredEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ResourceOrderInformationRequiredEvent
      description: Example of a client listener for receiving the notification ResourceOrderInformationRequiredEvent
      operationId: listenToResourceOrderInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceOrderInformationRequiredEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/cancelResourceOrderCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity CancelResourceOrderCreateEvent
      description: Example of a client listener for receiving the notification CancelResourceOrderCreateEvent
      operationId: listenToCancelResourceOrderCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelResourceOrderCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/cancelResourceOrderStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity CancelResourceOrderStateChangeEvent
      description: Example of a client listener for receiving the notification CancelResourceOrderStateChangeEvent
      operationId: listenToCancelResourceOrderStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelResourceOrderStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/cancelResourceOrderInformationRequiredEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity CancelResourceOrderInformationRequiredEvent
      description: Example of a client listener for receiving the notification CancelResourceOrderInformationRequiredEvent
      operationId: listenToCancelResourceOrderInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelResourceOrderInformationRequiredEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
      description: Base schema for adressable entities
    Any:
      type: object
    AppointmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The identifier of the referred appointment
        href:
          type: string
          description: The reference of the appointment
        description:
          type: string
          description: An explanatory text regarding the appointment made with a party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation
      description: Refers an appointment, such as a Customer presentation or internal meeting or site visit
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Complements the description of an element (for instance a product) through video, pictures...
    AttachmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique-Identifier for this attachment
        href:
          type: string
          description: URL serving as reference for the attachment resource
          format: uri
        description:
          type: string
          description: A narrative text describing the content of the attachment
        name:
          type: string
          description: Name of the related entity.
        url:
          type: string
          description: Link to the attachment media/content
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures
    AttachmentRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.
    CancelOrder:
      type: object
      properties:
        id:
          type: string
          description: id of the cancellation request (this is not an order id)
        href:
          type: string
          description: Hyperlink to access the cancellation request
        cancellationReason:
          type: string
          description: Reason why the order is cancelled.
        effectiveCancellationDate:
          type: string
          description: Date when the order is cancelled.
          format: date-time
        requestedCancellationDate:
          type: string
          description: Date when the submitter wants the order to be cancelled
          format: date-time
        state:
          $ref: '#/components/schemas/TaskStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A Order cancel is a type of task which  can  be used to place a request to cancel an order
    CancelResourceOrder:
      required:
        - resourceOrder
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        cancellationReason:
          type: string
          description: Reason why the order is cancelled.
        effectiveCancellationDate:
          type: string
          description: Date when the order is cancelled.
          format: date-time
        requestedCancellationDate:
          type: string
          description: Date when the submitter wants the order to be cancelled
          format: date-time
        resourceOrder:
          $ref: '#/components/schemas/ResourceOrderRef'
        state:
          $ref: '#/components/schemas/TaskStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Request for cancellation an existing resource order
    CancelResourceOrder_Create:
      required:
        - resourceOrder
      type: object
      properties:
        cancellationReason:
          type: string
          description: Reason why the order is cancelled.
        requestedCancellationDate:
          type: string
          description: Date when the submitter wants the order to be cancelled
          format: date-time
        resourceOrder:
          $ref: '#/components/schemas/ResourceOrderRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        Request for cancellation an existing resource order
        Skipped properties: id,href,state,effectiveCancellationDate
    Characteristic:
      required:
        - name
        - value
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        characteristicRelationship:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Describes a given characteristic of an object or entity through a name/value pair.
    CharacteristicRelationship:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        href:
          type: string
          description: Hyperlink reference
          format: uri
        relationshipType:
          type: string
          description: The type of relationship
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Another Characteristic that is related to the current Characteristic;
    ConstraintRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: constraint version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.
    Entity:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base entity schema for use in TMForum Open-APIs
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base Extensible schema for use in TMForum Open-APIs
    ExternalReference:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        externalReferenceType:
          type: string
          description: Type of the external reference
        name:
          type: string
          description: External reference name
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: External reference of the individual or reference in other system
    Feature:
      required:
        - featureCharacteristic
        - name
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the feature.
        isBundle:
          type: boolean
          description: True if this is a feature group. Default is false.
        isEnabled:
          type: boolean
          description: True if this feature is enabled. Default is true.
        name:
          type: string
          description: This is the name for the feature.
        constraint:
          type: array
          description: This is a list of feature constraints.
          items:
            $ref: '#/components/schemas/ConstraintRef'
        featureCharacteristic:
          minItems: 1
          type: array
          description: This is a list of Characteristics for a particular feature.
          items:
            $ref: '#/components/schemas/Characteristic'
        featureRelationship:
          type: array
          items:
            $ref: '#/components/schemas/FeatureRelationship'
      description: Configuration feature.
    FeatureRelationship:
      required:
        - name
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the target feature.
        name:
          type: string
          description: This is the name of the target feature.
        relationshipType:
          type: string
          description: This is the type of the feature relationship.
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: Configuration feature
    Note:
      required:
        - id
        - text
      type: object
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity (may or may not be globally unique, depending on provider implementation)
        href:
          type: string
          description: Hyperlink reference
          format: uri
        author:
          type: string
          description: Author of the note
        date:
          type: string
          description: Date of the note
          format: date-time
        text:
          type: string
          description: Text of the note
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Extra information about a given entity
    OrderItemActionType:
      type: string
      description: action to be performed on the product
      enum:
        - add
        - modify
        - delete
        - noChange
    Place:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Place reference. Place defines the places where the products are sold or delivered.
    PlaceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1
        units:
          type: string
          description: Unit
      description: An amount in a given unit
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself
    Resource:
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type.
        href:
          type: string
          description: The URI for the object itself.
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory.
    ResourceAdministrativeStateType:
      type: string
      description: ResourceAdministrativeStateType enumerations
      enum:
        - locked
        - unlocked
        - shutdown
    ResourceOperationalStateType:
      type: string
      description: ResourceOperationalStateType enumerations
      enum:
        - enable
        - disable
    ResourceOrder:
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the Resource Order. Required to be unique within the resource type.
          example: 9ba1047c38ce
        href:
          type: string
          description: Hyperlink to access the order
          format: uri
          example: http://host/resourceOrder/9ba1047c38ce
        cancellationDate:
          type: string
          description: Date when the order is cancelled - if cancelled, in RFC3339 (subset of ISO8601) format
          format: date-time
        cancellationReason:
          type: string
          description: Reason why the order is cancelled - if cancelled
          example: Cables no longer required by customer
        category:
          type: string
          description: Used to categorize the order from a business perspective that can be useful for the order management system
          example: Premium
        completionDate:
          type: string
          description: Date when the order was actually completed, in RFC3339 (subset of ISO8601) format
          format: date-time
        description:
          type: string
          description: Free-text description of the Resource Order
          example: 7km of 6-fiber, double jacketed Optical Cable for Acme Inc
        expectedCompletionDate:
          type: string
          description: Date when the order is expected to be completed, in RFC3339 (subset of ISO8601) format
          format: date-time
        externalId:
          type: string
          description: 'DEPRECATED: Use externalReference Instead. ID given by the consumer (to facilitate searches afterwards)'
          example: 'Customer Ref: 577e6b2be5e5'
        name:
          type: string
          description: A string used to give a name to the Resource Order
          example: 7km of Optical Cable for Acme Inc
        orderDate:
          type: string
          description: Date when the order was created, in RFC3339 (subset of ISO8601) format
          format: date-time
        orderType:
          type: string
          description: Name of the Resource Order type
        priority:
          type: integer
          description: 'A way that can be used by consumers to prioritize orders in OM system (such as: 0 is the highest priority, and 4 the lowest)'
          example: 0
        requestedCompletionDate:
          type: string
          description: Requested delivery date from the requestor perspective, in RFC3339 (subset of ISO8601) format
          format: date-time
        requestedStartDate:
          type: string
          description: Order start date wished by the requestor, in RFC3339 (subset of ISO8601) format
          format: date-time
        startDate:
          type: string
          description: Date when the order was actually started, in RFC3339 (subset of ISO8601) format
          format: date-time
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOrderItem'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        state:
          $ref: '#/components/schemas/ResourceOrderStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A Resource Order is a request to provision a set of Resources (logical and physical) triggered by the request to provision a Service through a Service Order
    ResourceOrder_Create:
      type: object
      properties:
        category:
          type: string
          description: Used to categorize the order from a business perspective that can be useful for the order management system
          example: Premium
        description:
          type: string
          description: Free-text description of the Resource Order
          example: 7km of 6-fiber, double jacketed Optical Cable for Acme Inc
        externalId:
          type: string
          description: 'DEPRECATED: Use externalReference Instead. ID given by the consumer (to facilitate searches afterwards)'
          example: 'Customer Ref: 577e6b2be5e5'
        name:
          type: string
          description: A string used to give a name to the Resource Order
          example: 7km of Optical Cable for Acme Inc
        orderType:
          type: string
          description: Name of the Resource Order type
        priority:
          type: integer
          description: 'A way that can be used by consumers to prioritize orders in OM system (such as: 0 is the highest priority, and 4 the lowest)'
          example: 0
        requestedCompletionDate:
          type: string
          description: Requested delivery date from the requestor perspective, in RFC3339 (subset of ISO8601) format
          format: date-time
        requestedStartDate:
          type: string
          description: Order start date wished by the requestor, in RFC3339 (subset of ISO8601) format
          format: date-time
        startDate:
          type: string
          description: Date when the order was actually started, in RFC3339 (subset of ISO8601) format
          format: date-time
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOrderItem'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        A Resource Order is a request to provision a set of Resources (logical and physical) triggered by the request to provision a Service through a Service Order
        Skipped properties: id,href,completionDate,orderDate,state,expectedCompletionDate,cancellationDate,cancellationReason
    ResourceOrder_Update:
      type: object
      properties:
        cancellationDate:
          type: string
          description: Date when the order is cancelled - if cancelled, in RFC3339 (subset of ISO8601) format
          format: date-time
        cancellationReason:
          type: string
          description: Reason why the order is cancelled - if cancelled
          example: Cables no longer required by customer
        category:
          type: string
          description: Used to categorize the order from a business perspective that can be useful for the order management system
          example: Premium
        description:
          type: string
          description: Free-text description of the Resource Order
          example: 7km of 6-fiber, double jacketed Optical Cable for Acme Inc
        expectedCompletionDate:
          type: string
          description: Date when the order is expected to be completed, in RFC3339 (subset of ISO8601) format
          format: date-time
        externalId:
          type: string
          description: 'DEPRECATED: Use externalReference Instead. ID given by the consumer (to facilitate searches afterwards)'
          example: 'Customer Ref: 577e6b2be5e5'
        name:
          type: string
          description: A string used to give a name to the Resource Order
          example: 7km of Optical Cable for Acme Inc
        orderType:
          type: string
          description: Name of the Resource Order type
        priority:
          type: integer
          description: 'A way that can be used by consumers to prioritize orders in OM system (such as: 0 is the highest priority, and 4 the lowest)'
          example: 0
        requestedCompletionDate:
          type: string
          description: Requested delivery date from the requestor perspective, in RFC3339 (subset of ISO8601) format
          format: date-time
        requestedStartDate:
          type: string
          description: Order start date wished by the requestor, in RFC3339 (subset of ISO8601) format
          format: date-time
        startDate:
          type: string
          description: Date when the order was actually started, in RFC3339 (subset of ISO8601) format
          format: date-time
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOrderItem'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        state:
          $ref: '#/components/schemas/ResourceOrderStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        A Resource Order is a request to provision a set of Resources (logical and physical) triggered by the request to provision a Service through a Service Order
        Skipped properties: id,href,orderDate,completionDate
    ResourceOrderItem:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the line item (such as a sequence number 01, 02, 03)
          example: '01'
        href:
          type: string
          description: Hyperlink reference
          format: uri
        quantity:
          type: integer
          description: Quantity ordered
          example: 7000
        action:
          $ref: '#/components/schemas/OrderItemActionType'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        orderItemRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOrderItemRelationship'
        resource:
          $ref: '#/components/schemas/ResourceRefOrValue'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        state:
          $ref: '#/components/schemas/ResourceOrderItemStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: An identified part of the order. A resource order is decomposed into one or more order items.
    ResourceOrderItemRef:
      type: object
      properties:
        itemId:
          type: string
          description: Identifier of the line item
          example: '01'
        resourceOrderHref:
          type: string
          description: Link to the order to which this item belongs to
          format: uri
          example: http://host/resourceOrder/4b22f7cad22d
        resourceOrderId:
          type: string
          description: Identifier of the resource order that this item belongs to
          example: 4b22f7cad22d
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation
          example: PhysicalResource
    ResourceOrderItemRelationship:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        relationshipType:
          type: string
          description: Type of the order item relationship
          example: dependency
        orderItem:
          $ref: '#/components/schemas/ResourceOrderItemRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    ResourceOrderItemStateType:
      type: string
      description: Possible values for the state of the order item
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - assessingCancellation
        - pendingCancellation
    ResourceOrderRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the related resource order
          example: fde8c6a47450
        href:
          type: string
          description: Hyperlink to access the related Resource Order
          example: http://host/resourceOrder/fde8c6a47450
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation
    ResourceOrderStateType:
      type: string
      description: Possible values for the state of the order
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - partial
        - assessingCancellation
        - pendingCancellation
    ResourceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    ResourceRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type.
        href:
          type: string
          description: The URI for the object itself.
        category:
          type: string
          description: Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource
        description:
          type: string
          description: free-text description of the resource
        endOperatingDate:
          type: string
          description: A date time( DateTime). The date till the resource is operating
          format: date-time
        name:
          type: string
          description: A string used to give a name to the resource
        resourceVersion:
          type: string
          description: A field that identifies the specific version of an instance of a resource.
        startOperatingDate:
          type: string
          description: A date time( DateTime). The date from which the resource is operating
          format: date-time
        activationFeature:
          type: array
          description: Configuration features
          items:
            $ref: '#/components/schemas/Feature'
        administrativeState:
          $ref: '#/components/schemas/ResourceAdministrativeStateType'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        operationalState:
          $ref: '#/components/schemas/ResourceOperationalStateType'
        place:
          $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        resourceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRelationship'
        resourceSpecification:
          $ref: '#/components/schemas/ResourceSpecificationRef'
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatusType'
        usageState:
          $ref: '#/components/schemas/ResourceUsageStateType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Resource is an abstract entity that describes the common set of attributes shared by all concrete resources. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Resource entity and not the related ResourceRefOrValue class itself
    ResourceRelationship:
      required:
        - relationshipType
        - resource
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        relationshipType:
          type: string
          description: 'Type of the resource relationship, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (eg: an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful'
          example: bundled
        resource:
          $ref: '#/components/schemas/ResourceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Linked resources to the one instantiate, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (e.g. an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful
    ResourceSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Resource Specification version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: |-
        Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
        A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
    ResourceStatusType:
      type: string
      description: ResourceStatusType enumerations
      enum:
        - standby
        - alarm
        - available
        - reserved
        - unknown
        - suspended
    ResourceUsageStateType:
      type: string
      description: ResourceUsageStateType enumerations
      enum:
        - idle
        - active
        - busy
    TaskStateType:
      type: string
      description: Possible values for the state of a task
      enum:
        - accepted
        - terminatedWithError
        - inProgress
        - done
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    ResourceOrderCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ResourceOrderCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ResourceOrderCreateEventPayload:
      type: object
      properties:
        resourceOrder:
          $ref: '#/components/schemas/ResourceOrder'
      description: The event data structure
    ResourceOrderAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/ResourceOrderAttributeValueChangeEventPayload'
      description: The notification data structure
    ResourceOrderAttributeValueChangeEventPayload:
      type: object
      properties:
        resourceOrder:
          $ref: '#/components/schemas/ResourceOrder'
      description: The event data structure
    ResourceOrderStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ResourceOrderStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ResourceOrderStateChangeEventPayload:
      type: object
      properties:
        resourceOrder:
          $ref: '#/components/schemas/ResourceOrder'
      description: The event data structure
    ResourceOrderDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ResourceOrderDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ResourceOrderDeleteEventPayload:
      type: object
      properties:
        resourceOrder:
          $ref: '#/components/schemas/ResourceOrder'
      description: The event data structure
    ResourceOrderInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/ResourceOrderInformationRequiredEventPayload'
      description: The notification data structure
    ResourceOrderInformationRequiredEventPayload:
      type: object
      properties:
        resourceOrder:
          $ref: '#/components/schemas/ResourceOrder'
      description: The event data structure
    CancelResourceOrderCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/CancelResourceOrderCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    CancelResourceOrderCreateEventPayload:
      type: object
      properties:
        cancelResourceOrder:
          $ref: '#/components/schemas/CancelResourceOrder'
      description: The event data structure
    CancelResourceOrderStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/CancelResourceOrderStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    CancelResourceOrderStateChangeEventPayload:
      type: object
      properties:
        cancelResourceOrder:
          $ref: '#/components/schemas/CancelResourceOrder'
      description: The event data structure
    CancelResourceOrderInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/CancelResourceOrderInformationRequiredEventPayload'
      description: The notification data structure
    CancelResourceOrderInformationRequiredEventPayload:
      type: object
      properties:
        cancelResourceOrder:
          $ref: '#/components/schemas/CancelResourceOrder'
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'