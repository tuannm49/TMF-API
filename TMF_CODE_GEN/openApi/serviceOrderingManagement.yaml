openapi: 3.0.1
info:
  title: ServiceOrdering
  description: >-
    ## TMF API Reference : TMF 641 - Service Ordering Management

     Version 5.0 

    The Service Order API provides a standardized mechanism for managing Service Order, a type of
    order which can be used to place an order between internal Customer Order management system to
    service order management system or between a service provider and a partner and vice versa.


    ### Service Order resource

    A service order will describe a list of service order items.  A service order item references an
    action on an existing or future  service.  By  service  we  designed  Customer Facing  Service 
    (CFS)  as  well  as  Resource Facing Service (RFS).

    From a component perspective, a service order should be available

    - from a Service Orchestration Component (and it could mix CFS and RFS)

    - from an Infrastructure Control & Management component (and it would have only RFS)


    ### TMF641 performs the following operations on service order resource :

    - Retrieval of a service order or a collection of service orders depending on filter criteria

    - Partial update of a service order (including updating rules)

    - Creation of a service order (including default values and creation rules)

    - Deletion of service order (for administration purposes)

    - Notification of events on Service order


    **Cancel Service Order resource**


    This resource is used to request a service order cancellation.


    **TMF641 provides following operations on Cancel Service Order resource :**


    - Retrieval of a cancel service order or a collection of cancel service orders 

    - Creation of a cancel service order 

    - Notification of events on cancel service order.


    Copyright Â© TM Forum 2020. All Rights Reserved
  version: 5.0.0
servers:
  - url: '{apiRoot}/tmf-api/serviceOrdering/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot'
        enum:
          - 'https://serverRoot'
tags:
  - name: serviceOrder
    description: Operations for ServiceOrder Resource
  - name: cancelServiceOrder
    description: Operations for CancelServiceOrder Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /cancelServiceOrder:
    get:
      tags:
        - cancelServiceOrder
      summary: List or find CancelServiceOrder objects
      description: List or find CancelServiceOrder objects
      operationId: listCancelServiceOrder
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200CancelServiceOrderArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - cancelServiceOrder
      summary: Creates a CancelServiceOrder
      description: This operation creates a CancelServiceOrder entity.
      operationId: createCancelServiceOrder
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/CancelServiceOrder_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201CancelServiceOrder'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/cancelServiceOrder/{id}':
    get:
      tags:
        - cancelServiceOrder
      summary: Retrieves a CancelServiceOrder by ID
      description: >-
        This operation retrieves a CancelServiceOrder entity. Attribute selection enabled for all
        first level attributes.
      operationId: retrieveCancelServiceOrder
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200CancelServiceOrder_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/cancelServiceOrderCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CancelServiceOrderCreateEvent
      description: Example of a client listener for receiving the notification CancelServiceOrderCreateEvent
      operationId: cancelServiceOrderCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/CancelServiceOrderCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/cancelServiceOrderInformationRequiredEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CancelServiceOrderInformationRequiredEvent
      description: >-
        Example of a client listener for receiving the notification
        CancelServiceOrderInformationRequiredEvent
      operationId: cancelServiceOrderInformationRequiredEvent
      requestBody:
        $ref: '#/components/requestBodies/CancelServiceOrderInformationRequiredEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/cancelServiceOrderStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CancelServiceOrderStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CancelServiceOrderStateChangeEvent
      operationId: cancelServiceOrderStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CancelServiceOrderStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceOrderAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceOrderAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceOrderAttributeValueChangeEvent
      operationId: serviceOrderAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrderAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceOrderCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceOrderCreateEvent
      description: Example of a client listener for receiving the notification ServiceOrderCreateEvent
      operationId: serviceOrderCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrderCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceOrderDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceOrderDeleteEvent
      description: Example of a client listener for receiving the notification ServiceOrderDeleteEvent
      operationId: serviceOrderDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrderDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceOrderInformationRequiredEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceOrderInformationRequiredEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceOrderInformationRequiredEvent
      operationId: serviceOrderInformationRequiredEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrderInformationRequiredEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceOrderJeopardyEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceOrderJeopardyEvent
      description: Example of a client listener for receiving the notification ServiceOrderJeopardyEvent
      operationId: serviceOrderJeopardyEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrderJeopardyEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceOrderMilestoneEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceOrderMilestoneEvent
      description: Example of a client listener for receiving the notification ServiceOrderMilestoneEvent
      operationId: serviceOrderMilestoneEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrderMilestoneEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceOrderStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceOrderStateChangeEvent
      description: Example of a client listener for receiving the notification ServiceOrderStateChangeEvent
      operationId: serviceOrderStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrderStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /serviceOrder:
    get:
      tags:
        - serviceOrder
      summary: List or find ServiceOrder objects
      description: List or find ServiceOrder objects
      operationId: listServiceOrder
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceOrderArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - serviceOrder
      summary: Creates a ServiceOrder
      description: This operation creates a ServiceOrder entity.
      operationId: createServiceOrder
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrder_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ServiceOrder'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/serviceOrder/{id}':
    get:
      tags:
        - serviceOrder
      summary: Retrieves a ServiceOrder by ID
      description: >-
        This operation retrieves a ServiceOrder entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveServiceOrder
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceOrder_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - serviceOrder
      summary: Deletes a ServiceOrder
      description: This operation deletes a ServiceOrder entity.
      operationId: deleteServiceOrder
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - serviceOrder
      summary: Updates partially a ServiceOrder
      description: This operation updates partially a ServiceOrder entity.
      operationId: patchServiceOrder
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceOrder_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceOrder_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
    AppointmentRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: 'Refers an appointment, such as a Customer presentation or internal meeting or site visit'
          properties:
            description:
              type: string
              description: An explanatory text regarding the appointment made with a party
      discriminator:
        propertyName: '@type'
        mapping:
          AppointmentRef: '#/components/schemas/AppointmentRef'
    AppointmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: 'Refers an appointment, such as a Customer presentation or internal meeting or site visit'
          properties:
            description:
              type: string
              description: An explanatory text regarding the appointment made with a party
      discriminator:
        propertyName: '@type'
        mapping:
          AppointmentRef: '#/components/schemas/AppointmentRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    CalendarPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod'
    CalendarPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
          required:
            - status
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_FVO'
    CalendarPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod_MVO'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_MVO'
    CancelOrder:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A Order cancel is a type of task which  can  be used to place a request to cancel an
            order
          properties:
            requestedCancellationDate:
              type: string
              format: date-time
              description: Date when the submitter wants the order to be cancelled
            effectiveCancellationDate:
              type: string
              format: date-time
              description: Date when the order is cancelled.
            cancellationReason:
              type: string
              description: Reason why the order is cancelled.
            state:
              $ref: '#/components/schemas/TaskStateType'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelOrder: '#/components/schemas/CancelOrder'
          CancelServiceOrder: '#/components/schemas/CancelServiceOrder'
    CancelOrder_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A Order cancel is a type of task which  can  be used to place a request to cancel an
            order
          properties:
            requestedCancellationDate:
              type: string
              format: date-time
              description: Date when the submitter wants the order to be cancelled
            cancellationReason:
              type: string
              description: Reason why the order is cancelled.
      discriminator:
        propertyName: '@type'
        mapping:
          CancelOrder: '#/components/schemas/CancelOrder_FVO'
          CancelServiceOrder: '#/components/schemas/CancelServiceOrder_FVO'
    CancelServiceOrder:
      allOf:
        - $ref: '#/components/schemas/CancelOrder'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Request for cancellation an existing Service order
          properties:
            serviceOrder:
              $ref: '#/components/schemas/ServiceOrderRef'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelServiceOrder: '#/components/schemas/CancelServiceOrder'
    CancelServiceOrderCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CancelServiceOrderCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CancelServiceOrderCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelServiceOrderCreateEvent: '#/components/schemas/CancelServiceOrderCreateEvent'
    CancelServiceOrderCreateEventPayload:
      type: object
      description: CancelServiceOrderCreateEvent Payload structure
      properties:
        CancelServiceOrder:
          $ref: '#/components/schemas/CancelServiceOrder'
    CancelServiceOrderInformationRequiredEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CancelServiceOrderInformationRequiredEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CancelServiceOrderInformationRequiredEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelServiceOrderInformationRequiredEvent: '#/components/schemas/CancelServiceOrderInformationRequiredEvent'
    CancelServiceOrderInformationRequiredEventPayload:
      type: object
      description: CancelServiceOrderInformationRequiredEventPayload Payload structure
      properties:
        cancelServiceOrder:
          $ref: '#/components/schemas/CancelServiceOrder'
        informationRequired:
          $ref: '#/components/schemas/InformationRequiredArray'
    CancelServiceOrderStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CancelServiceOrderStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CancelServiceOrderStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CancelServiceOrderStateChangeEvent: '#/components/schemas/CancelServiceOrderStateChangeEvent'
    CancelServiceOrderStateChangeEventPayload:
      type: object
      description: CancelServiceOrderStateChangeEvent Payload structure
      properties:
        CancelServiceOrder:
          $ref: '#/components/schemas/CancelServiceOrder'
    CancelServiceOrder_FVO:
      allOf:
        - $ref: '#/components/schemas/CancelOrder_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: Request for cancellation an existing Service order
          properties:
            serviceOrder:
              $ref: '#/components/schemas/ServiceOrderRef_FVO'
          required:
            - ServiceOrder
            - serviceOrder
      discriminator:
        propertyName: '@type'
        mapping:
          CancelServiceOrder: '#/components/schemas/CancelServiceOrder_FVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRefOrValue:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity'
          EntityRef: '#/components/schemas/EntityRef'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    EntityRefOrValue_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity'
          EntityRef: '#/components/schemas/EntityRef'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRelationship:
      type: object
      description: A uni-directionmal relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    EntityRelationship_FVO:
      type: object
      description: A uni-directionmal relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
      required:
        - relationshipType
        - id
        - '@referredType'
        - '@type'
    EntityRelationship_MVO:
      type: object
      description: A uni-directionmal relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    ErrorMessage:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: represents an Error
          properties:
            code:
              type: string
              description: error code
            reason:
              type: string
              description: Explanation of the reason for the error
            message:
              type: string
              description: More details and corrective actions related to the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            referenceError:
              type: string
              description: URI of documentation describing the error
      discriminator:
        propertyName: '@type'
        mapping:
          ErrorMessage: '#/components/schemas/ErrorMessage'
          ServiceOrderErrorMessage: '#/components/schemas/ServiceOrderErrorMessage'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    ExternalReference:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: External reference of the individual or reference in other system
          properties:
            externalReferenceType:
              type: string
              description: Type of the external reference
            href:
              type: string
              description: Hyperlink reference
            name:
              type: string
              description: name given to the external reference
            id:
              type: string
              description: unique identifier
            '@type':
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalReference: '#/components/schemas/ExternalReference'
    ExternalReference_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: External reference of the individual or reference in other system
          properties:
            externalReferenceType:
              type: string
              description: Type of the external reference
            href:
              type: string
              description: Hyperlink reference
            name:
              type: string
              description: name given to the external reference
            id:
              type: string
              description: unique identifier
            '@type':
              type: string
          required:
            - '@type'
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalReference: '#/components/schemas/ExternalReference_FVO'
    ExternalReference_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: External reference of the individual or reference in other system
          properties:
            externalReferenceType:
              type: string
              description: Type of the external reference
            href:
              type: string
              description: Hyperlink reference
            name:
              type: string
              description: name given to the external reference
            id:
              type: string
              description: unique identifier
            '@type':
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalReference: '#/components/schemas/ExternalReference_MVO'
    Feature:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature'
    FeatureRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship'
    FeatureRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_FVO'
    FeatureRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_MVO'
    Feature_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship_FVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_FVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_FVO'
    Feature_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship_MVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_MVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_MVO'
    GeographicAddress:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_FVO'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress_FVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_MVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_MVO'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress_MVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicLocation:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
    GeographicLocationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicLocationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocation_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
          required:
            - '@type'
    GeographicLocation_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
    GeographicSite:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSiteRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSite_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_FVO'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSite_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_MVO'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSubAddress:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
          required:
            - subUnitNumber
            - subUnitType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
    GeographicSubAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_FVO'
    GeographicSubAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_MVO'
    HourPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod'
    HourPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_MVO'
    InformationRequiredArray:
      items:
        $ref: '#/components/schemas/JsonPatch'
      minItems: 1
      type: array
      description: InformationRequiredArray generic structure
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    Intent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent'
    IntentExpression:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression'
          TurtleExpression: '#/components/schemas/TurtleExpression'
          JsonLdExpression: '#/components/schemas/JsonLdExpression'
          RdfXmlExpression: '#/components/schemas/RdfXmlExpression'
    IntentExpression_MVO:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_MVO'
          TurtleExpression: '#/components/schemas/TurtleExpression_MVO'
          JsonLdExpression: '#/components/schemas/JsonLdExpression_MVO'
          RdfXmlExpression: '#/components/schemas/RdfXmlExpression_MVO'
    IntentRef:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
    IntentRefOrValue:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent'
    IntentRefOrValue_FVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent_FVO'
    IntentRefOrValue_MVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef_MVO'
        - $ref: '#/components/schemas/Intent_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
          Intent: '#/components/schemas/Intent_MVO'
    IntentRef_MVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
    Intent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_FVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_FVO'
    Intent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_MVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_MVO'
    JeopardyAlert:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A JeopardyAlert represents a predicted exception during a process that may cause a risk
            to complete successfully the process.
          properties:
            id:
              type: string
              description: identifier of the JeopardyAlert
            alertDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the alert issued
            name:
              type: string
              description: A string used to give a name to the jeopardy alert
            jeopardyType:
              type: string
              description: 'A string represents the type of jeopardy/risk like Normal, Hazard, Critical, ...'
            exception:
              type: string
              description: ' The exception associated with this jeopardy alert'
            message:
              type: string
              description: A string represents the message of the alert
      discriminator:
        propertyName: '@type'
        mapping:
          JeopardyAlert: '#/components/schemas/JeopardyAlert'
          ServiceOrderJeopardyAlert: '#/components/schemas/ServiceOrderJeopardyAlert'
    JsonLdExpression:
      allOf:
        - $ref: '#/components/schemas/IntentExpression'
        - type: object
          description: JsonLdExpression is the ontology-encoded form of the Intent
          properties:
            expressionValue:
              type: object
              description: >-
                JsonLdExpression is the ontology-encoded form of the Intent as JSON-LD as defined in
                https://www.w3.org/TR/json-ld/ should be validated against
                https://raw.githubusercontent.com/json-ld/json-ld.org/main/schemas/jsonld-schema.json
    JsonLdExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_MVO'
        - type: object
          description: JsonLdExpression is the ontology-encoded form of the Intent
          properties:
            expressionValue:
              type: object
              description: >-
                JsonLdExpression is the ontology-encoded form of the Intent as JSON-LD as defined in
                https://www.w3.org/TR/json-ld/ should be validated against
                https://raw.githubusercontent.com/json-ld/json-ld.org/main/schemas/jsonld-schema.json
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatch_FVO:
      type: object
      description: Path  structure
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          type: object
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
      required:
        - op
        - path
    JsonPatch_MVO:
      type: object
      description: Path  structure
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          type: object
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    Milestone:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Milestone represents an action or event marking a significant change or stage in a
            process like an order process.
          properties:
            description:
              type: string
              description: free-text description of the Milestone
            id:
              type: string
              description: identifier of the Milestone
            status:
              description: The milestone status
              type: string
              enum:
                - Yet-To-Reach
                - Completed
                - Violated
            milestoneDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the milestone happens
            name:
              type: string
              description: A string used to give a name to the milestone
            message:
              type: string
              description: A string represents the message of the milestone
      discriminator:
        propertyName: '@type'
        mapping:
          Milestone: '#/components/schemas/Milestone'
          ServiceOrderMilestone: '#/components/schemas/ServiceOrderMilestone'
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    OrderItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the entity managed by the item
    OrderSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Order specification reference
          properties:
            version:
              type: string
              description: order specification version
      discriminator:
        propertyName: '@type'
        mapping:
          OrderSpecificationRef: '#/components/schemas/OrderSpecificationRef'
    OrderSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Order specification reference
          properties:
            version:
              type: string
              description: order specification version
      discriminator:
        propertyName: '@type'
        mapping:
          OrderSpecificationRef: '#/components/schemas/OrderSpecificationRef_MVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    Place:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place'
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
    PlaceRef:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicAddress'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO'
        - $ref: '#/components/schemas/PlaceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    PlaceRef_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    Place_FVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
    Place_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
    PolicyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef'
    PolicyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
    PolicyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RdfXmlExpression:
      allOf:
        - $ref: '#/components/schemas/IntentExpression'
        - type: object
          description: >-
            RdfXmlExpression is the ontology-encoded form of the Intent as RDF-XML as defined in
            https://www.w3.org/TR/rdf-syntax-grammar/
          properties:
            expressionValue:
              type: string
              description: RDF XML Expression value encoded object
    RdfXmlExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_MVO'
        - type: object
          description: >-
            RdfXmlExpression is the ontology-encoded form of the Intent as RDF-XML as defined in
            https://www.w3.org/TR/rdf-syntax-grammar/
          properties:
            expressionValue:
              type: string
              description: RDF XML Expression value encoded object
    RelatedEntityRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue'
    RelatedEntityRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_FVO'
    RelatedEntityRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    RelatedPlaceRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
    RelatedPlaceRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_FVO'
          required:
            - role
            - place
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
    RelatedPlaceRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
    RelatedServiceOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem'
    RelatedServiceOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem_MVO'
    ResourceRef:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
    ResourceRef_MVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
    Service:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service'
    ServiceOperatingStatusType:
      enum:
        - pending
        - configured
        - starting
        - running
        - degraded
        - failed
        - limited
        - stopping
        - stopped
        - unknown
      type: string
      description: Valid values for the Operating status of the service
    ServiceOrder:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            cancellationDate:
              type: string
              format: date-time
              description: 'Date when the order is cancelled. This is used when order is cancelled. '
            cancellationReason:
              type: string
              description: 'Reason why the order is cancelled. This is used when order is cancelled. '
            category:
              type: string
              description: 'Used to categorize the order, useful for the OM system, such as: Broadband, TVOption'
            completionDate:
              type: string
              format: date-time
              description: Effective delivery date amended by the provider
            description:
              type: string
              description: A free-text description of the service order
            expectedCompletionDate:
              type: string
              format: date-time
              description: Expected delivery date amended by the provider
            externalReference:
              type: array
              description: ''
              items:
                $ref: '#/components/schemas/ExternalReference'
            note:
              type: array
              description: >-
                Extra-information about the order; e.g. useful to add extra delivery information
                that could be useful for a human process
              items:
                $ref: '#/components/schemas/Note'
            notificationContact:
              type: string
              description: Contact attached to the order to send back information regarding this order
            orderRelationship:
              type: array
              description: 'A list of service orders related to this order (e.g. prerequisite, dependent on)'
              items:
                $ref: '#/components/schemas/ServiceOrderRelationship'
            serviceOrderItem:
              type: array
              description: A list of service order items to be processed by this order
              items:
                $ref: '#/components/schemas/ServiceOrderItem'
            priority:
              type: string
              description: Can be used by consumers to prioritize orders in a Service Order Management system
            relatedParty:
              type: array
              description: A list of parties which are involved in this order and the role they are playing
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            requestedCompletionDate:
              type: string
              format: date-time
              description: Requested delivery date from the requestors perspective
            requestedStartDate:
              type: string
              format: date-time
              description: Order start date wished by the requestor
            startDate:
              type: string
              format: date-time
              description: Date when the order was started for processing
            milestone:
              type: array
              description: A list of milestones related to this order
              items:
                $ref: '#/components/schemas/ServiceOrderMilestone'
            jeopardyAlert:
              type: array
              description: A list of jeopardy alerts related to this order
              items:
                $ref: '#/components/schemas/ServiceOrderJeopardyAlert'
            errorMessage:
              $ref: '#/components/schemas/ServiceOrderErrorMessage'
            orderSpecification:
              $ref: '#/components/schemas/OrderSpecificationRef'
            orderCharacteristic:
              type: array
              description: 'A list of characteristics that characterize this order '
              items:
                $ref: '#/components/schemas/Characteristic'
            state:
              $ref: '#/components/schemas/ServiceOrderStateType'
            orderDate:
              type: string
              format: date-time
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrder: '#/components/schemas/ServiceOrder'
    ServiceOrderAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceOrderAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderAttributeValueChangeEvent: '#/components/schemas/ServiceOrderAttributeValueChangeEvent'
    ServiceOrderAttributeValueChangeEventPayload:
      type: object
      description: ServiceOrderAttributeValueChangeEventPayload
      properties:
        ServiceOrder:
          $ref: '#/components/schemas/ServiceOrder'
    ServiceOrderCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceOrderCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderCreateEvent: '#/components/schemas/ServiceOrderCreateEvent'
    ServiceOrderCreateEventPayload:
      type: object
      description: ServiceOrderCreateEventPayload
      properties:
        ServiceOrder:
          $ref: '#/components/schemas/ServiceOrder'
    ServiceOrderDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceOrderDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderDeleteEvent: '#/components/schemas/ServiceOrderDeleteEvent'
    ServiceOrderDeleteEventPayload:
      type: object
      description: ServiceOrderDeleteEventPayload
      properties:
        ServiceOrder:
          $ref: '#/components/schemas/ServiceOrder'
    ServiceOrderErrorMessage:
      allOf:
        - $ref: '#/components/schemas/ErrorMessage'
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A ServiceOrderErrorMessage represents an error that causes a status change in a service
            order.
          properties:
            timestamp:
              type: string
              format: date-time
              description: Date when the error happened
            serviceOrderItem:
              type: array
              description: A list of order item references corresponded to this error
              items:
                $ref: '#/components/schemas/ServiceOrderItemRef'
            '@type':
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderErrorMessage: '#/components/schemas/ServiceOrderErrorMessage'
    ServiceOrderInformationRequiredEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceOrderInformationRequiredEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderInformationRequiredEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderInformationRequiredEvent: '#/components/schemas/ServiceOrderInformationRequiredEvent'
    ServiceOrderInformationRequiredEventPayload:
      type: object
      description: ServiceOrderInformationRequiredEventPayload Payload structure
      properties:
        informationRequired:
          $ref: '#/components/schemas/InformationRequiredArray'
        serviceOrder:
          $ref: '#/components/schemas/ServiceOrderRef'
    ServiceOrderItem:
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity ordered
          minItems: 0
        state:
          $ref: '#/components/schemas/ServiceOrderItemStateType'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        serviceOrderItemRelationship:
          type: array
          description: A list of order items related to this order item
          items:
            $ref: '#/components/schemas/ServiceOrderItemRelationship'
        errorMessage:
          type: array
          description: the error(s) cause an order item status change
          items:
            $ref: '#/components/schemas/ServiceOrderItemErrorMessage'
        serviceOrderItem:
          type: array
          description: A list of order items embedded to this order item
          items:
            $ref: '#/components/schemas/ServiceOrderItem'
        service:
          $ref: '#/components/schemas/ServiceRefOrValue'
        id:
          type: string
          description: Identifier of the individual line item
        action:
          $ref: '#/components/schemas/OrderItemActionType'
        modifyPath:
          type: array
          description: >-
            A list of modification items provided for the service update when serviceOrderItem
            action is modify
          items:
            $ref: '#/components/schemas/JsonPatch'
    ServiceOrderItemErrorMessage:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A ServiceOrderItemErrorMessage represents an error that causes a status change in a
            service order item.
          properties:
            code:
              type: string
              description: error code
            message:
              type: string
              description: More details and corrective actions related to the error
            reason:
              type: string
              description: Explanation of the reason for the error
            referenceError:
              type: string
              format: uri
              description: URI of documentation describing the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            timestamp:
              type: string
              format: date-time
              description: Date when the error happened
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemErrorMessage: '#/components/schemas/ServiceOrderItemErrorMessage'
    ServiceOrderItemErrorMessage_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A ServiceOrderItemErrorMessage represents an error that causes a status change in a
            service order item.
          properties:
            code:
              type: string
              description: error code
            message:
              type: string
              description: More details and corrective actions related to the error
            reason:
              type: string
              description: Explanation of the reason for the error
            referenceError:
              type: string
              format: uri
              description: URI of documentation describing the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            timestamp:
              type: string
              format: date-time
              description: Date when the error happened
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemErrorMessage: '#/components/schemas/ServiceOrderItemErrorMessage_MVO'
    ServiceOrderItemRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            itemId:
              type: string
              description: Identifier of the line item
            serviceOrderHref:
              type: string
              format: uri
              description: Link to the order to which this item belongs to
            serviceOrderId:
              type: string
              description: Identifier of the order that this item belongs to
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemRef: '#/components/schemas/ServiceOrderItemRef'
    ServiceOrderItemRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            itemId:
              type: string
              description: Identifier of the line item
            serviceOrderHref:
              type: string
              format: uri
              description: Link to the order to which this item belongs to
            serviceOrderId:
              type: string
              description: Identifier of the order that this item belongs to
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemRef: '#/components/schemas/ServiceOrderItemRef_MVO'
    ServiceOrderItemRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Linked service order item to the one containing this attribute
          properties:
            orderItem:
              $ref: '#/components/schemas/ServiceOrderItemRef'
            relationshipType:
              type: string
              description: >-
                The type of related order item, can be: dependency if the order item needs to be not
                started until another order item is complete
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemRelationship: '#/components/schemas/ServiceOrderItemRelationship'
    ServiceOrderItemRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Linked service order item to the one containing this attribute
          properties:
            orderItem:
              $ref: '#/components/schemas/ServiceOrderItemRef_MVO'
            relationshipType:
              type: string
              description: >-
                The type of related order item, can be: dependency if the order item needs to be not
                started until another order item is complete
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemRelationship: '#/components/schemas/ServiceOrderItemRelationship_MVO'
    ServiceOrderItemStateType:
      type: object
      description: Possible values for the state of the order item
      allOf:
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemStateType: '#/components/schemas/ServiceOrderItemStateType'
    ServiceOrderItemStateType_MVO:
      type: object
      description: Possible values for the state of the order item
      allOf:
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderItemStateType: '#/components/schemas/ServiceOrderItemStateType_MVO'
    ServiceOrderItem_FVO:
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity ordered
          minItems: 0
        state:
          $ref: '#/components/schemas/ServiceOrderItemStateType'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        serviceOrderItemRelationship:
          type: array
          description: A list of order items related to this order item
          items:
            $ref: '#/components/schemas/ServiceOrderItemRelationship'
        errorMessage:
          type: array
          description: the error(s) cause an order item status change
          items:
            $ref: '#/components/schemas/ServiceOrderItemErrorMessage'
        serviceOrderItem:
          type: array
          description: A list of order items embedded to this order item
          items:
            $ref: '#/components/schemas/ServiceOrderItem_FVO'
        service:
          $ref: '#/components/schemas/ServiceRefOrValue_FVO'
        id:
          type: string
          description: Identifier of the individual line item
        action:
          $ref: '#/components/schemas/OrderItemActionType'
        modifyPath:
          type: array
          description: >-
            A list of modification items provided for the service update when serviceOrderItem
            action is modify
          items:
            $ref: '#/components/schemas/JsonPatch_FVO'
      required:
        - id
        - action
        - service
    ServiceOrderItem_MVO:
      type: object
      properties:
        quantity:
          type: integer
          description: Quantity ordered
          minItems: 0
        state:
          $ref: '#/components/schemas/ServiceOrderItemStateType_MVO'
        appointment:
          $ref: '#/components/schemas/AppointmentRef_MVO'
        serviceOrderItemRelationship:
          type: array
          description: A list of order items related to this order item
          items:
            $ref: '#/components/schemas/ServiceOrderItemRelationship_MVO'
        errorMessage:
          type: array
          description: the error(s) cause an order item status change
          items:
            $ref: '#/components/schemas/ServiceOrderItemErrorMessage_MVO'
        serviceOrderItem:
          type: array
          description: A list of order items embedded to this order item
          items:
            $ref: '#/components/schemas/ServiceOrderItem_MVO'
        service:
          $ref: '#/components/schemas/ServiceRefOrValue_MVO'
        id:
          type: string
          description: Identifier of the individual line item
        action:
          $ref: '#/components/schemas/OrderItemActionType'
        modifyPath:
          type: array
          description: >-
            A list of modification items provided for the service update when serviceOrderItem
            action is modify
          items:
            $ref: '#/components/schemas/JsonPatch_MVO'
    ServiceOrderJeopardyAlert:
      allOf:
        - $ref: '#/components/schemas/JeopardyAlert'
        - type: object
          description: >-
            A ServiceOrderJeopardyAlert represents a predicted exception during a service order
            processing that would brings risk to complete successfully the ordetr.
          properties:
            serviceOrderItem:
              type: array
              description: A list of order item references corresponded to this alert
              items:
                $ref: '#/components/schemas/ServiceOrderItemRef'
    ServiceOrderJeopardyEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceOrderJeopardyEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderJeopardyEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderJeopardyEvent: '#/components/schemas/ServiceOrderJeopardyEvent'
    ServiceOrderJeopardyEventPayload:
      type: object
      description: ServiceOrderJeopardyEventPayload
      properties:
        ServiceOrder:
          $ref: '#/components/schemas/ServiceOrder'
    ServiceOrderMilestone:
      allOf:
        - $ref: '#/components/schemas/Milestone'
        - type: object
          description: >-
            ServiceOrderMilestone represents an action or event marking a significant change or
            stage in processing of a service order.
          properties:
            serviceOrderItem:
              type: array
              description: A list of order item references corresponded to this milestone
              items:
                $ref: '#/components/schemas/ServiceOrderItemRef'
    ServiceOrderMilestoneEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceOrderMilestoneEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderMilestoneEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderMilestoneEvent: '#/components/schemas/ServiceOrderMilestoneEvent'
    ServiceOrderMilestoneEventPayload:
      type: object
      description: ServiceOrderMilestoneEventPayload
      properties:
        ServiceOrder:
          $ref: '#/components/schemas/ServiceOrder'
    ServiceOrderRef:
      type: object
      description: >-
        Service Order reference. Useful to understand the which was the Service order through which
        the service was instantiated in the service inventory
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderRef: '#/components/schemas/ServiceOrderRef'
    ServiceOrderRef_FVO:
      type: object
      description: >-
        Service Order reference. Useful to understand the which was the Service order through which
        the service was instantiated in the service inventory
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderRef: '#/components/schemas/ServiceOrderRef_FVO'
    ServiceOrderRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Linked service order to the one containing this attribute
          properties:
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: The id of the related order
            relationshipType:
              type: string
              description: >-
                The type of related order, such as: [dependency] if the order needs to be [not
                started] until another order item is complete (a service order in this case) or
                [cross-ref] to keep track of the source order (a productOrder)
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderRelationship: '#/components/schemas/ServiceOrderRelationship'
    ServiceOrderRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Linked service order to the one containing this attribute
          properties:
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: The id of the related order
            relationshipType:
              type: string
              description: >-
                The type of related order, such as: [dependency] if the order needs to be [not
                started] until another order item is complete (a service order in this case) or
                [cross-ref] to keep track of the source order (a productOrder)
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderRelationship: '#/components/schemas/ServiceOrderRelationship_FVO'
    ServiceOrderRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Linked service order to the one containing this attribute
          properties:
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: The id of the related order
            relationshipType:
              type: string
              description: >-
                The type of related order, such as: [dependency] if the order needs to be [not
                started] until another order item is complete (a service order in this case) or
                [cross-ref] to keep track of the source order (a productOrder)
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderRelationship: '#/components/schemas/ServiceOrderRelationship_MVO'
    ServiceOrderStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceOrderStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceOrderStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrderStateChangeEvent: '#/components/schemas/ServiceOrderStateChangeEvent'
    ServiceOrderStateChangeEventPayload:
      type: object
      description: ServiceOrderStateChangeEventPayload
      properties:
        ServiceOrder:
          $ref: '#/components/schemas/ServiceOrder'
    ServiceOrderStateType:
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - partial
        - assessingCancellation
        - pendingCancellation
      type: string
      description: Possible values for the state of the order
    ServiceOrder_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            category:
              type: string
              description: 'Used to categorize the order, useful for the OM system, such as: Broadband, TVOption'
            description:
              type: string
              description: A free-text description of the service order
            expectedCompletionDate:
              type: string
              format: date-time
              description: Expected delivery date amended by the provider
            externalReference:
              type: array
              description: ''
              items:
                $ref: '#/components/schemas/ExternalReference_FVO'
            note:
              type: array
              description: >-
                Extra-information about the order; e.g. useful to add extra delivery information
                that could be useful for a human process
              items:
                $ref: '#/components/schemas/Note'
            notificationContact:
              type: string
              description: Contact attached to the order to send back information regarding this order
            orderRelationship:
              type: array
              description: 'A list of service orders related to this order (e.g. prerequisite, dependent on)'
              items:
                $ref: '#/components/schemas/ServiceOrderRelationship_FVO'
            serviceOrderItem:
              type: array
              description: A list of service order items to be processed by this order
              items:
                $ref: '#/components/schemas/ServiceOrderItem_FVO'
            priority:
              type: string
              description: Can be used by consumers to prioritize orders in a Service Order Management system
            relatedParty:
              type: array
              description: A list of parties which are involved in this order and the role they are playing
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            requestedCompletionDate:
              type: string
              format: date-time
              description: Requested delivery date from the requestors perspective
            requestedStartDate:
              type: string
              format: date-time
              description: Order start date wished by the requestor
            orderSpecification:
              $ref: '#/components/schemas/OrderSpecificationRef'
            orderCharacteristic:
              type: array
              description: 'A list of characteristics that characterize this order '
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
          required:
            - serviceOrderItem
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrder: '#/components/schemas/ServiceOrder_FVO'
    ServiceOrder_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            cancellationDate:
              type: string
              format: date-time
              description: 'Date when the order is cancelled. This is used when order is cancelled. '
            cancellationReason:
              type: string
              description: 'Reason why the order is cancelled. This is used when order is cancelled. '
            category:
              type: string
              description: 'Used to categorize the order, useful for the OM system, such as: Broadband, TVOption'
            completionDate:
              type: string
              format: date-time
              description: Effective delivery date amended by the provider
            description:
              type: string
              description: A free-text description of the service order
            expectedCompletionDate:
              type: string
              format: date-time
              description: Expected delivery date amended by the provider
            externalReference:
              type: array
              description: ''
              items:
                $ref: '#/components/schemas/ExternalReference_MVO'
            note:
              type: array
              description: >-
                Extra-information about the order; e.g. useful to add extra delivery information
                that could be useful for a human process
              items:
                $ref: '#/components/schemas/Note_MVO'
            notificationContact:
              type: string
              description: Contact attached to the order to send back information regarding this order
            orderRelationship:
              type: array
              description: 'A list of service orders related to this order (e.g. prerequisite, dependent on)'
              items:
                $ref: '#/components/schemas/ServiceOrderRelationship_MVO'
            serviceOrderItem:
              type: array
              description: A list of service order items to be processed by this order
              items:
                $ref: '#/components/schemas/ServiceOrderItem_MVO'
            priority:
              type: string
              description: Can be used by consumers to prioritize orders in a Service Order Management system
            relatedParty:
              type: array
              description: A list of parties which are involved in this order and the role they are playing
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            requestedCompletionDate:
              type: string
              format: date-time
              description: Requested delivery date from the requestors perspective
            requestedStartDate:
              type: string
              format: date-time
              description: Order start date wished by the requestor
            startDate:
              type: string
              format: date-time
              description: Date when the order was started for processing
            orderSpecification:
              $ref: '#/components/schemas/OrderSpecificationRef_MVO'
            orderCharacteristic:
              type: array
              description: 'A list of characteristics that characterize this order '
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            state:
              $ref: '#/components/schemas/ServiceOrderStateType'
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceOrder: '#/components/schemas/ServiceOrder_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service
        entity and not the ServiceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Service'
        - $ref: '#/components/schemas/ServiceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service'
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service
        entity and not the ServiceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Service_FVO'
        - $ref: '#/components/schemas/ServiceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_FVO'
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service
        entity and not the ServiceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Service_MVO'
        - $ref: '#/components/schemas/ServiceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_MVO'
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    ServiceRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue'
            relationshipType:
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship'
    ServiceRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue_FVO'
            relationshipType:
              type: string
          required:
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_FVO'
    ServiceRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue_MVO'
            relationshipType:
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_MVO'
    ServiceSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    ServiceSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_MVO'
    ServiceStateType:
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - inactive
        - active
        - terminated
        - suspended
      type: string
      description: Valid values for the lifecycle state of the service
    Service_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature_FVO'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue_FVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship_FVO'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_FVO'
          required:
            - state
            - serviceSpecification
            - serviceDate
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_FVO'
    Service_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem_MVO'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note_MVO'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature_MVO'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue_MVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship_MVO'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue_MVO'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef_MVO'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_MVO'
    StandardIdentifier:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier'
    StandardIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_MVO'
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    TaskStateType:
      enum:
        - acknowledged
        - rejected
        - inProgress
        - cancelled
        - done
        - terminatedWithError
      type: string
      description: Possible values for the state of a task
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    TurtleExpression:
      allOf:
        - $ref: '#/components/schemas/IntentExpression'
        - type: object
          description: TurtleExpression is the ontology-encoded form of the Intent as Turtle RDF
          properties:
            expressionValue:
              type: string
              description: >-
                Turtle Expression value is the ontology-encoded form of the Intent as Turtle RDF as
                defined in https://www.w3.org/TR/turtle/
    TurtleExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_MVO'
        - type: object
          description: TurtleExpression is the ontology-encoded form of the Intent as Turtle RDF
          properties:
            expressionValue:
              type: string
              description: >-
                Turtle Expression value is the ontology-encoded form of the Intent as Turtle RDF as
                defined in https://www.w3.org/TR/turtle/
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    ServiceOrder_FVO:
      description: The ServiceOrder to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrder_FVO'
          examples:
            CreateServiceOrder:
              $ref: '#/components/examples/CreateServiceOrder_request'
            CreateServiceOrder_for_modify_scenario:
              $ref: '#/components/examples/CreateServiceOrder_for_modify_scenario_request'
            CreateServiceOrder_with_intent:
              $ref: '#/components/examples/CreateServiceOrder_with_intent_request'
      required: true
    ServiceOrder_MVO:
      description: The ServiceOrder to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrder_MVO'
          examples:
            Service_Order_partialupdate_example_31:
              $ref: '#/components/examples/Service_Order_partialupdate_example_31_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceOrder_MVO'
          examples:
            Service_Order_partialupdate_example_01:
              $ref: '#/components/examples/Service_Order_partialupdate_example_01_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Service_Order_partialupdate_example_21:
              $ref: '#/components/examples/Service_Order_partialupdate_example_21_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Service_Order_partialupdate_example_11:
              $ref: '#/components/examples/Service_Order_partialupdate_example_11_request'
      required: true
    ServiceOrderCreateEvent:
      description: ServiceOrder create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrderCreateEvent'
          examples:
            ServiceOrderCreateEvent:
              $ref: '#/components/examples/ServiceOrderCreateEvent_request'
      required: true
    ServiceOrderDeleteEvent:
      description: ServiceOrder delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrderDeleteEvent'
          examples:
            ServiceOrderDeleteEvent:
              $ref: '#/components/examples/ServiceOrderDeleteEvent_request'
      required: true
    ServiceOrderAttributeValueChangeEvent:
      description: ServiceOrder attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrderAttributeValueChangeEvent'
          examples:
            ServiceOrderAttributeValueChangeEvent:
              $ref: '#/components/examples/ServiceOrderAttributeValueChangeEvent_request'
      required: true
    ServiceOrderStateChangeEvent:
      description: ServiceOrder stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrderStateChangeEvent'
          examples:
            ServiceOrderStateChangeEvent:
              $ref: '#/components/examples/ServiceOrderStateChangeEvent_request'
      required: true
    ServiceOrderInformationRequiredEvent:
      description: ServiceOrder informationRequired Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrderInformationRequiredEvent'
          examples:
            ServiceOrderInformationRequiredEvent:
              $ref: '#/components/examples/ServiceOrderInformationRequiredEvent_request'
      required: true
    ServiceOrderMilestoneEvent:
      description: ServiceOrder milestone Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrderMilestoneEvent'
          examples:
            ServiceOrderMilestoneEvent:
              $ref: '#/components/examples/ServiceOrderMilestoneEvent_request'
      required: true
    ServiceOrderJeopardyEvent:
      description: ServiceOrder jeopardy Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrderJeopardyEvent'
          examples:
            ServiceOrderJeopardyEvent:
              $ref: '#/components/examples/ServiceOrderJeopardyEvent_request'
      required: true
    CancelServiceOrder_FVO:
      description: The CancelServiceOrder to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrder_FVO'
          examples:
            CreateCancelServiceOrder:
              $ref: '#/components/examples/CreateCancelServiceOrder_request'
      required: true
    CancelServiceOrderCreateEvent:
      description: CancelServiceOrder create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrderCreateEvent'
          examples:
            CancelServiceOrderCreateEvent:
              $ref: '#/components/examples/CancelServiceOrderCreateEvent_request'
      required: true
    CancelServiceOrderStateChangeEvent:
      description: CancelServiceOrder stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrderStateChangeEvent'
          examples:
            CancelServiceOrderStateChangeEvent:
              $ref: '#/components/examples/CancelServiceOrderStateChangeEvent_request'
      required: true
    CancelServiceOrderInformationRequiredEvent:
      description: CancelServiceOrder informationRequired Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrderInformationRequiredEvent'
          examples:
            CancelServiceOrderInformationRequiredEvent:
              $ref: '#/components/examples/CancelServiceOrderInformationRequiredEvent_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200ServiceOrderArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceOrder'
          examples:
            serviceOrderRetrieveList:
              $ref: '#/components/examples/serviceOrderRetrieveList_response'
    200ServiceOrder_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrder'
          examples:
            serviceOrderRetrieveById:
              $ref: '#/components/examples/serviceOrderRetrieveById_response'
    200ServiceOrder_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrder'
          examples:
            Service_Order_partialupdate_example_31:
              $ref: '#/components/examples/Service_Order_partialupdate_example_31_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceOrder'
          examples:
            Service_Order_partialupdate_example_01:
              $ref: '#/components/examples/Service_Order_partialupdate_example_01_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceOrder'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceOrder'
              - type: string
                nullable: true
          examples:
            Service_Order_partialupdate_example_21:
              $ref: '#/components/examples/Service_Order_partialupdate_example_21_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceOrder'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceOrder'
              - type: string
                nullable: true
          examples:
            Service_Order_partialupdate_example_11:
              $ref: '#/components/examples/Service_Order_partialupdate_example_11_response'
    201ServiceOrder:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOrder'
          examples:
            CreateServiceOrder:
              $ref: '#/components/examples/CreateServiceOrder_response'
            CreateServiceOrder_for_modify_scenario:
              $ref: '#/components/examples/CreateServiceOrder_for_modify_scenario_response'
            CreateServiceOrder_with_intent:
              $ref: '#/components/examples/CreateServiceOrder_with_intent_response'
    200CancelServiceOrderArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CancelServiceOrder'
          examples:
            cancelServiceOrderRetrieveList:
              $ref: '#/components/examples/cancelServiceOrderRetrieveList_response'
            cancelServiceOrderRetrieveListWithFields:
              $ref: '#/components/examples/cancelServiceOrderRetrieveListWithFields_response'
    200CancelServiceOrder_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrder'
          examples:
            cancelServiceOrderRetrieveById:
              $ref: '#/components/examples/cancelServiceOrderRetrieveById_response'
    200CancelServiceOrder_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrder'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrder'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CancelServiceOrder'
              - type: array
                items:
                  $ref: '#/components/schemas/CancelServiceOrder'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CancelServiceOrder'
              - type: array
                items:
                  $ref: '#/components/schemas/CancelServiceOrder'
              - type: string
                nullable: true
    201CancelServiceOrder:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelServiceOrder'
          examples:
            CreateCancelServiceOrder:
              $ref: '#/components/examples/CreateCancelServiceOrder_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    serviceOrderRetrieveById_response:
      value:
        id: '42'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        state: InProgress
        orderDate: '2020-08-27T09:37:40.508Z'
        requestedStartDate: '2020-08-31T09:37:40.508Z'
        requestedCompletionDate: '2020-08-31T09:37:40.508Z'
        expectedCompletionDate: '2020-08-31T09:37:40.508Z'
        startDate: '2020-08-31T09:37:40.508Z'
        '@type': ServiceOrder
        note:
          - date: '2020-08-27T09:37:40.508Z'
            id: '1'
            author: Harvey Poupon
            text: Some text
            '@type': Note
        relatedParty:
          - role: requester
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: Jean Pontus
              '@type': PartyRef
              '@referredType': Individual
        jeopardyAlert:
          - id: '144'
            alertDate: '2020-08-27T23:17:45.450Z'
            exception: Order Item Completion is in Jeopardy
            jeopardyType: Normal
            message: Order Item Completion is in Jeopardy
            name: Order Item Completion
            serviceOrderItem:
              - itemId: '1'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderJeopardyAlert
        milestone:
          - id: '143'
            description: Port Allocation
            message: Port Allocation
            milestoneDate: '2020-08-27T23:17:45.450Z'
            name: Port Allocation
            status: Completed
            serviceOrderItem:
              - itemId: '2'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderMilestone
        serviceOrderItem:
          - id: '1'
            action: add
            state: InProgress
            service:
              '@type': Service
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  name: vCPE
                  valueType: object
                  value:
                    '@type': VCPE
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                    vCPE_IP: 193.218.236.21
                    MaxTxRate: 300
                    TransmitPower: 11 dBm
                    maxTream: 'OFF'
                  '@type': ObjectCharacteristic
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
            '@type': ServiceOrderItem
          - id: '2'
            action: add
            state: acknowledged
            service:
              state: active
              '@type': Service
              serviceRelationship:
                - relationshipType: reliesOn
                  service:
                    href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
                    id: '5645'
                    '@type': ServiceRef
                    '@referredType': Service
                  '@type': ServiceRelationship
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '48'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/48'
                name: genericDataService48
                version: 2.0.0
              feature:
                - id: Feat1
                  isEnabled: true
                  name: DataDownload
                  '@type': Feature
                  featureCharacteritic:
                    - name: VolumeCapped
                      id: '444'
                      value: true
                      valueType: boolean
                      '@type': BooleanCharacteristic
            '@type': ServiceOrderItem
      description: service order representation.
    serviceOrderRetrieveList_response:
      value:
        - id: '42'
          href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
          priority: '1'
          description: Service order description
          category: TMF resource illustration
          state: InProgress
          orderDate: '2020-08-27T09:37:40.508Z'
          requestedStartDate: '2020-08-31T09:37:40.508Z'
          requestedCompletionDate: '2020-08-31T09:37:40.508Z'
          expectedCompletionDate: '2020-08-31T09:37:40.508Z'
          startDate: '2020-08-31T09:37:40.508Z'
          '@type': ServiceOrder
          note:
            - date: '2020-08-27T09:37:40.508Z'
              id: '1'
              author: Harvey Poupon
              text: Some text
              '@type': Note
          relatedParty:
            - role: requester
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                id: '456'
                name: Jean Pontus
                '@type': PartyRef
                '@referredType': Individual
          jeopardyAlert:
            - id: '144'
              alertDate: '2020-08-27T23:17:45.450Z'
              exception: Order Item Completion is in Jeopardy
              jeopardyType: Normal
              message: Order Item Completion is in Jeopardy
              name: Order Item Completion
              serviceOrderItem:
                - itemId: '1'
                  serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                  serviceOrderId: '42'
                  '@type': ServiceOrderItemRef
              '@type': ServiceOrderJeopardyAlert
          milestone:
            - id: '143'
              description: Port Allocation
              message: Port Allocation
              milestoneDate: '2020-08-27T23:17:45.450Z'
              name: Port Allocation
              status: Completed
              serviceOrderItem:
                - itemId: '2'
                  serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                  serviceOrderId: '42'
                  '@type': ServiceOrderItemRef
              '@type': ServiceOrderMilestone
          serviceOrderItem:
            - id: '1'
              action: add
              state: InProgress
              service:
                '@type': Service
                state: active
                serviceCharacteristic:
                  - id: 452-gh6
                    name: vCPE
                    valueType: object
                    value:
                      '@type': VCPE
                      '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                      vCPE_IP: 193.218.236.21
                      MaxTxRate: 300
                      TransmitPower: 11 dBm
                      maxTream: 'OFF'
                    '@type': ObjectCharacteristic
                serviceSpecification:
                  '@type': ServiceSpecificationRef
                  '@referredType': ServiceSpecification
                  id: '1212'
                  href: >-
                    https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                  name: vCPE
                  version: 1.0.0
              errorMessage:
                - code: '500'
                  message: Resource Fallout
                  reason: IP address not available
                  referenceError: 'http://serverlocation:port/serviceOrdering/v5/errorMessage/500'
                  status: ERROR-003
                  timestamp: '2020-08-27T23:17:45.450Z'
                  '@type': ServiceOrderItemErrorMessage
              '@type': ServiceOrderItem
            - id: '2'
              action: add
              state: acknowledged
              service:
                state: active
                '@type': Service
                serviceRelationship:
                  - relationshipType: reliesOn
                    service:
                      href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
                      id: '5645'
                      '@type': ServiceRef
                      '@referredType': Service
                    '@type': ServiceRelationship
                serviceSpecification:
                  '@type': ServiceSpecificationRef
                  '@referredType': ServiceSpecification
                  id: '48'
                  href: >-
                    https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/48
                  name: genericDataService48
                  version: 2.0.0
                feature:
                  - id: Feat1
                    isEnabled: true
                    name: DataDownload
                    '@type': Feature
                    featureCharacteritic:
                      - name: VolumeCapped
                        id: '444'
                        value: true
                        valueType: boolean
                        '@type': BooleanCharacteristic
              '@type': ServiceOrderItem
        - id: '51'
          href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/51'
          priority: '1'
          description: Service order description
          category: TMF resource illustration
          state: completed
          orderDate: '2019-07-01T09:56:03.222Z'
          requestedStartDate: '2019-07-01T09:56:03.222Z'
          requestedCompletionDate: '2020-05-01T09:56:03.222Z'
          expectedCompletionDate: '2020-05-01T09:56:03.222Z'
          startDate: '2019-07-01T09:56:03.222Z'
          '@type': ServiceOrder
          relatedParty:
            - role: member
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/420'
                id: '420'
                name: Mark
                '@type': PartyRef
                '@referredType': Individual
          serviceOrderItem:
            - id: '1'
              action: add
              state: completed
              service:
                '@type': Service
                id: 123-456
                href: 'http://serverlocation:port/tmf-api/serviceInventory/v5/service/123-456'
                state: active
                serviceCharacteristic:
                  - id: '654'
                    name: MSISDN
                    valueType: string
                    value: 415-275-7439
                    '@type': StringCharacteristic
                serviceSpecification:
                  '@type': ServiceSpecificationRef
                  '@referredType': ServiceSpecification
                  id: '1515'
                  href: >-
                    https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1515
                  name: c_Mobile
                  version: 1.0.0
              '@type': ServiceOrderItem
      description: A collection of serviceOrder representation
    cancelServiceOrderRetrieveById_response:
      value:
        id: 789-fsds5-kjp
        href: 'https://host:port/serviceOrdering/v5/cancelserviceOrder/789-fsds5-kjp'
        cancellationReason: Duplicate service order
        effectiveCancellationDate: '2020-08-27T09:37:40.508Z'
        requestedCancellationDate: '2020-08-27T09:37:40.508Z'
        serviceOrder:
          id: 45f-98f-ss45
          href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-98f-ss45'
          '@referredType': ServiceOrder
          '@type': ServiceOrderRef
        state: done
        '@type': CancelServiceOrder
      description: CancelServiceOrder representation.
    cancelServiceOrderRetrieveList_response:
      value:
        - id: 789-fsds5-kjp
          href: 'https://host:port/serviceOrdering/v5/cancelserviceOrder/789-fsds5-kjp'
          cancellationReason: Duplicate service order
          effectiveCancellationDate: '2020-08-27T09:37:40.508Z'
          requestedCancellationDate: '2020-08-27T09:37:40.508Z'
          serviceOrder:
            id: 45f-98f-ss45
            href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-98f-ss45'
            '@referredType': ServiceOrder
            '@type': ServiceOrderRef
          state: done
          '@type': CancelServiceOrder
      description: A collection of CancelServiceOrder representation
    cancelServiceOrderRetrieveListWithFields_response:
      value:
        - id: '6987'
          serviceOrder:
            id: 45f-98f-ss45
            href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-98f-ss45'
            '@type': ServiceOrderRef
            '@referredType': ServiceOrder
          '@type': CancelServiceOrder
        - id: '7412'
          serviceOrder:
            id: 45f-789-sdre
            href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-789-sdre'
            '@type': ServiceOrderRef
            '@referredType': ServiceOrder
          '@type': CancelServiceOrder
        - id: '3214'
          serviceOrder:
            id: 45f-as4-os3f
            href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-as4-os3f'
            '@type': ServiceOrderRef
            '@referredType': ServiceOrder
          '@type': CancelServiceOrder
      description: A collection of CancelServiceOrder representation with field selection
    CreateServiceOrder_request:
      value:
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        requestedStartDate: '2020-08-27T09:37:40.508Z'
        requestedCompletionDate: '2020-08-27T09:37:40.508Z'
        '@type': ServiceOrder
        serviceOrderItem:
          - id: '1'
            action: add
            '@type': ServiceOrderItem
            service:
              '@type': Service
              state: active
              serviceCharacteristic:
                - name: vCPE
                  id: 452-gh6
                  valueType: object
                  value:
                    '@type': VCPE
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                    vCPE_IP: 193.218.236.21
                    MaxTxRate: 300
                    TransmitPower: 11 dBm
                    maxTream: 'OFF'
                  '@type': ObjectCharacteristic
              serviceSpecification:
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
      description: POST ServiceOrder Request Example
    CreateServiceOrder_response:
      value:
        id: '5351'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/5351'
        state: acknowledged
        description: Service order description
        category: TMF resource illustration
        orderDate: '2020-08-27T09:37:40.508Z'
        requestedStartDate: '2020-08-31T09:37:40.508Z'
        requestedCompletionDate: '2020-08-31T09:37:40.508Z'
        expectedCompletionDate: '2020-10-31T09:37:40.508Z'
        startDate: '2020-08-31T09:37:40.508Z'
        serviceOrderItem:
          - id: '1'
            action: add
            state: acknowledged
            service:
              '@type': Service
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  name: vCPE
                  valueType: object
                  value:
                    '@type': VCPE
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                    vCPE_IP: 193.218.236.21
                    MaxTxRate: 300
                    TransmitPower: 11 dBm
                    maxTream: 'OFF'
                  '@type': ObjectCharacteristic
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
            '@type': ServiceOrderItem
        '@type': ServiceOrder
      description: POST ServiceOrder Response Example
    CreateServiceOrder_for_modify_scenario_request:
      value:
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        requestedStartDate: '2020-08-27T09:37:40.508Z'
        requestedCompletionDate: '2020-08-27T09:37:40.508Z'
        '@type': ServiceOrder
        serviceOrderItem:
          - id: '1'
            action: modify
            service:
              id: '456'
              '@type': ServiceRef
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/456'
            modifyPath:
              - op: add
                path: /serviceCharacteristic
                value:
                  id: 452-gh6
                  valueType: string
                  name: InputPort
                  value: 456/7
                  '@type': StringCharacteristic
            '@type': ServiceOrderItem
      description: >-
        Creation of a new service order with POST operation with serviceOrderItem action modify.

        The use of modifyPath is optional and is only  applicable in the context of a
        "ServiceOrderItem" with the action set to "modify". The modifyPath.path can only point to a
        service inside the ServiceOrderItem and it can't reference anything outside of the
        ServiceOrderItem.service. In case an implementation receive a JSON Pointer as part of the
        modifyPath.path referencing anything outside of the ServiceOrderItem.service, then the
        implementation must return 400 Bad Request.
    CreateServiceOrder_for_modify_scenario_response:
      value:
        id: '5351'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/5351'
        state: acknowledged
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        requestedStartDate: '2020-08-27T09:37:40.508Z'
        requestedCompletionDate: '2020-08-27T09:37:40.508Z'
        expectedCompletionDate: '2020-10-31T09:37:40.508Z'
        serviceOrderItem:
          - id: '1'
            action: modify
            state: acknowledged
            service:
              id: '456'
              '@type': ServiceRef
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/456'
            modifyPath:
              - op: add
                path: /serviceCharacteristic
                value:
                  id: 452-gh6
                  valueType: string
                  name: InputPort
                  value: 456/7
                  '@type': StringCharacteristic
            '@type': ServiceOrderItem
        '@type': ServiceOrder
      description: POST ServiceOrder Response Example
    CreateServiceOrder_with_intent_request:
      value:
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        requestedStartDate: '2020-08-27T09:37:40.508Z'
        requestedCompletionDate: '2020-08-27T09:37:40.508Z'
        '@type': ServiceOrder
        serviceOrderItem:
          - id: '1'
            action: add
            '@type': ServiceOrderItem
            service:
              id: '455'
              '@type': Service
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/455'
              state: active
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
              intent:
                '@type': Intent
                id: '42'
                description: Intent for ordering live broadcast service for an event
                validFor:
                  startDateTime: '2022-10-23T00:30:00.00Z'
                  endDateTime: '2022-10-19T23:30:00.00Z'
                isBundle: true
                version: 1.0.0
                intentSpecification:
                  '@type': IntentSpecificationRef
                  id: EventLiveBroadcast_IntentSpec
                  name: EventLiveBroadcastIntentSpec
                  '@referredType': IntentSpecification
                  '@href': /intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec
                name: EventLiveBroadcast
                expression:
                  '@type': JsonLdExpression
                  expressionValue:
                    '@context':
                      icm: 'http://www.models.tmforum.org/tio/v1.0.0/IntentCommonModel#'
                      cat: 'http://www.operator.com/Catalog#'
                      idan: 'http://www.idan-tmforum-catalyst.org/IntentDrivenAutonomousNetworks#'
                      xsd: 'http://www.w3.org/2001/XMLSchema#'
                      t: 'http://www.w3.org/2006/time#'
                      elb: 'http://www.operator.com/Catalog/EventWirelessAccess#'
                      app: 'http://www.operator.com/Catalog/StreamingApplication#'
                      geo: 'https://tmforum.org/2020/07/geographicPoint#'
                    'idan:EventLiveBroadcast000001':
                      '@type': 'icm:Intent'
                      'icm:intentOwner': 'idan:Salesforce'
                      'icm:hasExpectation':
                        'idan:Delivery_service':
                          '@type': 'icm:DeliveryExpectation'
                          'icm:target': '_:service'
                          'icm:params':
                            'icm:targetDescription': 'cat:EventWirelessAccess'
                        'idan:Delivery_app':
                          '@type': 'icm:DeliveryExpectation'
                          'icm:target': '_:application'
                          'icm:params':
                            'icm:targetDescription': 'cat:StreamingApplication'
                        'idan:Property_service':
                          '@type': 'icm:PropertyExpectation'
                          'icm:target': '_:service'
                          'icm:params':
                            'elb:serviceQuality':
                              - 'icm:value': 4KUHD
                            'elb:numberOfParticipants':
                              - 'icm:atMost': '200'
                            'elb:areaOfService':
                              - 'geo:geographicPoints':
                                  - 'geo:longitude': 90
                                    'geo:latitude': 44
                                    'geo:altitude': 84
                                  - 'geo:longitude': 84
                                    'geo:latitude': -12
                                    'geo:altitude': 24
                                  - 'geo:longitude': 131
                                    'geo:latitude': -36
                                    'geo:altitude': 29
                                  - 'geo:longitude': 7
                                    'geo:latitude': 81
                                    'geo:altitude': -42
                        'idan:Property_app':
                          '@type': 'icm:PropertyExpectation'
                          'icm:target': '_:application'
                          'icm:params':
                            'app:appType':
                              - 'icm:value': AWS MediaLive
                              - 'icm:value': Facebook Live
                              - 'icm:value': YouTube
                        'idan:Reporting':
                          '@type': 'icm:ReportingExpectation'
                          'icm:target': 'idan:EventLiveBroadcast'
                          'icm:params':
                            'icm:reportingInterval':
                              - 't:Duration':
                                  - 't:numbericDuration': 10
                                    't:temporalUnit': unitMinute
                            'icm:reportingEvent':
                              - 'icm:StateComplies'
                              - 'icm:StateDegrades'
                lastUpdate: '2023-03-09T08:42:33.044Z'
      description: POST ServiceOrder Request Example
    CreateServiceOrder_with_intent_response:
      value:
        id: '5351'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/5351'
        state: acknowledged
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        orderDate: '2020-08-27T09:37:40.508Z'
        requestedStartDate: '2020-08-27T09:37:40.508Z'
        requestedCompletionDate: '2020-08-27T09:37:40.508Z'
        expectedCompletionDate: '2020-10-31T09:37:40.508Z'
        startDate: '2020-08-31T09:37:40.508Z'
        '@type': ServiceOrder
        serviceOrderItem:
          - id: '1'
            action: add
            state: acknowledged
            service:
              id: '455'
              '@type': Service
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/455'
              state: active
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
              intent:
                '@type': Intent
                id: '42'
                description: Intent for ordering live broadcast service for an event
                validFor:
                  startDateTime: '2022-10-23T00:30:00.00Z'
                  endDateTime: '2022-10-19T23:30:00.00Z'
                isBundle: true
                version: 1.0.0
                intentSpecification:
                  '@type': IntentSpecificationRef
                  id: EventLiveBroadcast_IntentSpec
                  name: EventLiveBroadcastIntentSpec
                  '@referredType': IntentSpecification
                  '@href': /intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec
                name: EventLiveBroadcast
                expression:
                  '@type': JsonLdExpression
                  expressionValue:
                    '@context':
                      icm: 'http://www.models.tmforum.org/tio/v1.0.0/IntentCommonModel#'
                      cat: 'http://www.operator.com/Catalog#'
                      idan: 'http://www.idan-tmforum-catalyst.org/IntentDrivenAutonomousNetworks#'
                      xsd: 'http://www.w3.org/2001/XMLSchema#'
                      t: 'http://www.w3.org/2006/time#'
                      elb: 'http://www.operator.com/Catalog/EventWirelessAccess#'
                      app: 'http://www.operator.com/Catalog/StreamingApplication#'
                      geo: 'https://tmforum.org/2020/07/geographicPoint#'
                    'idan:EventLiveBroadcast000001':
                      '@type': 'icm:Intent'
                      'icm:intentOwner': 'idan:Salesforce'
                      'icm:hasExpectation':
                        'idan:Delivery_service':
                          '@type': 'icm:DeliveryExpectation'
                          'icm:target': '_:service'
                          'icm:params':
                            'icm:targetDescription': 'cat:EventWirelessAccess'
                        'idan:Delivery_app':
                          '@type': 'icm:DeliveryExpectation'
                          'icm:target': '_:application'
                          'icm:params':
                            'icm:targetDescription': 'cat:StreamingApplication'
                        'idan:Property_service':
                          '@type': 'icm:PropertyExpectation'
                          'icm:target': '_:service'
                          'icm:params':
                            'elb:serviceQuality':
                              - 'icm:value': 4KUHD
                            'elb:numberOfParticipants':
                              - 'icm:atMost': '200'
                            'elb:areaOfService':
                              - 'geo:geographicPoints':
                                  - 'geo:longitude': 90
                                    'geo:latitude': 44
                                    'geo:altitude': 84
                                  - 'geo:longitude': 84
                                    'geo:latitude': -12
                                    'geo:altitude': 24
                                  - 'geo:longitude': 131
                                    'geo:latitude': -36
                                    'geo:altitude': 29
                                  - 'geo:longitude': 7
                                    'geo:latitude': 81
                                    'geo:altitude': -42
                        'idan:Property_app':
                          '@type': 'icm:PropertyExpectation'
                          'icm:target': '_:application'
                          'icm:params':
                            'app:appType':
                              - 'icm:value': AWS MediaLive
                              - 'icm:value': Facebook Live
                              - 'icm:value': YouTube
                        'idan:Reporting':
                          '@type': 'icm:ReportingExpectation'
                          'icm:target': 'idan:EventLiveBroadcast'
                          'icm:params':
                            'icm:reportingInterval':
                              - 't:Duration':
                                  - 't:numbericDuration': 10
                                    't:temporalUnit': unitMinute
                            'icm:reportingEvent':
                              - 'icm:StateComplies'
                              - 'icm:StateDegrades'
                lastUpdate: '2023-03-09T08:42:33.044Z'
            '@type': ServiceOrderItem
      description: POST ServiceOrder Response Example
    CreateCancelServiceOrder_request:
      value:
        cancellationReason: Duplicate service order
        requestedCancellationDate: '2020-08-27T09:37:40.508Z'
        serviceOrder:
          id: 45f-98f-ss45
          href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-98f-ss45'
          '@referredType': ServiceOrder
          '@type': ServiceOrderRef
        '@type': CancelServiceOrder
      description: POST CancelServiceOrder request example
    CreateCancelServiceOrder_response:
      value:
        id: 789-fsds5-kjp
        href: 'https://host:port/serviceOrdering/v5/cancelserviceOrder/789-fsds5-kjp'
        cancellationReason: Duplicate service order
        effectiveCancellationDate: '2020-08-27T09:37:41.331Z'
        requestedCancellationDate: '2020-08-27T09:37:40.508Z'
        serviceOrder:
          id: 45f-98f-ss45
          href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-98f-ss45'
          '@referredType': ServiceOrder
          '@type': ServiceOrderRef
        state: acknowledged
        '@type': CancelServiceOrder
      description: POST CancelServiceOrder Response Example
    Service_Order_partialupdate_example_01_request:
      value:
        requestedStartDate: '2020-08-27T09:37:40.508Z'
        requestedCompletionDate: '2020-08-27T09:37:40.508Z'
        '@type': ServiceOrder
      description: >-
        Here's an example of a request for patching a service order using merge-patch+json for
        requestedStartDate and requestedCompletionDate.
    Service_Order_partialupdate_example_01_response:
      value:
        id: '42'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        state: InProgress
        orderDate: '2020-08-27T09:37:40.508Z'
        requestedStartDate: '2020-08-31T09:37:40.508Z'
        requestedCompletionDate: '2020-08-31T09:37:40.508Z'
        expectedCompletionDate: '2020-08-31T09:37:40.508Z'
        startDate: '2020-08-31T09:37:40.508Z'
        '@type': ServiceOrder
        note:
          - date: '2020-08-27T09:37:40.508Z'
            id: '1'
            author: Harvey Poupon
            text: Some text
            '@type': Note
        relatedParty:
          - role: requester
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: Jean Pontus
              '@type': PartyRef
              '@referredType': Individual
        jeopardyAlert:
          - id: '144'
            alertDate: '2020-08-27T23:17:45.450Z'
            exception: Order Item Completion is in Jeopardy
            jeopardyType: Normal
            message: Order Item Completion is in Jeopardy
            name: Order Item Completion
            serviceOrderItem:
              - itemId: '1'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderJeopardyAlert
        milestone:
          - id: '143'
            description: Port Allocation
            message: Port Allocation
            milestoneDate: '2020-08-27T23:17:45.450Z'
            name: Port Allocation
            status: Completed
            serviceOrderItem:
              - itemId: '2'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderMilestone
        serviceOrderItem:
          - id: '1'
            action: add
            state: InProgress
            service:
              '@type': Service
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  name: vCPE
                  valueType: object
                  value:
                    '@type': VCPE
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                    vCPE_IP: 193.218.236.21
                    MaxTxRate: 300
                    TransmitPower: 11 dBm
                    maxTream: 'OFF'
                  '@type': ObjectCharacteristic
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
            errorMessage:
              - code: '500'
                message: Resource Fallout
                reason: IP address not available
                referenceError: 'http://serverlocation:port/serviceOrdering/v5/errorMessage/500'
                status: ERROR-003
                timestamp: '2020-08-27T23:17:45.450Z'
                '@type': ServiceOrderItemErrorMessage
            '@type': ServiceOrderItem
          - id: '2'
            action: modify
            state: InProgress
            service:
              id: '456'
              '@type': Service
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/456'
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  valueType: string
                  name: InputPort
                  value: 456/7
                  '@type': StringCharacteristic
            '@type': ServiceOrderItem
          - id: '3'
            action: add
            state: acknowledged
            service:
              state: active
              '@type': Service
              serviceRelationship:
                - relationshipType: reliesOn
                  service:
                    href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
                    id: '5645'
                    '@type': ServiceRef
                    '@referredType': Service
                  '@type': ServiceRelationship
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '48'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/48'
                name: genericDataService48
                version: 2.0.0
              feature:
                - id: Feat1
                  isEnabled: true
                  name: DataDownload
                  '@type': Feature
                  featureCharacteritic:
                    - name: VolumeCapped
                      id: '444'
                      value: true
                      valueType: boolean
                      '@type': BooleanCharacteristic
            '@type': ServiceOrderItem
      description: Response message for merge-patch+json
    Service_Order_partialupdate_example_11_request:
      value:
        - op: replace
          path: /relatedParty/partyOrPartyRole/name?relatedParty.role=requester
          value: Mr. N. Bene
      description: >-
        Here's an example of a request for updating a service order using json-patch-query+json for
        relatedParty.
    Service_Order_partialupdate_example_11_response:
      value:
        id: '42'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        state: InProgress
        orderDate: '2020-08-27T09:37:40.508Z'
        requestedStartDate: '2020-08-31T09:37:40.508Z'
        requestedCompletionDate: '2020-08-31T09:37:40.508Z'
        expectedCompletionDate: '2020-08-31T09:37:40.508Z'
        startDate: '2020-08-31T09:37:40.508Z'
        '@type': ServiceOrder
        note:
          - date: '2020-08-27T09:37:40.508Z'
            id: '1'
            author: Harvey Poupon
            text: Some text
            '@type': Note
        relatedParty:
          - role: requester
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: Mr. N. Bene
              '@type': PartyRef
              '@referredType': Individual
        jeopardyAlert:
          - id: '144'
            alertDate: '2020-08-27T23:17:45.450Z'
            exception: Order Item Completion is in Jeopardy
            jeopardyType: Normal
            message: Order Item Completion is in Jeopardy
            name: Order Item Completion
            serviceOrderItem:
              - itemId: '1'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderJeopardyAlert
        milestone:
          - id: '143'
            description: Port Allocation
            message: Port Allocation
            milestoneDate: '2020-08-27T23:17:45.450Z'
            name: Port Allocation
            status: Completed
            serviceOrderItem:
              - itemId: '2'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderMilestone
        serviceOrderItem:
          - id: '1'
            action: add
            state: InProgress
            service:
              '@type': Service
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  name: vCPE
                  valueType: object
                  value:
                    '@type': VCPE
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                    vCPE_IP: 193.218.236.21
                    MaxTxRate: 300
                    TransmitPower: 11 dBm
                    maxTream: 'OFF'
                  '@type': ObjectCharacteristic
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
            errorMessage:
              - code: '500'
                message: Resource Fallout
                reason: IP address not available
                referenceError: 'http://serverlocation:port/serviceOrdering/v5/errorMessage/500'
                status: ERROR-003
                timestamp: '2020-08-27T23:17:45.450Z'
                '@type': ServiceOrderItemErrorMessage
            '@type': ServiceOrderItem
          - id: '2'
            action: modify
            state: InProgress
            service:
              id: '456'
              '@type': Service
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/456'
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  valueType: string
                  name: InputPort
                  value: 456/7
                  '@type': StringCharacteristic
            '@type': ServiceOrderItem
          - id: '3'
            action: add
            state: acknowledged
            service:
              state: active
              '@type': Service
              serviceRelationship:
                - relationshipType: reliesOn
                  service:
                    href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
                    id: '5645'
                    '@type': ServiceRef
                    '@referredType': Service
                  '@type': ServiceRelationship
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '48'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/48'
                name: genericDataService48
                version: 2.0.0
              feature:
                - id: Feat1
                  isEnabled: true
                  name: DataDownload
                  '@type': Feature
                  featureCharacteritic:
                    - name: VolumeCapped
                      id: '444'
                      value: true
                      valueType: boolean
                      '@type': BooleanCharacteristic
            '@type': ServiceOrderItem
      description: Response message for json-patch-query+json
    Service_Order_partialupdate_example_21_request:
      value:
        - op: replace
          path: /requestedStartDate
          value: '2020-08-31T09:37:40.508Z'
        - op: replace
          path: /requestedCompletionDate
          value: '2020-08-31T09:37:40.508Z'
      description: >-
        Here's an example of a request for updating a service using json-patch+json for
        requestedStartDate and requestedCompletionDate.
    Service_Order_partialupdate_example_21_response:
      value:
        id: '42'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        state: InProgress
        orderDate: '2020-08-27T09:37:40.508Z'
        requestedStartDate: '2020-08-31T09:37:40.508Z'
        requestedCompletionDate: '2020-08-31T09:37:40.508Z'
        expectedCompletionDate: '2020-08-31T09:37:40.508Z'
        startDate: '2020-08-31T09:37:40.508Z'
        '@type': ServiceOrder
        note:
          - date: '2020-08-27T09:37:40.508Z'
            id: '1'
            author: Harvey Poupon
            text: Some text
            '@type': Note
        relatedParty:
          - role: requester
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: Jean Pontus
              '@type': PartyRef
              '@referredType': Individual
        jeopardyAlert:
          - id: '144'
            alertDate: '2020-08-27T23:17:45.450Z'
            exception: Order Item Completion is in Jeopardy
            jeopardyType: Normal
            message: Order Item Completion is in Jeopardy
            name: Order Item Completion
            serviceOrderItem:
              - itemId: '1'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderJeopardyAlert
        milestone:
          - id: '143'
            description: Port Allocation
            message: Port Allocation
            milestoneDate: '2020-08-27T23:17:45.450Z'
            name: Port Allocation
            status: Completed
            serviceOrderItem:
              - itemId: '2'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderMilestone
        serviceOrderItem:
          - id: '1'
            action: add
            state: InProgress
            service:
              '@type': Service
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  name: vCPE
                  valueType: object
                  value:
                    '@type': VCPE
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                    vCPE_IP: 193.218.236.21
                    MaxTxRate: 300
                    TransmitPower: 11 dBm
                    maxTream: 'OFF'
                  '@type': ObjectCharacteristic
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
            errorMessage:
              - code: '500'
                message: Resource Fallout
                reason: IP address not available
                referenceError: 'http://serverlocation:port/serviceOrdering/v5/errorMessage/500'
                status: ERROR-003
                timestamp: '2020-08-27T23:17:45.450Z'
                '@type': ServiceOrderItemErrorMessage
            '@type': ServiceOrderItem
          - id: '2'
            action: modify
            state: InProgress
            service:
              id: '456'
              '@type': Service
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/456'
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  valueType: string
                  name: InputPort
                  value: 456/7
                  '@type': StringCharacteristic
            '@type': ServiceOrderItem
          - id: '3'
            action: add
            state: acknowledged
            service:
              state: active
              '@type': Service
              serviceRelationship:
                - relationshipType: reliesOn
                  service:
                    href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
                    id: '5645'
                    '@type': ServiceRef
                    '@referredType': Service
                  '@type': ServiceRelationship
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '48'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/48'
                name: genericDataService48
                version: 2.0.0
              feature:
                - id: Feat1
                  isEnabled: true
                  name: DataDownload
                  '@type': Feature
                  featureCharacteritic:
                    - name: VolumeCapped
                      id: '444'
                      value: true
                      valueType: boolean
                      '@type': BooleanCharacteristic
            '@type': ServiceOrderItem
      description: Response message json-patch+json
    Service_Order_partialupdate_example_31_request:
      value:
        requestedStartDate: '2020-08-27T09:37:40.508Z'
        requestedCompletionDate: '2020-08-27T09:37:40.508Z'
        '@type': ServiceOrder
      description: >-
        Here's an example of a request for patching a service order using application/json for
        requestedStartDate and requestedCompletionDate.
    Service_Order_partialupdate_example_31_response:
      value:
        id: '42'
        href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
        priority: '1'
        description: Service order description
        category: TMF resource illustration
        state: InProgress
        orderDate: '2020-08-27T09:37:40.508Z'
        requestedStartDate: '2020-08-31T09:37:40.508Z'
        requestedCompletionDate: '2020-08-31T09:37:40.508Z'
        expectedCompletionDate: '2020-08-31T09:37:40.508Z'
        startDate: '2020-08-31T09:37:40.508Z'
        '@type': ServiceOrder
        note:
          - date: '2020-08-27T09:37:40.508Z'
            id: '1'
            author: Harvey Poupon
            text: Some text
            '@type': Note
        relatedParty:
          - role: requester
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: Jean Pontus
              '@type': PartyRef
              '@referredType': Individual
        jeopardyAlert:
          - id: '144'
            alertDate: '2020-08-27T23:17:45.450Z'
            exception: Order Item Completion is in Jeopardy
            jeopardyType: Normal
            message: Order Item Completion is in Jeopardy
            name: Order Item Completion
            serviceOrderItem:
              - itemId: '1'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderJeopardyAlert
        milestone:
          - id: '143'
            description: Port Allocation
            message: Port Allocation
            milestoneDate: '2020-08-27T23:17:45.450Z'
            name: Port Allocation
            status: Completed
            serviceOrderItem:
              - itemId: '2'
                serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                serviceOrderId: '42'
                '@type': ServiceOrderItemRef
            '@type': ServiceOrderMilestone
        serviceOrderItem:
          - id: '1'
            action: add
            state: InProgress
            service:
              '@type': Service
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  name: vCPE
                  valueType: object
                  value:
                    '@type': VCPE
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                    vCPE_IP: 193.218.236.21
                    MaxTxRate: 300
                    TransmitPower: 11 dBm
                    maxTream: 'OFF'
                  '@type': ObjectCharacteristic
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '1212'
                href: >-
                  https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                name: vCPE
                version: 1.0.0
            errorMessage:
              - code: '500'
                message: Resource Fallout
                reason: IP address not available
                referenceError: 'http://serverlocation:port/serviceOrdering/v5/errorMessage/500'
                status: ERROR-003
                timestamp: '2020-08-27T23:17:45.450Z'
                '@type': ServiceOrderItemErrorMessage
            '@type': ServiceOrderItem
          - id: '2'
            action: modify
            state: InProgress
            service:
              id: '456'
              '@type': Service
              href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/456'
              state: active
              serviceCharacteristic:
                - id: 452-gh6
                  valueType: string
                  name: InputPort
                  value: 456/7
                  '@type': StringCharacteristic
            '@type': ServiceOrderItem
          - id: '3'
            action: add
            state: acknowledged
            service:
              state: active
              '@type': Service
              serviceRelationship:
                - relationshipType: reliesOn
                  service:
                    href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
                    id: '5645'
                    '@type': ServiceRef
                    '@referredType': Service
                  '@type': ServiceRelationship
              serviceSpecification:
                '@type': ServiceSpecificationRef
                '@referredType': ServiceSpecification
                id: '48'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/48'
                name: genericDataService48
                version: 2.0.0
              feature:
                - id: Feat1
                  isEnabled: true
                  name: DataDownload
                  '@type': Feature
                  featureCharacteritic:
                    - name: VolumeCapped
                      id: '444'
                      value: true
                      valueType: boolean
                      '@type': BooleanCharacteristic
            '@type': ServiceOrderItem
      description: Response message for application/json
    ServiceOrderCreateEvent_request:
      value:
        correlationId: SOM-20011
        description: ServiceOrderCreateEvent illustration
        domain: Commercial
        eventId: '10007'
        eventTime: '2021-12-27T01:06:59.059Z'
        eventType: ServiceOrderCreateEvent
        priority: '1'
        timeOcurred: '2021-12-27T01:06:59.059Z'
        title: ServiceOrderCreateEvent
        event:
          serviceOrder:
            id: '42'
            href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
            priority: '1'
            description: Service order description
            category: TMF resource illustration
            state: acknowledged
            orderDate: '2020-08-27T09:37:40.508Z'
            requestedStartDate: '2020-08-31T09:37:40.508Z'
            requestedCompletionDate: '2020-08-31T09:37:40.508Z'
            expectedCompletionDate: '2020-08-31T09:37:40.508Z'
            startDate: '2020-08-31T09:37:40.508Z'
            '@type': ServiceOrder
            note:
              - date: '2020-08-27T09:37:40.508Z'
                id: '1'
                author: Harvey Poupon
                text: Some text
                '@type': Note
            relatedParty:
              - role: requester
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                  id: '456'
                  name: Jean Pontus
                  '@type': PartyRef
                  '@referredType': Individual
            serviceOrderItem:
              - id: '1'
                action: add
                state: acknowledged
                service:
                  '@type': Service
                  state: active
                  serviceCharacteristic:
                    - id: 452-gh6
                      name: vCPE
                      valueType: object
                      value:
                        '@type': VCPE
                        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                        vCPE_IP: 193.218.236.21
                        MaxTxRate: 300
                        TransmitPower: 11 dBm
                        maxTream: 'OFF'
                      '@type': ObjectCharacteristic
                  serviceSpecification:
                    '@type': ServiceSpecificationRef
                    '@referredType': ServiceSpecification
                    id: '1212'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                    name: vCPE
                    version: 1.0.0
                '@type': ServiceOrderItem
              - id: '2'
                action: modify
                state: InProgress
                service:
                  id: '456'
                  '@type': Service
                  href: 'http://serverlocation:port/serviceInventoryManagement/v5/service/456'
                  state: active
                  serviceCharacteristic:
                    - id: 452-gh6
                      valueType: string
                      name: InputPort
                      value: 456/7
                      '@type': StringCharacteristic
                '@type': ServiceOrderItem
              - id: '3'
                action: add
                state: acknowledged
                service:
                  state: active
                  '@type': Service
                  serviceRelationship:
                    - relationshipType: reliesOn
                      service:
                        href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
                        id: '5645'
                        '@type': ServiceRef
                        '@referredType': Service
                      '@type': ServiceRelationship
                  serviceSpecification:
                    '@type': ServiceSpecificationRef
                    '@referredType': ServiceSpecification
                    id: '48'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/48
                    name: genericDataService48
                    version: 2.0.0
                  feature:
                    - id: Feat1
                      isEnabled: true
                      name: DataDownload
                      '@type': Feature
                      featureCharacteritic:
                        - name: VolumeCapped
                          id: '444'
                          value: true
                          valueType: boolean
                          '@type': BooleanCharacteristic
                '@type': ServiceOrderItem
        relatedParty:
          - id: 56d
            role: Issuer
            '@type': RelatedParty
            '@referredType': Organization
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOrderCreateEvent
      description: Message example for ServiceOrderCreateEvent event
    ServiceOrderDeleteEvent_request:
      value:
        correlationId: SOM-20011
        description: ServiceOrderDeleteEvent illustration
        domain: Commercial
        eventId: '10039'
        eventTime: '2021-12-27T01:06:59.059Z'
        eventType: ServiceOrderDeleteEvent
        priority: '1'
        timeOcurred: '2021-12-27T01:06:59.059Z'
        title: ServiceOrderDeleteEvent
        event:
          serviceOrder:
            id: '5351'
            href: 'https://host:port/serviceOrdering/v5/serviceOrder/5351'
            '@type': ServiceOrder
        relatedParty:
          - id: 56d
            role: Issuer
            '@type': RelatedParty
            '@referredType': Organization
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOrderDeleteEvent
      description: Message example for ServiceOrderDeleteEvent event
    ServiceOrderAttributeValueChangeEvent_request:
      value:
        correlationId: SOM-20011
        description: ServiceOrderAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: '10037'
        eventTime: '2021-12-27T01:06:59.059Z'
        eventType: ServiceOrderAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2021-12-27T01:06:59.059Z'
        title: ServiceOrderAttributeValueChangeEvent
        event:
          serviceOrder:
            id: '5351'
            href: 'https://host:port/serviceOrdering/v5/serviceOrder/5351'
            expectedCompletionDate: '2022-02-27T01:06:59.059Z'
            '@type': ServiceOrder
        relatedParty:
          - id: 56d
            role: Issuer
            '@type': RelatedParty
            '@referredType': Organization
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOrderAttributeValueChangeEvent
      description: Message example for ServiceOrderAttributeValueChangeEvent event
    ServiceOrderStateChangeEvent_request:
      value:
        correlationId: SOM-20011
        description: ServiceOrderStateChangeEvent illustration
        domain: Commercial
        eventId: '10091'
        eventTime: '2021-12-27T01:06:59.059Z'
        eventType: ServiceOrderStateChangeEvent
        priority: '1'
        timeOcurred: '2021-12-27T01:06:59.059Z'
        title: ServiceOrderStateChangeEvent
        event:
          serviceOrder:
            id: '5351'
            href: 'https://host:port/serviceOrder/v5/serviceOrder/5351'
            state: inProgress
            '@type': ServiceOrder
        relatedParty:
          - id: 56d
            role: Issuer
            '@type': RelatedParty
            '@referredType': Organization
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOrderStateChangeEvent
      description: Message example for ServiceOrderStateChangeEvent event
    ServiceOrderInformationRequiredEvent_request:
      value:
        correlationId: SOM-20011
        description: ServiceOrderInformationRequiredEvent illustration
        domain: Commercial
        eventId: '10061'
        eventTime: '2021-12-27T01:06:59.059Z'
        eventType: ServiceOrderInformationRequiredEvent
        priority: '1'
        timeOcurred: '2021-12-27T01:06:59.059Z'
        title: ServiceOrderInformationRequiredEvent
        event:
          serviceOrder:
            id: '5351'
            href: 'https://host:port/serviceOrder/v5/serviceOrder/5351'
            '@type': ServiceOrderRef
          informationRequired:
            - op: add
              path: requestedCompletionDate
            - op: add
              path: requestedStartDate
        relatedParty:
          - id: 56d
            role: Issuer
            '@type': RelatedParty
            '@referredType': Organization
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOrderInformationRequiredEvent
      description: Message example for ServiceOrderInformationRequiredEvent event
    ServiceOrderMilestoneEvent_request:
      value:
        correlationId: SOM-20011
        description: ServiceOrderMilestoneEvent illustration
        domain: Commercial
        eventId: '10069'
        eventTime: '2021-12-27T01:06:59.059Z'
        eventType: ServiceOrderMilestoneEvent
        priority: '1'
        timeOcurred: '2021-12-27T01:06:59.059Z'
        title: ServiceOrderMilestoneEvent
        event:
          serviceOrder:
            id: '42'
            href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
            priority: '1'
            description: Service order description
            category: TMF resource illustration
            state: InProgress
            orderDate: '2020-08-27T09:37:40.508Z'
            requestedStartDate: '2020-08-31T09:37:40.508Z'
            requestedCompletionDate: '2020-08-31T09:37:40.508Z'
            expectedCompletionDate: '2020-08-31T09:37:40.508Z'
            startDate: '2020-08-31T09:37:40.508Z'
            '@type': ServiceOrder
            note:
              - date: '2020-08-27T09:37:40.508Z'
                id: '1'
                author: Harvey Poupon
                text: Some text
                '@type': Note
            relatedParty:
              - role: requester
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                  id: '456'
                  name: Jean Pontus
                  '@type': PartyRef
                  '@referredType': Individual
            milestone:
              - id: '143'
                description: Port Allocation
                message: Port Allocation
                milestoneDate: '2020-08-27T23:17:45.450Z'
                name: Port Allocation
                status: Completed
                serviceOrderItem:
                  - itemId: '1'
                    serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                    serviceOrderId: '42'
                    '@type': ServiceOrderItemRef
                '@type': ServiceOrderMilestone
            serviceOrderItem:
              - id: '1'
                action: add
                state: InProgress
                service:
                  '@type': Service
                  state: active
                  serviceCharacteristic:
                    - id: 452-gh6
                      name: vCPE
                      valueType: object
                      value:
                        '@type': VCPE
                        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                        vCPE_IP: 193.218.236.21
                        MaxTxRate: 300
                        TransmitPower: 11 dBm
                        maxTream: 'OFF'
                      '@type': ObjectCharacteristic
                  serviceSpecification:
                    '@type': ServiceSpecificationRef
                    '@referredType': ServiceSpecification
                    id: '1212'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                    name: vCPE
                    version: 1.0.0
                '@type': ServiceOrderItem
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOrderMilestoneEvent
      description: Message example for ServiceOrderMilestoneEvent event
    ServiceOrderJeopardyEvent_request:
      value:
        correlationId: SOM-20011
        description: ServiceOrderJeopardyEvent illustration
        domain: Commercial
        eventId: '10079'
        eventTime: '2021-12-27T01:06:59.059Z'
        eventType: ServiceOrderJeopardyEvent
        priority: '1'
        timeOcurred: '2021-12-27T01:06:59.059Z'
        title: ServiceOrderJeopardyEvent
        event:
          serviceOrder:
            id: '42'
            href: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
            priority: '1'
            description: Service order description
            category: TMF resource illustration
            state: InProgress
            orderDate: '2020-08-27T09:37:40.508Z'
            requestedStartDate: '2020-08-31T09:37:40.508Z'
            requestedCompletionDate: '2020-08-31T09:37:40.508Z'
            expectedCompletionDate: '2020-08-31T09:37:40.508Z'
            startDate: '2020-08-31T09:37:40.508Z'
            '@type': ServiceOrder
            note:
              - date: '2020-08-27T09:37:40.508Z'
                id: '1'
                author: Harvey Poupon
                text: Some text
                '@type': Note
            relatedParty:
              - role: requester
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                  id: '456'
                  name: Jean Pontus
                  '@type': PartyRef
                  '@referredType': Individual
            jeopardyAlert:
              - id: '144'
                alertDate: '2020-08-27T23:17:45.450Z'
                exception: Order Item Completion is in Jeopardy
                jeopardyType: Normal
                message: Order Item Completion is in Jeopardy
                name: Order Item Completion
                serviceOrderItem:
                  - itemId: '1'
                    serviceOrderHref: 'http://serverlocation:port/serviceOrdering/v5/serviceOrder/42'
                    serviceOrderId: '42'
                    '@type': ServiceOrderItemRef
                '@type': ServiceOrderJeopardyAlert
            serviceOrderItem:
              - id: '1'
                action: add
                state: InProgress
                service:
                  '@type': Service
                  state: active
                  serviceCharacteristic:
                    - id: 452-gh6
                      name: vCPE
                      valueType: object
                      value:
                        '@type': VCPE
                        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
                        vCPE_IP: 193.218.236.21
                        MaxTxRate: 300
                        TransmitPower: 11 dBm
                        maxTream: 'OFF'
                      '@type': ObjectCharacteristic
                  serviceSpecification:
                    '@type': ServiceSpecificationRef
                    '@referredType': ServiceSpecification
                    id: '1212'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
                    name: vCPE
                    version: 1.0.0
                '@type': ServiceOrderItem
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOrderJeopardyEvent
      description: Message example for ServiceOrderJeopardyEvent event
    CancelServiceOrderCreateEvent_request:
      value:
        correlationId: SOM-20021
        description: CancelServiceOrderCreateEvent illustration
        eventId: '10009'
        eventTime: '2021-12-28T01:09:57.059Z'
        eventType: CancelServiceOrderCreateEvent
        priority: '1'
        timeOcurred: '2021-12-28T01:09:57.059Z'
        title: CancelServiceOrderCreateEvent
        event:
          cancelServiceOrder:
            id: 789-fsds5-kjp
            href: 'https://host:port/serviceOrdering/v5/cancelServiceOrder/789-fsds5-kjp'
            cancellationReason: Duplicate service order
            requestedCancellationDate: '2020-08-27T12:56:21.931Z'
            serviceOrder:
              id: 45f-98f-ss45
              href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-98f-ss45'
              '@referredType': ServiceOrder
              '@type': ServiceOrderRef
            state: acknowledged
            '@type': CancelServiceOrder
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@type': CancelServiceOrderCreateEvent
      description: Message example for CancelServiceOrderCreateEvent event
    CancelServiceOrderStateChangeEvent_request:
      value:
        correlationId: SOM-20021
        description: CancelServiceOrderStateChangeEvent illustration
        domain: Commercial
        eventId: '10099'
        eventTime: '2021-12-28T01:09:57.059Z'
        eventType: CancelServiceOrderStateChangeEvent
        priority: '1'
        timeOcurred: '2021-12-28T01:09:57.059Z'
        title: CancelServiceOrderStateChangeEvent
        event:
          cancelServiceOrder:
            id: 789-fsds5-kjp
            href: 'https://host:port/serviceOrdering/v5/cancelServiceOrder/789-fsds5-kjp'
            serviceOrder:
              id: 45f-98f-ss45
              href: 'https://host:port/serviceOrdering/v5/serviceOrder/45f-98f-ss45'
              '@referredType': ServiceOrder
              '@type': ServiceOrderRef
            state: done
            '@type': CancelServiceOrder
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CancelServiceOrderStateChangeEvent
      description: Message example for CancelServiceOrderStateChangeEvent event
    CancelServiceOrderInformationRequiredEvent_request:
      value:
        correlationId: SOM-20021
        description: CancelServiceOrderInformationRequiredEvent illustration
        eventId: '10103'
        eventTime: '2021-12-28T01:09:57.059Z'
        eventType: CancelServiceOrderInformationRequiredEvent
        priority: '1'
        timeOcurred: '2021-12-28T01:09:57.059Z'
        title: CancelServiceOrderInformationRequiredEvent
        event:
          cancelServiceOrder:
            id: '20021'
            href: 'https://host:port/serviceOrdering/v5/cancelServiceOrder/20021'
            '@type': CancelServiceOrder
          informationRequired:
            - op: add
              path: requestedCancellationDate
        reportingSystem:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '20011'
          name: Service Order Management Component
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CancelServiceOrderInformationRequiredEvent
      description: Message example for CancelServiceOrderInformationRequiredEvent event
