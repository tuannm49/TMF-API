openapi: 3.0.1
info:
  title: Agreement Management
  description: >-
    The Agreement API provides standardized mechanism for managing agreements, for example in the
    context of partnerships between partners, or framework agreements between service provider and
    large customers.

    The API allows creation, update and query of agreement instances as well as creation, update and
    query of agreement specifications serving as templates for agreement instances.
  version: 5.0.0
servers:
  - url: '{apiRoot}/tmf-api/agreementManagement/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot/tmf-api/agreementManagement/v5'
        enum:
          - 'https://serverRoot/tmf-api/agreementManagement/v5'
tags:
  - name: agreement
    description: Operations for Agreement Resource
  - name: agreementSpecification
    description: Operations for AgreementSpecification Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /agreement:
    get:
      tags:
        - agreement
      summary: List or find Agreement objects
      description: List or find Agreement objects
      operationId: listAgreement
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200AgreementArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - agreement
      summary: Creates a Agreement
      description: This operation creates a Agreement entity.
      operationId: createAgreement
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Agreement_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Agreement'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/agreement/{id}':
    get:
      tags:
        - agreement
      summary: Retrieves a Agreement by ID
      description: >-
        This operation retrieves a Agreement entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrieveAgreement
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Agreement_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - agreement
      summary: Updates partially a Agreement
      description: This operation updates partially a Agreement entity.
      operationId: patchAgreement
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Agreement_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200Agreement_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - agreement
      summary: Deletes a Agreement
      description: This operation deletes a Agreement entity.
      operationId: deleteAgreement
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /agreementSpecification:
    get:
      tags:
        - agreementSpecification
      summary: List or find AgreementSpecification objects
      description: List or find AgreementSpecification objects
      operationId: listAgreementSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200AgreementSpecificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - agreementSpecification
      summary: Creates a AgreementSpecification
      description: This operation creates a AgreementSpecification entity.
      operationId: createAgreementSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/AgreementSpecification_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201AgreementSpecification'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/agreementSpecification/{id}':
    get:
      tags:
        - agreementSpecification
      summary: Retrieves a AgreementSpecification by ID
      description: >-
        This operation retrieves a AgreementSpecification entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveAgreementSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200AgreementSpecification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - agreementSpecification
      summary: Updates partially a AgreementSpecification
      description: This operation updates partially a AgreementSpecification entity.
      operationId: patchAgreementSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/AgreementSpecification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200AgreementSpecification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - agreementSpecification
      summary: Deletes a AgreementSpecification
      description: This operation deletes a AgreementSpecification entity.
      operationId: deleteAgreementSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    get:
      operationId: hubGet
      summary: Retrieve a subscription (hub)
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        AgreementAttributeValueChangeEvent
      operationId: agreementAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementCreateEvent
      description: Example of a client listener for receiving the notification AgreementCreateEvent
      operationId: agreementCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementDeleteEvent
      description: Example of a client listener for receiving the notification AgreementDeleteEvent
      operationId: agreementDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementSpecificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementSpecificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        AgreementSpecificationAttributeValueChangeEvent
      operationId: agreementSpecificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementSpecificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementSpecificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementSpecificationCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        AgreementSpecificationCreateEvent
      operationId: agreementSpecificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementSpecificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementSpecificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementSpecificationDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        AgreementSpecificationDeleteEvent
      operationId: agreementSpecificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementSpecificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementSpecificationStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementSpecificationStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        AgreementSpecificationStateChangeEvent
      operationId: agreementSpecificationStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementSpecificationStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/agreementStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity AgreementStateChangeEvent
      description: Example of a client listener for receiving the notification AgreementStateChangeEvent
      operationId: agreementStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/AgreementStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for addressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_MVO:
      type: object
      description: Base schema for addressable entities
    Agreement:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An agreement represents a contract or arrangement, either written or verbal and
            sometimes enforceable by law, such as a service level agreement or a customer price
            agreement. An agreement involves a number of other business entities, such as products,
            services, and resources and/or their specifications.
          properties:
            name:
              type: string
              description: A human-readable name for the agreement
            agreementType:
              type: string
              description: The type of the agreement. For example commercial
            agreementItem:
              type: array
              items:
                $ref: '#/components/schemas/AgreementItem'
              description: The items and clauses that make up the agreement
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                A list of external identifiers that can be used to retrieve or manipulate an
                agreement that (for example) originated in another system
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: >-
                Additional parties that are involved in the agreement - the nature of involvement is
                defined in the role property of RelatedParty
            engagedParty:
              type: array
              items:
                $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
              description: The parties that sign the agreement and are bound by its terms
            agreementPeriod:
              $ref: '#/components/schemas/TimePeriod'
            completionDate:
              $ref: '#/components/schemas/TimePeriod'
            description:
              type: string
              description: >-
                Narrative that explains the agreement and details about it, such as why the
                agreement is taking place.
            relatedDocument:
              type: array
              items:
                $ref: '#/components/schemas/RelatedDocumentRefOrValue'
              description: 'Documents related to the agreement, such as signed off contract'
            initialDate:
              type: string
              format: date-time
              description: Date at which the agreement was initialized
            statementOfIntent:
              type: string
              description: An overview and goals of the Agreement
            status:
              type: string
              description: >-
                The current status of the agreement. Typical values are: in process, approved,
                rejected
            version:
              type: string
              description: A string identifying the version of the agreement
            agreementSpecification:
              $ref: '#/components/schemas/AgreementSpecificationRef'
            agreementAuthorization:
              type: array
              items:
                $ref: '#/components/schemas/AgreementAuthorization'
              description: >-
                A list of signatures or other authorizations that constitute approval by the
                relevant parties
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Values for characteristics that were defined in the agreement specification.
            agreementRelationship:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRelationship'
              description: Points to other agreements that may be related to this agreement
      discriminator:
        propertyName: '@type'
        mapping:
          Agreement: '#/components/schemas/Agreement'
    AgreementAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementAttributeValueChangeEvent: '#/components/schemas/AgreementAttributeValueChangeEvent'
    AgreementAttributeValueChangeEventPayload:
      type: object
      description: AgreementAttributeValueChangeEventPayload generic structure
      properties:
        agreement:
          $ref: '#/components/schemas/Agreement'
    AgreementAuthorization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An authorization by a business participant that is responsible for approving the
            agreement.
          properties:
            id:
              type: string
              description: >-
                locally unique index allowing a specific authorization to be addressed in the list
                of authorizations
            date:
              type: string
              format: date-time
              description: The date associated with the authorization state.
            signatureRepresentation:
              type: string
              description: >-
                Indication that represents whether the signature is a physical paper signature or a
                digital signature.
            signature:
              $ref: '#/components/schemas/AttachmentRefOrValue'
            party:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
            state:
              type: string
              description: 'Current status of the authorization, for example in process, approved, rejected.'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementAuthorization: '#/components/schemas/AgreementAuthorization'
    AgreementAuthorization_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An authorization by a business participant that is responsible for approving the
            agreement.
          properties:
            id:
              type: string
              description: >-
                locally unique index allowing a specific authorization to be addressed in the list
                of authorizations
            date:
              type: string
              format: date-time
              description: The date associated with the authorization state.
            signatureRepresentation:
              type: string
              description: >-
                Indication that represents whether the signature is a physical paper signature or a
                digital signature.
            signature:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            party:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
            state:
              type: string
              description: 'Current status of the authorization, for example in process, approved, rejected.'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementAuthorization: '#/components/schemas/AgreementAuthorization_FVO'
    AgreementAuthorization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An authorization by a business participant that is responsible for approving the
            agreement.
          properties:
            date:
              type: string
              format: date-time
              description: The date associated with the authorization state.
            signatureRepresentation:
              type: string
              description: >-
                Indication that represents whether the signature is a physical paper signature or a
                digital signature.
            signature:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            party:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
            state:
              type: string
              description: 'Current status of the authorization, for example in process, approved, rejected.'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementAuthorization: '#/components/schemas/AgreementAuthorization_MVO'
    AgreementCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementCreateEvent: '#/components/schemas/AgreementCreateEvent'
    AgreementCreateEventPayload:
      type: object
      description: AgreementCreateEventPayload generic structure
      properties:
        agreement:
          $ref: '#/components/schemas/Agreement'
    AgreementDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementDeleteEvent: '#/components/schemas/AgreementDeleteEvent'
    AgreementDeleteEventPayload:
      type: object
      description: AgreementDeleteEventPayload generic structure
      properties:
        agreement:
          $ref: '#/components/schemas/Agreement'
    AgreementItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A clause of the agreement containing specific terms and conditions. The clause may refer
            to specific products that are owned by parties to the agreement, or product offerings
            that will be supplied to parties under the terms of the agreement.
          properties:
            id:
              type: string
              description: >-
                Locally-unique identifier of the Agreement item within the agreement (such as a
                sequence number 01, 02, 03, ...; or clauses and sub-clauses 1, 1.1, 1.2, ...)
            termOrCondition:
              type: array
              items:
                $ref: '#/components/schemas/AgreementTermOrCondition'
              description: List of terms and conditions for this clause.
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItem: '#/components/schemas/AgreementItem'
          ProductAgreementItem: '#/components/schemas/ProductAgreementItem'
    AgreementItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A clause of the agreement containing specific terms and conditions. The clause may refer
            to specific products that are owned by parties to the agreement, or product offerings
            that will be supplied to parties under the terms of the agreement.
          properties:
            id:
              type: string
              description: >-
                Locally-unique identifier of the Agreement item within the agreement (such as a
                sequence number 01, 02, 03, ...; or clauses and sub-clauses 1, 1.1, 1.2, ...)
            termOrCondition:
              type: array
              items:
                $ref: '#/components/schemas/AgreementTermOrCondition_FVO'
              description: List of terms and conditions for this clause.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItem: '#/components/schemas/AgreementItem_FVO'
          ProductAgreementItem: '#/components/schemas/ProductAgreementItem_FVO'
    AgreementItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            A clause of the agreement containing specific terms and conditions. The clause may refer
            to specific products that are owned by parties to the agreement, or product offerings
            that will be supplied to parties under the terms of the agreement.
          properties:
            termOrCondition:
              type: array
              items:
                $ref: '#/components/schemas/AgreementTermOrCondition_MVO'
              description: List of terms and conditions for this clause.
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItem: '#/components/schemas/AgreementItem_MVO'
          ProductAgreementItem: '#/components/schemas/ProductAgreementItem_MVO'
    AgreementRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: A uni-directionmal relationship from this agreement to another agreement
          properties:
            id:
              type: string
              description: Unique identifier of the related agreement
            name:
              type: string
              description: Name of the agreement
            relationshipType:
              type: string
              description: 'Type of relationship such as containment, substitution, dependency, exclusivity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRelationship: '#/components/schemas/AgreementRelationship'
    AgreementRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: A uni-directionmal relationship from this agreement to another agreement
          properties:
            name:
              type: string
              description: Name of the agreement
            relationshipType:
              type: string
              description: 'Type of relationship such as containment, substitution, dependency, exclusivity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRelationship: '#/components/schemas/AgreementRelationship_MVO'
    AgreementSpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: A template of an agreement that can be used when establishing partnerships
          properties:
            name:
              type: string
              description: Name given to the agreement specification
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about
            isBundle:
              type: boolean
              description: >-
                If true, this agreement specification is a grouping of other agreement
                specifications. The list of bundled agreement specifications is provided by the
                specificationRelationship property
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                A list of external identifiers that can be used to retrieve or manipulate an
                agreement specification that (for example) originated in another system
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            lifecycleStatus:
              type: string
              description: Indicates the current lifecycle status
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: Agreement specification version
            category:
              $ref: '#/components/schemas/CategoryRef'
            specificationCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            specificationRelationship:
              type: array
              items:
                $ref: '#/components/schemas/AgreementSpecificationRelationship'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this agreement specification, such as
                picture, document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecification: '#/components/schemas/AgreementSpecification'
    AgreementSpecificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementSpecificationAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementSpecificationAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationAttributeValueChangeEvent: '#/components/schemas/AgreementSpecificationAttributeValueChangeEvent'
    AgreementSpecificationAttributeValueChangeEventPayload:
      type: object
      description: AgreementSpecificationAttributeValueChangeEventPayload generic structure
      properties:
        agreementSpecification:
          $ref: '#/components/schemas/AgreementSpecification'
    AgreementSpecificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementSpecificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementSpecificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationCreateEvent: '#/components/schemas/AgreementSpecificationCreateEvent'
    AgreementSpecificationCreateEventPayload:
      type: object
      description: AgreementSpecificationCreateEventPayload generic structure
      properties:
        agreementSpecification:
          $ref: '#/components/schemas/AgreementSpecification'
    AgreementSpecificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementSpecificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementSpecificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationDeleteEvent: '#/components/schemas/AgreementSpecificationDeleteEvent'
    AgreementSpecificationDeleteEventPayload:
      type: object
      description: AgreementSpecificationDeleteEventPayload generic structure
      properties:
        agreementSpecification:
          $ref: '#/components/schemas/AgreementSpecification'
    AgreementSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Agreement specification reference. An AgreementSpecification represents a template of an
            agreement that can be used when establishing partnerships.
          properties:
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about.
            version:
              type: string
              description: Agreement specification version
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationRef: '#/components/schemas/AgreementSpecificationRef'
    AgreementSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Agreement specification reference. An AgreementSpecification represents a template of an
            agreement that can be used when establishing partnerships.
          properties:
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about.
            version:
              type: string
              description: Agreement specification version
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationRef: '#/components/schemas/AgreementSpecificationRef_MVO'
    AgreementSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            A relationship between agreement specifications. Typical relationships are substitution
            and dependency.
          properties:
            relationshipType:
              type: string
              description: 'Type of relationship such as, substitution or dependency.'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationRelationship: '#/components/schemas/AgreementSpecificationRelationship'
    AgreementSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            A relationship between agreement specifications. Typical relationships are substitution
            and dependency.
          properties:
            relationshipType:
              type: string
              description: 'Type of relationship such as, substitution or dependency.'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationRelationship: '#/components/schemas/AgreementSpecificationRelationship_MVO'
    AgreementSpecificationStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementSpecificationStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementSpecificationStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationStateChangeEvent: '#/components/schemas/AgreementSpecificationStateChangeEvent'
    AgreementSpecificationStateChangeEventPayload:
      type: object
      description: AgreementSpecificationStateChangeEventPayload generic structure
      properties:
        agreementSpecification:
          $ref: '#/components/schemas/AgreementSpecification'
    AgreementSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: A template of an agreement that can be used when establishing partnerships
          properties:
            name:
              type: string
              description: Name given to the agreement specification
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about
            isBundle:
              type: boolean
              description: >-
                If true, this agreement specification is a grouping of other agreement
                specifications. The list of bundled agreement specifications is provided by the
                specificationRelationship property
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                A list of external identifiers that can be used to retrieve or manipulate an
                agreement specification that (for example) originated in another system
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update
            lifecycleStatus:
              type: string
              description: Indicates the current lifecycle status
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: Agreement specification version
            category:
              $ref: '#/components/schemas/CategoryRef'
            specificationCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            specificationRelationship:
              type: array
              items:
                $ref: '#/components/schemas/AgreementSpecificationRelationship'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this agreement specification, such as
                picture, document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
          required:
            - lastUpdate
            - lifecycleStatus
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecification: '#/components/schemas/AgreementSpecification_FVO'
    AgreementSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: A template of an agreement that can be used when establishing partnerships
          properties:
            name:
              type: string
              description: Name given to the agreement specification
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about
            isBundle:
              type: boolean
              description: >-
                If true, this agreement specification is a grouping of other agreement
                specifications. The list of bundled agreement specifications is provided by the
                specificationRelationship property
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                A list of external identifiers that can be used to retrieve or manipulate an
                agreement specification that (for example) originated in another system
            lifecycleStatus:
              type: string
              description: Indicates the current lifecycle status
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: Agreement specification version
            category:
              $ref: '#/components/schemas/CategoryRef_MVO'
            specificationCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            specificationRelationship:
              type: array
              items:
                $ref: '#/components/schemas/AgreementSpecificationRelationship_MVO'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this agreement specification, such as
                picture, document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecification: '#/components/schemas/AgreementSpecification_MVO'
    AgreementStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: AgreementStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/AgreementStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementStateChangeEvent: '#/components/schemas/AgreementStateChangeEvent'
    AgreementStateChangeEventPayload:
      type: object
      description: AgreementStateChangeEventPayload generic structure
      properties:
        agreement:
          $ref: '#/components/schemas/Agreement'
    AgreementStatusExampleType:
      enum:
        - initialized
        - inProgress
        - rejected
        - validated
        - approved
      type: string
      description: Possible values for the state of the agreement
    AgreementTermOrCondition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Aspects of the agreement not formally specified elsewhere in the agreement and that
            cannot be captured elsewhere in a formal notation, or automatically monitored and
            require a more human level of management.
          properties:
            description:
              type: string
              description: Text that explains the term or condition of the agreement.
            id:
              type: string
              description: Locally unique identitifier assigned for reference.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementTermOrCondition: '#/components/schemas/AgreementTermOrCondition'
    AgreementTermOrCondition_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Aspects of the agreement not formally specified elsewhere in the agreement and that
            cannot be captured elsewhere in a formal notation, or automatically monitored and
            require a more human level of management.
          properties:
            description:
              type: string
              description: Text that explains the term or condition of the agreement.
            id:
              type: string
              description: Locally unique identitifier assigned for reference.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementTermOrCondition: '#/components/schemas/AgreementTermOrCondition_FVO'
    AgreementTermOrCondition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            Aspects of the agreement not formally specified elsewhere in the agreement and that
            cannot be captured elsewhere in a formal notation, or automatically monitored and
            require a more human level of management.
          properties:
            description:
              type: string
              description: Text that explains the term or condition of the agreement.
            id:
              type: string
              description: Locally unique identitifier assigned for reference.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementTermOrCondition: '#/components/schemas/AgreementTermOrCondition_MVO'
    Agreement_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An agreement represents a contract or arrangement, either written or verbal and
            sometimes enforceable by law, such as a service level agreement or a customer price
            agreement. An agreement involves a number of other business entities, such as products,
            services, and resources and/or their specifications.
          properties:
            name:
              type: string
              description: A human-readable name for the agreement
            agreementType:
              type: string
              description: The type of the agreement. For example commercial
            agreementItem:
              type: array
              items:
                $ref: '#/components/schemas/AgreementItem_FVO'
              description: The items and clauses that make up the agreement
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                A list of external identifiers that can be used to retrieve or manipulate an
                agreement that (for example) originated in another system
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: >-
                Additional parties that are involved in the agreement - the nature of involvement is
                defined in the role property of RelatedParty
            engagedParty:
              type: array
              items:
                $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
              description: The parties that sign the agreement and are bound by its terms
            agreementPeriod:
              $ref: '#/components/schemas/TimePeriod'
            completionDate:
              $ref: '#/components/schemas/TimePeriod'
            description:
              type: string
              description: >-
                Narrative that explains the agreement and details about it, such as why the
                agreement is taking place.
            relatedDocument:
              type: array
              items:
                $ref: '#/components/schemas/RelatedDocumentRefOrValue_FVO'
              description: 'Documents related to the agreement, such as signed off contract'
            initialDate:
              type: string
              format: date-time
              description: Date at which the agreement was initialized
            statementOfIntent:
              type: string
              description: An overview and goals of the Agreement
            status:
              type: string
              description: >-
                The current status of the agreement. Typical values are: in process, approved,
                rejected
            version:
              type: string
              description: A string identifying the version of the agreement
            agreementSpecification:
              $ref: '#/components/schemas/AgreementSpecificationRef'
            agreementAuthorization:
              type: array
              items:
                $ref: '#/components/schemas/AgreementAuthorization_FVO'
              description: >-
                A list of signatures or other authorizations that constitute approval by the
                relevant parties
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Values for characteristics that were defined in the agreement specification.
            agreementRelationship:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRelationship'
              description: Points to other agreements that may be related to this agreement
          required:
            - name
            - agreementType
            - engagedParty
            - agreementItem
      discriminator:
        propertyName: '@type'
        mapping:
          Agreement: '#/components/schemas/Agreement_FVO'
    Agreement_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An agreement represents a contract or arrangement, either written or verbal and
            sometimes enforceable by law, such as a service level agreement or a customer price
            agreement. An agreement involves a number of other business entities, such as products,
            services, and resources and/or their specifications.
          properties:
            name:
              type: string
              description: A human-readable name for the agreement
            agreementType:
              type: string
              description: The type of the agreement. For example commercial
            agreementItem:
              type: array
              items:
                $ref: '#/components/schemas/AgreementItem_MVO'
              description: The items and clauses that make up the agreement
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                A list of external identifiers that can be used to retrieve or manipulate an
                agreement that (for example) originated in another system
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: >-
                Additional parties that are involved in the agreement - the nature of involvement is
                defined in the role property of RelatedParty
            engagedParty:
              type: array
              items:
                $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
              description: The parties that sign the agreement and are bound by its terms
            agreementPeriod:
              $ref: '#/components/schemas/TimePeriod'
            completionDate:
              $ref: '#/components/schemas/TimePeriod'
            description:
              type: string
              description: >-
                Narrative that explains the agreement and details about it, such as why the
                agreement is taking place.
            relatedDocument:
              type: array
              items:
                $ref: '#/components/schemas/RelatedDocumentRefOrValue_MVO'
              description: 'Documents related to the agreement, such as signed off contract'
            initialDate:
              type: string
              format: date-time
              description: Date at which the agreement was initialized
            statementOfIntent:
              type: string
              description: An overview and goals of the Agreement
            status:
              type: string
              description: >-
                The current status of the agreement. Typical values are: in process, approved,
                rejected
            version:
              type: string
              description: A string identifying the version of the agreement
            agreementSpecification:
              $ref: '#/components/schemas/AgreementSpecificationRef_MVO'
            agreementAuthorization:
              type: array
              items:
                $ref: '#/components/schemas/AgreementAuthorization_MVO'
              description: >-
                A list of signatures or other authorizations that constitute approval by the
                relevant parties
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Values for characteristics that were defined in the agreement specification.
            agreementRelationship:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRelationship_MVO'
              description: Points to other agreements that may be related to this agreement
      discriminator:
        propertyName: '@type'
        mapping:
          Agreement: '#/components/schemas/Agreement_MVO'
    AnyCharacteristicValue:
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/StringCharacteristic'
        - $ref: '#/components/schemas/IntegerCharacteristic'
        - $ref: '#/components/schemas/NumberCharacteristic'
        - $ref: '#/components/schemas/BooleanCharacteristic'
        - $ref: '#/components/schemas/ObjectCharacteristic'
        - $ref: '#/components/schemas/StringArrayCharacteristic'
        - $ref: '#/components/schemas/IntegerArrayCharacteristic'
        - $ref: '#/components/schemas/NumberArrayCharacteristic'
        - $ref: '#/components/schemas/BooleanArrayCharacteristic'
        - $ref: '#/components/schemas/ObjectArrayCharacteristic'
        - $ref: '#/components/schemas/MapAnyCharacteristicValue'
      discriminator:
        propertyName: '@type'
        mapping:
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          MapAnyCharacteristicValue: '#/components/schemas/MapAnyCharacteristicValue'
    AnyCharacteristicValue_FVO:
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/StringCharacteristic_FVO'
        - $ref: '#/components/schemas/IntegerCharacteristic_FVO'
        - $ref: '#/components/schemas/NumberCharacteristic_FVO'
        - $ref: '#/components/schemas/BooleanCharacteristic_FVO'
        - $ref: '#/components/schemas/ObjectCharacteristic_FVO'
        - $ref: '#/components/schemas/StringArrayCharacteristic_FVO'
        - $ref: '#/components/schemas/IntegerArrayCharacteristic_FVO'
        - $ref: '#/components/schemas/NumberArrayCharacteristic_FVO'
        - $ref: '#/components/schemas/BooleanArrayCharacteristic_FVO'
        - $ref: '#/components/schemas/ObjectArrayCharacteristic_FVO'
        - $ref: '#/components/schemas/MapAnyCharacteristicValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          MapAnyCharacteristicValue: '#/components/schemas/MapAnyCharacteristicValue_FVO'
    AnyCharacteristicValue_MVO:
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/StringCharacteristic_MVO'
        - $ref: '#/components/schemas/IntegerCharacteristic_MVO'
        - $ref: '#/components/schemas/NumberCharacteristic_MVO'
        - $ref: '#/components/schemas/BooleanCharacteristic_MVO'
        - $ref: '#/components/schemas/ObjectCharacteristic_MVO'
        - $ref: '#/components/schemas/StringArrayCharacteristic_MVO'
        - $ref: '#/components/schemas/IntegerArrayCharacteristic_MVO'
        - $ref: '#/components/schemas/NumberArrayCharacteristic_MVO'
        - $ref: '#/components/schemas/BooleanArrayCharacteristic_MVO'
        - $ref: '#/components/schemas/ObjectArrayCharacteristic_MVO'
        - $ref: '#/components/schemas/MapAnyCharacteristicValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          MapAnyCharacteristicValue: '#/components/schemas/MapAnyCharacteristicValue_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
              description: The event linked to the involved resource object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occurred.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
                description: Characteristic specification item boolean value
    BooleanArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
                description: Characteristic specification item boolean value
    BooleanArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
                description: Characteristic specification item boolean value
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    CategoryRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to a category in the catalog.
          properties:
            version:
              type: string
              description: Version of the category
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef'
    CategoryRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: Reference to a category in the catalog.
          properties:
            version:
              type: string
              description: Version of the category
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          MapAnyCharacteristicValue: '#/components/schemas/MapAnyCharacteristicValue'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    CharacteristicSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification'
    CharacteristicSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship'
    CharacteristicSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
    CharacteristicSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
    CharacteristicSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
          required:
            - name
            - valueType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_FVO'
    CharacteristicSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_MVO'
    CharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification'
          FloatArrayCharacteristicValueSpecification: '#/components/schemas/FloatArrayCharacteristicValueSpecification'
          FloatCharacteristicValueSpecification: '#/components/schemas/FloatCharacteristicValueSpecification'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification'
    CharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_FVO'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification_FVO'
          FloatArrayCharacteristicValueSpecification: '#/components/schemas/FloatArrayCharacteristicValueSpecification_FVO'
          FloatCharacteristicValueSpecification: '#/components/schemas/FloatCharacteristicValueSpecification_FVO'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification_FVO'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification_FVO'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification_FVO'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification_FVO'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification_FVO'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification_FVO'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification_FVO'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification_FVO'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification_FVO'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification_FVO'
    CharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_MVO'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification_MVO'
          FloatArrayCharacteristicValueSpecification: '#/components/schemas/FloatArrayCharacteristicValueSpecification_MVO'
          FloatCharacteristicValueSpecification: '#/components/schemas/FloatCharacteristicValueSpecification_MVO'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification_MVO'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification_MVO'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification_MVO'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification_MVO'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification_MVO'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification_MVO'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification_MVO'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification_MVO'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification_MVO'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic_FVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          MapAnyCharacteristicValue: '#/components/schemas/MapAnyCharacteristicValue_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic_MVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          MapAnyCharacteristicValue: '#/components/schemas/MapAnyCharacteristicValue_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
    Document:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Document is a tangible output from an activity
          properties:
            attachment:
              type: array
              description: Collection of attachments
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            category:
              type: array
              description: Collection of categories applicable
              items:
                $ref: '#/components/schemas/CategoryRef'
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            creationDate:
              type: string
              format: date-time
              description: >-
                The date and time the document was created. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            description:
              type: string
              description: free-text description of the document
            documentRelationship:
              type: array
              description: A collection of document elements
              items:
                $ref: '#/components/schemas/DocumentRef'
            documentSpecification:
              $ref: '#/components/schemas/DocumentSpecification'
            lastUpdate:
              type: string
              format: date-time
              description: >-
                The date and time the document was last modified. A date and time formatted in
                compliance with the ISO8601 standard must be used.
            lifecycleState:
              type: string
              description: The life cycle state of the document.
            relatedEntity:
              $ref: '#/components/schemas/RelatedEntity'
            relatedParty:
              type: array
              description: A collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            documentType:
              type: string
              description: Name of the document type
            version:
              type: string
              description: >-
                A particular form or variety of an artefact that is different from others or from
                the original. The form represents differences in properties that characterize an
                artefact, that are not enough to warrant creating a new artefact
            name:
              type: string
              description: A string used to give a name to the document
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document'
    DocumentRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentRef: '#/components/schemas/DocumentRef'
    DocumentRefOrValue:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Document'
        - $ref: '#/components/schemas/DocumentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document'
          DocumentRef: '#/components/schemas/DocumentRef'
    DocumentRefOrValue_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Document_FVO'
        - $ref: '#/components/schemas/DocumentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_FVO'
          DocumentRef: '#/components/schemas/DocumentRef'
    DocumentRefOrValue_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Document_MVO'
        - $ref: '#/components/schemas/DocumentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_MVO'
          DocumentRef: '#/components/schemas/DocumentRef_MVO'
    DocumentRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentRef: '#/components/schemas/DocumentRef_MVO'
    DocumentSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A document specification reference
          properties:
            URL:
              type: string
              description: URL of the Document Specification
            name:
              type: string
              description: a String. Name of the DocumentSpecification
            version:
              type: string
              description: 'A string, a version of the DocumentSpecification.'
            id:
              type: string
              description: Identifier of the DocumentSpecification
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecification: '#/components/schemas/DocumentSpecification'
    DocumentSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: A document specification reference
          properties:
            URL:
              type: string
              description: URL of the Document Specification
            name:
              type: string
              description: a String. Name of the DocumentSpecification
            version:
              type: string
              description: 'A string, a version of the DocumentSpecification.'
            id:
              type: string
              description: Identifier of the DocumentSpecification
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecification: '#/components/schemas/DocumentSpecification_FVO'
    DocumentSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: A document specification reference
          properties:
            URL:
              type: string
              description: URL of the Document Specification
            name:
              type: string
              description: a String. Name of the DocumentSpecification
            version:
              type: string
              description: 'A string, a version of the DocumentSpecification.'
      discriminator:
        propertyName: '@type'
        mapping:
          DocumentSpecification: '#/components/schemas/DocumentSpecification_MVO'
    Document_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Document is a tangible output from an activity
          properties:
            attachment:
              type: array
              description: Collection of attachments
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            category:
              type: array
              description: Collection of categories applicable
              items:
                $ref: '#/components/schemas/CategoryRef'
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            creationDate:
              type: string
              format: date-time
              description: >-
                The date and time the document was created. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            description:
              type: string
              description: free-text description of the document
            documentRelationship:
              type: array
              description: A collection of document elements
              items:
                $ref: '#/components/schemas/DocumentRef'
            documentSpecification:
              $ref: '#/components/schemas/DocumentSpecification_FVO'
            lastUpdate:
              type: string
              format: date-time
              description: >-
                The date and time the document was last modified. A date and time formatted in
                compliance with the ISO8601 standard must be used.
            lifecycleState:
              type: string
              description: The life cycle state of the document.
            relatedEntity:
              $ref: '#/components/schemas/RelatedEntity_FVO'
            relatedParty:
              type: array
              description: A collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            documentType:
              type: string
              description: Name of the document type
            version:
              type: string
              description: >-
                A particular form or variety of an artefact that is different from others or from
                the original. The form represents differences in properties that characterize an
                artefact, that are not enough to warrant creating a new artefact
            name:
              type: string
              description: A string used to give a name to the document
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_FVO'
    Document_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Document is a tangible output from an activity
          properties:
            attachment:
              type: array
              description: Collection of attachments
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            category:
              type: array
              description: Collection of categories applicable
              items:
                $ref: '#/components/schemas/CategoryRef_MVO'
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            creationDate:
              type: string
              format: date-time
              description: >-
                The date and time the document was created. A date and time formatted in compliance
                with the ISO8601 standard must be used.
            description:
              type: string
              description: free-text description of the document
            documentRelationship:
              type: array
              description: A collection of document elements
              items:
                $ref: '#/components/schemas/DocumentRef_MVO'
            documentSpecification:
              $ref: '#/components/schemas/DocumentSpecification_MVO'
            lastUpdate:
              type: string
              format: date-time
              description: >-
                The date and time the document was last modified. A date and time formatted in
                compliance with the ISO8601 standard must be used.
            lifecycleState:
              type: string
              description: The life cycle state of the document.
            relatedEntity:
              $ref: '#/components/schemas/RelatedEntity_MVO'
            relatedParty:
              type: array
              description: A collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            documentType:
              type: string
              description: Name of the document type
            version:
              type: string
              description: >-
                A particular form or variety of an artefact that is different from others or from
                the original. The form represents differences in properties that characterize an
                artefact, that are not enough to warrant creating a new artefact
            name:
              type: string
              description: A string used to give a name to the document
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Document: '#/components/schemas/Document_MVO'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanation of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              description: Collection of analytic characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_MVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    FloatArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Float(s).
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
                description: Characteristic value
    FloatArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Float(s).
              items:
                type: number
                format: float
                description: Characteristic value
          required:
            - value
    FloatArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Float(s).
              items:
                type: number
                format: float
                description: Characteristic value
    FloatCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
          required:
            - value
    FloatCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    MapAnyCharacteristicValue:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A definition of a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/AnyCharacteristicValue'
              description: Value of the characteristic
    MapAnyCharacteristicValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A definition of a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/AnyCharacteristicValue_FVO'
              description: Value of the characteristic
    MapAnyCharacteristicValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A definition of a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/AnyCharacteristicValue_MVO'
              description: Value of the characteristic
    MapArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    MapCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    MapCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format
          properties:
            value:
              type: array
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format
          properties:
            value:
              type: array
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format
          properties:
            value:
              type: array
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    ProductAgreementItem:
      allOf:
        - $ref: '#/components/schemas/AgreementItem'
        - type: object
          description: >-
            A part of the agreement expressed in terms of a product offering and possibly including
            specific terms and conditions.
          properties:
            id:
              type: string
              description: >-
                Locally-unique identifier of the Product Agreement item within the agreement (such
                as a sequence number 01, 02, 03, ...; or clauses and sub-clauses 1, 1.1, 1.2, ...)
            productOffering:
              description: The list of product offerings referred by this agreement item
              type: array
              items:
                $ref: '#/components/schemas/ProductOfferingRef'
            termOrCondition:
              type: array
              items:
                $ref: '#/components/schemas/AgreementTermOrCondition'
              description: List of terms and conditions for this clause.
            product:
              description: >-
                The list of products indirectly referred by this agreement item (since an agreement
                item refers primarily to product offerings)
              type: array
              items:
                $ref: '#/components/schemas/ProductRef'
    ProductAgreementItem_FVO:
      allOf:
        - $ref: '#/components/schemas/AgreementItem_FVO'
        - type: object
          description: >-
            A part of the agreement expressed in terms of a product offering and possibly including
            specific terms and conditions.
          properties:
            id:
              type: string
              description: >-
                Locally-unique identifier of the Product Agreement item within the agreement (such
                as a sequence number 01, 02, 03, ...; or clauses and sub-clauses 1, 1.1, 1.2, ...)
            productOffering:
              description: The list of product offerings referred by this agreement item
              type: array
              items:
                $ref: '#/components/schemas/ProductOfferingRef'
            termOrCondition:
              type: array
              items:
                $ref: '#/components/schemas/AgreementTermOrCondition_FVO'
              description: List of terms and conditions for this clause.
            product:
              description: >-
                The list of products indirectly referred by this agreement item (since an agreement
                item refers primarily to product offerings)
              type: array
              items:
                $ref: '#/components/schemas/ProductRef'
          required:
            - id
    ProductAgreementItem_MVO:
      allOf:
        - $ref: '#/components/schemas/AgreementItem_MVO'
        - type: object
          description: >-
            A part of the agreement expressed in terms of a product offering and possibly including
            specific terms and conditions.
          properties:
            id:
              type: string
              description: >-
                Locally-unique identifier of the Product Agreement item within the agreement (such
                as a sequence number 01, 02, 03, ...; or clauses and sub-clauses 1, 1.1, 1.2, ...)
            productOffering:
              description: The list of product offerings referred by this agreement item
              type: array
              items:
                $ref: '#/components/schemas/ProductOfferingRef_MVO'
            termOrCondition:
              type: array
              items:
                $ref: '#/components/schemas/AgreementTermOrCondition_MVO'
              description: List of terms and conditions for this clause.
            product:
              description: >-
                The list of products indirectly referred by this agreement item (since an agreement
                item refers primarily to product offerings)
              type: array
              items:
                $ref: '#/components/schemas/ProductRef_MVO'
          required:
            - id
    ProductOfferingRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef'
    ProductOfferingRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef_MVO'
    ProductRef:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef'
    ProductRef_MVO:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedDocumentRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the DocumentRefOrValue entity and not the RelatedDocumentRefOrValue class
            itself
          properties:
            role:
              type: string
            document:
              $ref: '#/components/schemas/DocumentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedDocumentRefOrValue: '#/components/schemas/RelatedDocumentRefOrValue'
    RelatedDocumentRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the DocumentRefOrValue entity and not the RelatedDocumentRefOrValue class
            itself
          properties:
            role:
              type: string
            document:
              $ref: '#/components/schemas/DocumentRefOrValue_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedDocumentRefOrValue: '#/components/schemas/RelatedDocumentRefOrValue_FVO'
    RelatedDocumentRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the DocumentRefOrValue entity and not the RelatedDocumentRefOrValue class
            itself
          properties:
            role:
              type: string
            document:
              $ref: '#/components/schemas/DocumentRefOrValue_MVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedDocumentRefOrValue: '#/components/schemas/RelatedDocumentRefOrValue_MVO'
    RelatedEntity:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity'
    RelatedEntity_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_FVO'
    RelatedEntity_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef_MVO'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    Agreement_FVO:
      description: The Agreement to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Agreement_FVO'
          examples:
            Agreement_Create_example:
              $ref: '#/components/examples/Agreement_Create_example_request'
      required: true
    Agreement_MVO:
      description: The Agreement to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Agreement_MVO'
          examples:
            Agreement_Implicit_Update_example:
              $ref: '#/components/examples/Agreement_Implicit_Update_example_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Agreement_MVO'
          examples:
            Agreement_Update_example_with_Patch_Merge:
              $ref: '#/components/examples/Agreement_Update_example_with_Patch_Merge_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Agreement_Update_example_with_JSON_Patch:
              $ref: '#/components/examples/Agreement_Update_example_with_JSON_Patch_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Agreement_Update_example_with_JSON_Patch_Query:
              $ref: '#/components/examples/Agreement_Update_example_with_JSON_Patch_Query_request'
      required: true
    AgreementCreateEvent:
      description: Agreement create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    AgreementAttributeValueChangeEvent:
      description: Agreement attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    AgreementStateChangeEvent:
      description: Agreement stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementStateChangeEvent'
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
      required: true
    AgreementDeleteEvent:
      description: Agreement delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    AgreementSpecification_FVO:
      description: The AgreementSpecification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecification_FVO'
          examples:
            AgreementSpecification_Create_example:
              $ref: '#/components/examples/AgreementSpecification_Create_example_request'
      required: true
    AgreementSpecification_MVO:
      description: The AgreementSpecification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecification_MVO'
          examples:
            Agreement_Specification_Implicit_Update_example:
              $ref: '#/components/examples/Agreement_Specification_Implicit_Update_example_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/AgreementSpecification_MVO'
          examples:
            Agreement_Update_example_with_Patch_Merge:
              $ref: '#/components/examples/Agreement_Update_example_with_Patch_Merge_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Agreement_Specification_Update_example_with_JSON_Patch:
              $ref: '#/components/examples/Agreement_Specification_Update_example_with_JSON_Patch_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Agreement_Specification_Update_example_with_JSON_Patch_Query:
              $ref: >-
                #/components/examples/Agreement_Specification_Update_example_with_JSON_Patch_Query_request
      required: true
    AgreementSpecificationCreateEvent:
      description: AgreementSpecification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecificationCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    AgreementSpecificationAttributeValueChangeEvent:
      description: AgreementSpecification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecificationAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    AgreementSpecificationStateChangeEvent:
      description: AgreementSpecification stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecificationStateChangeEvent'
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
      required: true
    AgreementSpecificationDeleteEvent:
      description: AgreementSpecification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecificationDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
          examples:
            Basic Hub Example Request:
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
                query: data
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Bad Request Error
              value:
                '@type': Error
                code: ERR400
                reason: Bad Request
                message: >-
                  The server could not understand the request due to invalid syntax. Please correct
                  the syntax and try again.
                referenceError: 'https://host/errors'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Unauthorized Error
              value:
                '@type': Error
                code: ERR401
                reason: Unauthorized
                message: >-
                  You are not authorized to access the requested resource. Please provide the
                  correct credentials.
                referenceError: 'https://host/errors'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Forbidden Error
              value:
                '@type': Error
                code: ERR403
                reason: Forbidden
                message: >-
                  You don't have the permission to access the requested resource. It is either
                  read-protected or not readable by the server.
                referenceError: 'https://host/errors'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Found Error
              value:
                '@type': Error
                code: ERR404
                reason: Not Found
                message: The requested URL was not found on the server.
                referenceError: 'https://host/errors'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Method Not allowed Error
              value:
                '@type': Error
                code: ERR405
                reason: Method Not allowed
                message: The method is not allowed for the requested URL.
                referenceError: 'https://host/errors'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Conflict Error
              value:
                '@type': Error
                code: ERR409
                reason: Conflict
                message: >-
                  The request could not be completed due to a conflict with the current state of the
                  target resource.
                referenceError: 'https://host/errors'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Internal Server Error example
              value:
                '@type': Error
                code: ERR500
                reason: Internal Server Error
                message: The server encountered an internal error. Please contact the system administrator.
                referenceError: 'https://host/errors'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Implemented Error
              value:
                '@type': Error
                code: ERR501
                reason: The requested operation is not implemented
                message: >-
                  The requested operation is not implemented. Please contact the system
                  administrator.
                referenceError: 'https://host/errors'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Service Unavailable Error
              value:
                '@type': Error
                code: ERR503
                reason: Service Unavailable
                message: The service is currently unavailable. Please try again later.
                referenceError: 'https://host/errors'
    200AgreementArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Agreement'
          examples:
            Agreement_list_example:
              $ref: '#/components/examples/Agreement_list_example_response'
    200Agreement_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Agreement'
          examples:
            Agreement_retrieve_example:
              $ref: '#/components/examples/Agreement_retrieve_example_response'
    200Agreement_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Agreement'
          examples:
            Agreement_Implicit_Update_example:
              $ref: '#/components/examples/Agreement_Implicit_Update_example_response'
    201Agreement:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Agreement'
          examples:
            Agreement_Create_example:
              $ref: '#/components/examples/Agreement_Create_example_response'
    200AgreementSpecificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AgreementSpecification'
          examples:
            AgreementSpecification_list_example:
              $ref: '#/components/examples/AgreementSpecification_list_example_response'
    200AgreementSpecification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecification'
          examples:
            AgreementSpecification_retrieve_example:
              $ref: '#/components/examples/AgreementSpecification_retrieve_example_response'
    200AgreementSpecification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecification'
          examples:
            Agreement_Specification_Implicit_Update_example:
              $ref: '#/components/examples/Agreement_Specification_Implicit_Update_example_response'
    201AgreementSpecification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementSpecification'
          examples:
            AgreementSpecification_Create_example:
              $ref: '#/components/examples/AgreementSpecification_Create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Error example
              value:
                '@type': Error
                code: ERR001
                reason: Missing information
                message: Please provide the additional example information
                referenceError: 'https://host/errors'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
          examples:
            basic:
              summary: Hub example
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    Agreement_list_example_response:
      value:
        - '@type': Agreement
          id: '8756'
          name: Employment Quota
        - '@type': Agreement
          id: '9435'
          name: Zero Bug
      description: >-
        Retrieving all approved agreements of engaged party 'So Magic Ltd'. The result items are
        shrinked to show only the id and name(fields=id,name)
    Agreement_retrieve_example_response:
      value:
        '@type': Agreement
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/40'
        id: '40'
        name: Moon
        agreementType: commercial
        status: inProgress
        version: '1.0'
        agreementSpecification:
          href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
          id: '1140'
          name: Moon Agreement Template
          '@type': AgreementSpecificationRef
          '@referredType': AgreementSpecification
        agreementPeriod:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        engagedParty:
          - href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/500'
            id: '500'
            name: Happy Travellers
            '@type': PartyRef
            '@referredType': Organization
        characteristic:
          - name: fidelityProgram
            '@type': StringCharacteristic
            value: premium
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: bill receiver
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/2777'
              id: '2777'
              name: John Doe Private Holdings
              '@type': PartyRef
              '@referredType': Organization
        agreementItem:
          - id: '1'
            '@type': AgreementItem
            termOrCondition:
              - id: '1'
                description: delivery should be done in France
                '@type': AgreementTermOrCondition
          - id: '2'
            '@type': ProductAgreementItem
            productOffering:
              - id: '9559'
                href: 'https://mycsp.com:8080/tmf-api/productCatalog/v5/productOffering/9559'
                name: Magic Offer
                version: '1.1'
                '@type': ProductOfferingRef
            product:
              - id: '7120'
                href: 'https://mycsp.com:8080/tmf-api/productInventory/v5/product/7120'
                name: Magic Offer Instance
                '@type': ProductRef
            termOrCondition:
              - id: '1'
                description: The product offering will be made available for up to 10 users
                validFor:
                  endDateTime: '2019-09-06T09:56:38.679Z'
                  startDateTime: '2020-09-06T09:56:38.679Z'
                '@type': AgreementTermOrCondition
      description: Here's an example of a request for retrieving a specific Agreement resource
    AgreementSpecification_list_example_response:
      value:
        - '@type': AgreementSpecification
          id: '5434'
          name: General Maintenance
        - '@type': AgreementSpecification
          id: '9080'
          name: Secret
      description: >-
        Retrieving all agreement specifications with the government army. The result items are
        shrinked to show only the id and name (fields=id,name).
    AgreementSpecification_retrieve_example_response:
      value:
        '@type': AgreementSpecification
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
        id: '1140'
        name: Moon Agreement Template
        lifecycleStatus: Approved
        lastUpdate: '2018-06-05T00:00:00Z'
        version: '2.0'
        validFor:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        specificationCharacteristic:
          - '@type': CharacteristicSpecification
            name: fidelityProgram
            configurable: true
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: agreement expert
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
              id: '2778'
              name: Jean Smith
              '@type': PartyRef
              '@referredType': Organization
      description: Here's an example of a request for retrieving an AgreementSpecification resource
    Agreement_Create_example_request:
      value:
        '@type': Agreement
        name: Moon
        agreementType: commercial
        status: inProgress
        version: '1.0'
        agreementSpecification:
          href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
          id: '1140'
          name: Moon Agreement Template
          '@type': AgreementSpecificationRef
          '@referredType': AgreementSpecification
        agreementPeriod:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        engagedParty:
          - href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/500'
            id: '500'
            name: Happy Travellers
            '@type': PartyRef
            '@referredType': Organization
        characteristic:
          - name: fidelityProgram
            '@type': StringCharacteristic
            value: premium
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: bill receiver
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/2777'
              id: '2777'
              name: John Doe Private Holdings
              '@type': PartyRef
              '@referredType': Organization
        agreementItem:
          - id: '1'
            '@type': AgreementItem
            termOrCondition:
              - id: '1'
                description: delivery should be done in France
                '@type': AgreementTermOrCondition
          - id: '2'
            '@type': ProductAgreementItem
            productOffering:
              - id: '9559'
                href: 'https://mycsp.com:8080/tmf-api/productCatalog/v5/productOffering/9559'
                name: Magic Offer
                version: '1.1'
                '@type': ProductOfferingRef
            product:
              - id: '7120'
                href: 'https://mycsp.com:8080/tmf-api/productInventory/v5/product/7120'
                name: Magic Offer Instance
                '@type': ProductRef
            termOrCondition:
              - id: '1'
                description: The product offering will be made available for up to 10 users
                validFor:
                  endDateTime: '2019-09-06T09:56:38.679Z'
                  startDateTime: '2020-09-06T09:56:38.679Z'
                '@type': AgreementTermOrCondition
      description: Here is an example of a request for creating an agreement
    Agreement_Create_example_response:
      value:
        '@type': Agreement
        name: Moon
        agreementType: commercial
        status: inProgress
        version: '1.0'
        agreementSpecification:
          href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
          id: '1140'
          name: Moon Agreement Template
          '@type': AgreementSpecificationRef
          '@referredType': AgreementSpecification
        agreementPeriod:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        engagedParty:
          - href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/500'
            id: '500'
            name: Happy Travellers
            '@type': PartyRef
            '@referredType': Organization
        characteristic:
          - name: fidelityProgram
            '@type': StringCharacteristic
            value: premium
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: bill receiver
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/2777'
              id: '2777'
              name: John Doe Private Holdings
              '@type': PartyRef
              '@referredType': Organization
        agreementItem:
          - id: '1'
            '@type': AgreementItem
            termOrCondition:
              - id: '1'
                description: delivery should be done in France
                '@type': AgreementTermOrCondition
          - id: '2'
            '@type': ProductAgreementItem
            productOffering:
              - id: '9559'
                href: 'https://mycsp.com:8080/tmf-api/productCatalog/v5/productOffering/9559'
                name: Magic Offer
                version: '1.1'
                '@type': ProductOfferingRef
            product:
              - id: '7120'
                href: 'https://mycsp.com:8080/tmf-api/productInventory/v5/product/7120'
                name: Magic Offer Instance
                '@type': ProductRef
            termOrCondition:
              - id: '1'
                description: The product offering will be made available for up to 10 users
                validFor:
                  endDateTime: '2019-09-06T09:56:38.679Z'
                  startDateTime: '2020-09-06T09:56:38.679Z'
                '@type': AgreementTermOrCondition
      description: Here is an example of a response for creating an agreement.
    AgreementSpecification_Create_example_request:
      value:
        '@type': AgreementSpecification
        name: Moon Agreement Template
        lifecycleStatus: In progress
        lastUpdate: '2018-06-05T00:00:00Z'
        version: '1.0'
        validFor:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        specificationCharacteristic:
          - '@type': CharacteristicSpecification
            name: fidelityProgram
            configurable: true
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: agreement expert
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
              id: '2778'
              name: Jean Smith
              '@type': PartyRef
              '@referredType': Organization
      description: Here is an example of a request for creating an agreement specification.
    AgreementSpecification_Create_example_response:
      value:
        '@type': AgreementSpecification
        name: Moon Agreement Template
        lifecycleStatus: In progress
        lastUpdate: '2018-06-05T00:00:00Z'
        version: '1.0'
        validFor:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        specificationCharacteristic:
          - '@type': CharacteristicSpecification
            name: fidelityProgram
            configurable: true
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: agreement expert
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
              id: '2778'
              name: Jean Smith
              '@type': PartyRef
              '@referredType': Organization
      description: Here is an example of a response for creating an agreement specification.
    Agreement_Update_example_with_Patch_Merge_request:
      value:
        '@type': Agreement
        attachment:
          - '@type': Attachment
            name: Detailed description of Moon template
            url: 'https://www.allmydocs.fr/agreement_standard.pdf'
            mimeType: application/pdf
      description: Here is an example of a request for updating an agreement specification.
    Agreement_Update_example_with_Patch_Merge_response:
      value:
        '@type': AgreementSpecification
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
        id: '1140'
        name: Moon Agreement Template
        lifecycleStatus: Approved
        lastUpdate: '2018-06-05T00:00:00Z'
        version: '2.0'
        validFor:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        specificationCharacteristic:
          - '@type': CharacteristicSpecification
            name: fidelityProgram
            configurable: true
            valueType: string
        attachment:
          - '@type': Attachment
            name: Detailed description of Moon template
            url: 'https://www.allmydocs.fr/agreement_standard.pdf'
            mimeType: application/pdf
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: agreement expert
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
              id: '2778'
              name: Jean Smith
              '@type': PartyRef
              '@referredType': Organization
      description: Here is an example of a response for updating an agreement specification.
    Agreement_Implicit_Update_example_request:
      value:
        '@type': Agreement
        status: rejected
      description: Here is an example of a request for updating an agreement.
    Agreement_Implicit_Update_example_response:
      value:
        '@type': Agreement
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/40'
        id: '40'
        name: Moon
        agreementType: commercial
        status: rejected
        version: '1.0'
        agreementSpecification:
          href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
          id: '1140'
          name: Moon Agreement Template
          '@type': AgreementSpecificationRef
          '@referredType': AgreementSpecification
        agreementPeriod:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        engagedParty:
          - href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/500'
            id: '500'
            name: Happy Travellers
            '@type': PartyRef
            '@referredType': Organization
        characteristic:
          - name: fidelityProgram
            '@type': StringCharacteristic
            value: premium
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: bill receiver
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/2777'
              id: '2777'
              name: John Doe Private Holdings
              '@type': PartyRef
              '@referredType': Organization
        agreementItem:
          - id: '1'
            '@type': AgreementItem
            termOrCondition:
              - id: '1'
                description: delivery should be done in France
                '@type': AgreementTermOrCondition
          - id: '2'
            '@type': ProductAgreementItem
            productOffering:
              - id: '9559'
                href: 'https://mycsp.com:8080/tmf-api/productCatalog/v5/productOffering/9559'
                name: Magic Offer
                version: '1.1'
                '@type': ProductOfferingRef
            product:
              - id: '7120'
                href: 'https://mycsp.com:8080/tmf-api/productInventory/v5/product/7120'
                name: Magic Offer Instance
                '@type': ProductRef
            termOrCondition:
              - id: '1'
                description: The product offering will be made available for up to 10 users
                validFor:
                  endDateTime: '2019-09-06T09:56:38.679Z'
                  startDateTime: '2020-09-06T09:56:38.679Z'
                '@type': AgreementTermOrCondition
      description: Here is an example of a response for updating an agreement.
    Agreement_Update_example_with_JSON_Patch_request:
      value:
        - op: replace
          path: version
          value: '2.0'
        - op: replace
          path: agreementPeriod
          value:
            startDateTime: '2018-06-12T00:00:00Z'
            endDateTime: '2020-01-11T00:00:00Z'
      description: Here is an example of a request for updating an agreement.
    Agreement_Update_example_with_JSON_Patch_response:
      value:
        '@type': Agreement
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/40'
        id: '40'
        name: Moon
        agreementType: commercial
        status: inProgress
        version: '1.1'
        agreementSpecification:
          href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
          id: '1140'
          name: Moon Agreement Template
          '@type': AgreementSpecificationRef
          '@referredType': AgreementSpecification
        agreementPeriod:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2020-01-11T00:00:00Z'
        engagedParty:
          - href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/500'
            id: '500'
            name: Happy Travellers
            '@type': PartyRef
            '@referredType': Organization
        characteristic:
          - name: fidelityProgram
            '@type': StringCharacteristic
            value: premium
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: bill receiver
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/2777'
              id: '2777'
              name: John Doe Private Holdings
              '@type': PartyRef
              '@referredType': Organization
        agreementItem:
          - id: '1'
            '@type': AgreementItem
            termOrCondition:
              - id: '1'
                description: delivery should be done in France
                '@type': AgreementTermOrCondition
          - id: '2'
            '@type': ProductAgreementItem
            productOffering:
              - id: '9559'
                href: 'https://mycsp.com:8080/tmf-api/productCatalog/v5/productOffering/9559'
                name: Magic Offer
                version: '1.1'
                '@type': ProductOfferingRef
            product:
              - id: '7120'
                href: 'https://mycsp.com:8080/tmf-api/productInventory/v5/product/7120'
                name: Magic Offer Instance
                '@type': ProductRef
            termOrCondition:
              - id: '1'
                description: The product offering will be made available for up to 10 users
                validFor:
                  endDateTime: '2019-09-06T09:56:38.679Z'
                  startDateTime: '2020-09-06T09:56:38.679Z'
                '@type': AgreementTermOrCondition
      description: Here is an example of a response for updating an agreement.
    Agreement_Update_example_with_JSON_Patch_Query_request:
      value:
        - op: replace
          path: /characteristic/value?/characteristic/name=fidelityProgram
          value: standard
      description: Here is an example of a request for updating an agreement.
    Agreement_Update_example_with_JSON_Patch_Query_response:
      value:
        '@type': Agreement
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreement/40'
        id: '40'
        name: Moon
        agreementType: commercial
        status: inProgress
        version: '1.0'
        agreementSpecification:
          href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
          id: '1140'
          name: Moon Agreement Template
          '@type': AgreementSpecificationRef
          '@referredType': AgreementSpecification
        agreementPeriod:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        engagedParty:
          - href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/500'
            id: '500'
            name: Happy Travellers
            '@type': PartyRef
            '@referredType': Organization
        characteristic:
          - name: fidelityProgram
            '@type': StringCharacteristic
            value: standard
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: bill receiver
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/2777'
              id: '2777'
              name: John Doe Private Holdings
              '@type': PartyRef
              '@referredType': Organization
        agreementItem:
          - id: '1'
            '@type': AgreementItem
            termOrCondition:
              - id: '1'
                description: delivery should be done in France
                '@type': AgreementTermOrCondition
          - id: '2'
            '@type': ProductAgreementItem
            productOffering:
              - id: '9559'
                href: 'https://mycsp.com:8080/tmf-api/productCatalog/v5/productOffering/9559'
                name: Magic Offer
                version: '1.1'
                '@type': ProductOfferingRef
            product:
              - id: '7120'
                href: 'https://mycsp.com:8080/tmf-api/productInventory/v5/product/7120'
                name: Magic Offer Instance
                '@type': ProductRef
            termOrCondition:
              - id: '1'
                description: The product offering will be made available for up to 10 users
                validFor:
                  endDateTime: '2019-09-06T09:56:38.679Z'
                  startDateTime: '2020-09-06T09:56:38.679Z'
                '@type': AgreementTermOrCondition
      description: Here is an example of a response for updating an agreement.
    Agreement_Specification_Implicit_Update_example_request:
      value:
        '@type': Agreement
        attachment:
          - '@type': Attachment
            name: Detailed description of Moon template
            url: 'https://www.allmydocs.fr/agreement_standard.pdf'
            mimeType: application/pdf
      description: Here is an example of a request for updating an agreement specification.
    Agreement_Specification_Implicit_Update_example_response:
      value:
        '@type': AgreementSpecification
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
        id: '1140'
        name: Moon Agreement Template
        lifecycleStatus: Approved
        lastUpdate: '2018-06-05T00:00:00Z'
        version: '2.0'
        validFor:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        specificationCharacteristic:
          - '@type': CharacteristicSpecification
            name: fidelityProgram
            configurable: true
            valueType: string
        attachment:
          - '@type': Attachment
            name: Detailed description of Moon template
            url: 'https://www.allmydocs.fr/agreement_standard.pdf'
            mimeType: application/pdf
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: agreement expert
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
              id: '2778'
              name: Jean Smith
              '@type': PartyRef
              '@referredType': Organization
      description: Here is an example of a response for updating an agreement specification.
    Agreement_Specification_Update_example_with_JSON_Patch_request:
      value:
        - op: replace
          path: version
          value: '2.0'
        - op: replace
          path: validFor
          value:
            startDateTime: '2018-06-12T00:00:00Z'
            endDateTime: '2020-01-11T00:00:00Z'
      description: Here is an example of a request for updating an agreement specification.
    Agreement_Specification_Update_example_with_JSON_Patch_response:
      value:
        '@type': AgreementSpecification
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
        id: '1140'
        name: Moon Agreement Template
        lifecycleStatus: Approved
        lastUpdate: '2018-06-05T00:00:00Z'
        version: '2.0'
        validFor:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2020-01-11T00:00:00Z'
        specificationCharacteristic:
          - '@type': CharacteristicSpecification
            name: fidelityProgram
            configurable: true
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: agreement expert
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
              id: '2778'
              name: Jean Smith
              '@type': PartyRef
              '@referredType': Organization
      description: Here is an example of a response for updating an agreement specification.
    Agreement_Specification_Update_example_with_JSON_Patch_Query_request:
      value:
        - op: replace
          path: /relatedParty/role?/relatedParty/partyOrPartyRole/id=2778
          value: Agreement Authority
      description: Here is an example of a request for updating an agreement specification.
    Agreement_Specification_Update_example_with_JSON_Patch_Query_response:
      value:
        '@type': AgreementSpecification
        href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
        id: '1140'
        name: Moon Agreement Template
        lifecycleStatus: Approved
        lastUpdate: '2018-06-05T00:00:00Z'
        version: '2.0'
        validFor:
          startDateTime: '2018-06-12T00:00:00Z'
          endDateTime: '2019-01-11T00:00:00Z'
        specificationCharacteristic:
          - '@type': CharacteristicSpecification
            name: fidelityProgram
            configurable: true
            valueType: string
        relatedParty:
          - '@type': RelatedPartyRefOrPartyRoleRef
            role: Agreement Authority
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
              id: '2778'
              name: Jean Smith
              '@type': PartyRef
              '@referredType': Organization
      description: Here is an example of a response for updating an agreement specification.
    Create_request:
      value:
        correlationId: ecda1a89-9ff5
        description: AgreementSpecificationCreateEvent illustration
        domain: Commercial
        eventId: 40bb-a450-ecbabb2e23ae
        eventTime: '2022-08-25T12:20:58.621Z'
        eventType: AgreementSpecificationCreateEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:20:55.865Z'
        title: AgreementSpecificationCreateEvent
        event:
          agreementSpecification:
            '@type': AgreementSpecification
            href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
            id: '1140'
            name: Moon Agreement Template
            lifecycleStatus: Approved
            version: '2.0'
            validFor:
              startDateTime: '2018-06-12T00:00:00Z'
              endDateTime: '2019-01-11T00:00:00Z'
            specificationCharacteristic:
              - '@type': CharacteristicSpecification
                name: fidelityProgram
                configurable: true
                valueType: string
            relatedParty:
              - '@type': RelatedPartyRefOrPartyRoleRef
                role: agreement expert
                partyOrPartyRole:
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/2778'
                  id: '2778'
                  name: Jean Smith
                  '@type': PartyRef
                  '@referredType': Organization
        reportingSystem:
          id: '959'
          name: APP-628
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '281'
          name: APP-436
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AgreementSpecificationCreateEvent
      description: Message example for AgreementSpecificationCreateEvent event
    AttributeValueChange_request:
      value:
        correlationId: b04d1155-3bfe
        description: AgreementSpecificationAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4ce0-85b4-3594a96eca18
        eventTime: '2022-08-25T12:20:58.633Z'
        eventType: AgreementSpecificationAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:20:56.012Z'
        title: AgreementSpecificationAttributeValueChangeEvent
        event:
          agreementSpecification:
            href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
            id: '1140'
            '@type': AgreementSpecification
            validFor:
              startDateTime: '2018-06-12T00:00:00Z'
              endDateTime: '2020-01-11T00:00:00Z'
        reportingSystem:
          id: '959'
          name: APP-628
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '281'
          name: APP-436
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AgreementSpecificationAttributeValueChangeEvent
      description: Message example for AgreementSpecificationAttributeValueChangeEvent event
    StateChange_request:
      value:
        correlationId: eed80420-1889
        description: AgreementSpecificationStateChangeEvent illustration
        domain: Commercial
        eventId: 4594-809a-e75849cc782e
        eventTime: '2022-08-25T12:20:58.645Z'
        eventType: AgreementSpecificationStateChangeEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:49.658Z'
        title: AgreementSpecificationStateChangeEvent
        event:
          agreementSpecification:
            href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
            id: '1140'
            '@type': AgreementSpecification
            lifecycleStatus: Approved
        reportingSystem:
          id: '959'
          name: APP-628
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '281'
          name: APP-436
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AgreementSpecificationStateChangeEvent
      description: >-
        Message example for AgreementSpecificationStateChangeEvent event with ?fields=state property
        only
    Delete_request:
      value:
        correlationId: 47db624a-af7a
        description: AgreementSpecificationDeleteEvent illustration
        domain: Commercial
        eventId: 4cad-9c02-361e8fed9e8e
        eventTime: '2022-08-25T12:20:58.662Z'
        eventType: AgreementSpecificationDeleteEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:20:56.380Z'
        title: AgreementSpecificationDeleteEvent
        event:
          agreementSpecification:
            '@type': AgreementSpecification
            href: 'https://mycsp.com:8080/tmf-api/agreementManagement/v5/agreementSpecification/1140'
            id: '1140'
        reportingSystem:
          id: '959'
          name: APP-628
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '281'
          name: APP-436
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': AgreementSpecificationDeleteEvent
      description: Message example for AgreementSpecificationDeleteEvent event