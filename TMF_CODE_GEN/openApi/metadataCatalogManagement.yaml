openapi: 3.0.1
info:
  title: Metadata Catalog
  description: TMF Metadata Catalog specification
  version: 4.0.0
servers:
  - url: https://serverRoot/tmf-api/metadataCatalog/v4/
tags:
  - name: metadataCatalog
  - name: metadataCategory
  - name: metadataCatalogItem
  - name: metadataSpecification
  - name: notification listeners (client side)
  - name: events subscription
paths:
  /metadataCatalog:
    get:
      tags:
        - metadataCatalog
      summary: List or find MetadataCatalog objects
      description: This operation list or find MetadataCatalog entities
      operationId: listMetadataCatalog
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataCatalog'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - metadataCatalog
      summary: Creates a MetadataCatalog
      description: This operation creates a MetadataCatalog entity.
      operationId: createMetadataCatalog
      requestBody:
        description: The MetadataCatalog to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalog_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCatalog'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataCatalog
  /metadataCatalog/{id}:
    get:
      tags:
        - metadataCatalog
      summary: Retrieves a MetadataCatalog by ID
      description: This operation retrieves a MetadataCatalog entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveMetadataCatalog
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCatalog
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCatalog'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - metadataCatalog
      summary: Deletes a MetadataCatalog
      description: This operation deletes a MetadataCatalog entity.
      operationId: deleteMetadataCatalog
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCatalog
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - metadataCatalog
      summary: Updates partially a MetadataCatalog
      description: This operation updates partially a MetadataCatalog entity.
      operationId: patchMetadataCatalog
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCatalog
          required: true
          schema:
            type: string
      requestBody:
        description: The MetadataCatalog to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalog_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCatalog'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataCatalog
  /metadataCategory:
    get:
      tags:
        - metadataCategory
      summary: List or find MetadataCategory objects
      description: This operation list or find MetadataCategory entities
      operationId: listMetadataCategory
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataCategory'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - metadataCategory
      summary: Creates a MetadataCategory
      description: This operation creates a MetadataCategory entity.
      operationId: createMetadataCategory
      requestBody:
        description: The MetadataCategory to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCategory_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCategory'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataCategory
  /metadataCategory/{id}:
    get:
      tags:
        - metadataCategory
      summary: Retrieves a MetadataCategory by ID
      description: This operation retrieves a MetadataCategory entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveMetadataCategory
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCategory
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCategory'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - metadataCategory
      summary: Deletes a MetadataCategory
      description: This operation deletes a MetadataCategory entity.
      operationId: deleteMetadataCategory
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCategory
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - metadataCategory
      summary: Updates partially a MetadataCategory
      description: This operation updates partially a MetadataCategory entity.
      operationId: patchMetadataCategory
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCategory
          required: true
          schema:
            type: string
      requestBody:
        description: The MetadataCategory to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCategory_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCategory'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataCategory
  /metadataCatalogItem:
    get:
      tags:
        - metadataCatalogItem
      summary: List or find MetadataCatalogItem objects
      description: This operation list or find MetadataCatalogItem entities
      operationId: listMetadataCatalogItem
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataCatalogItem'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - metadataCatalogItem
      summary: Creates a MetadataCatalogItem
      description: This operation creates a MetadataCatalogItem entity.
      operationId: createMetadataCatalogItem
      requestBody:
        description: The MetadataCatalogItem to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogItem_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCatalogItem'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataCatalogItem
  /metadataCatalogItem/{id}:
    get:
      tags:
        - metadataCatalogItem
      summary: Retrieves a MetadataCatalogItem by ID
      description: This operation retrieves a MetadataCatalogItem entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveMetadataCatalogItem
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCatalogItem
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCatalogItem'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - metadataCatalogItem
      summary: Deletes a MetadataCatalogItem
      description: This operation deletes a MetadataCatalogItem entity.
      operationId: deleteMetadataCatalogItem
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCatalogItem
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - metadataCatalogItem
      summary: Updates partially a MetadataCatalogItem
      description: This operation updates partially a MetadataCatalogItem entity.
      operationId: patchMetadataCatalogItem
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataCatalogItem
          required: true
          schema:
            type: string
      requestBody:
        description: The MetadataCatalogItem to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogItem_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataCatalogItem'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataCatalogItem
  /metadataSpecification:
    get:
      tags:
        - metadataSpecification
      summary: List or find MetadataSpecification objects
      description: This operation list or find MetadataSpecification entities
      operationId: listMetadataSpecification
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetadataSpecification'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - metadataSpecification
      summary: Creates a MetadataSpecification
      description: This operation creates a MetadataSpecification entity.
      operationId: createMetadataSpecification
      requestBody:
        description: The MetadataSpecification to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataSpecification_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataSpecification'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataSpecification
  /metadataSpecification/{id}:
    get:
      tags:
        - metadataSpecification
      summary: Retrieves a MetadataSpecification by ID
      description: This operation retrieves a MetadataSpecification entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveMetadataSpecification
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataSpecification
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataSpecification'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - metadataSpecification
      summary: Deletes a MetadataSpecification
      description: This operation deletes a MetadataSpecification entity.
      operationId: deleteMetadataSpecification
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataSpecification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - metadataSpecification
      summary: Updates partially a MetadataSpecification
      description: This operation updates partially a MetadataSpecification entity.
      operationId: patchMetadataSpecification
      parameters:
        - name: id
          in: path
          description: Identifier of the MetadataSpecification
          required: true
          schema:
            type: string
      requestBody:
        description: The MetadataSpecification to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataSpecification_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MetadataSpecification'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: metadataSpecification
  /hub:
    post:
      tags:
        - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        '201':
          description: Subscribed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/metadataCatalogCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogCreateEvent
      description: Example of a client listener for receiving the notification MetadataCatalogCreateEvent
      operationId: listenToMetadataCatalogCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCatalogAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification MetadataCatalogAttributeValueChangeEvent
      operationId: listenToMetadataCatalogAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCatalogStatusChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogStatusChangeEvent
      description: Example of a client listener for receiving the notification MetadataCatalogStatusChangeEvent
      operationId: listenToMetadataCatalogStatusChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogStatusChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCatalogDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogDeleteEvent
      description: Example of a client listener for receiving the notification MetadataCatalogDeleteEvent
      operationId: listenToMetadataCatalogDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCategoryCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCategoryCreateEvent
      description: Example of a client listener for receiving the notification MetadataCategoryCreateEvent
      operationId: listenToMetadataCategoryCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCategoryCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCategoryAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCategoryAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification MetadataCategoryAttributeValueChangeEvent
      operationId: listenToMetadataCategoryAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCategoryAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCategoryStatusChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCategoryStatusChangeEvent
      description: Example of a client listener for receiving the notification MetadataCategoryStatusChangeEvent
      operationId: listenToMetadataCategoryStatusChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCategoryStatusChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCategoryDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCategoryDeleteEvent
      description: Example of a client listener for receiving the notification MetadataCategoryDeleteEvent
      operationId: listenToMetadataCategoryDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCategoryDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCatalogItemCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogItemCreateEvent
      description: Example of a client listener for receiving the notification MetadataCatalogItemCreateEvent
      operationId: listenToMetadataCatalogItemCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogItemCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCatalogItemAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogItemAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification MetadataCatalogItemAttributeValueChangeEvent
      operationId: listenToMetadataCatalogItemAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogItemAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCatalogItemStatusChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogItemStatusChangeEvent
      description: Example of a client listener for receiving the notification MetadataCatalogItemStatusChangeEvent
      operationId: listenToMetadataCatalogItemStatusChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogItemStatusChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataCatalogItemDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataCatalogItemDeleteEvent
      description: Example of a client listener for receiving the notification MetadataCatalogItemDeleteEvent
      operationId: listenToMetadataCatalogItemDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataCatalogItemDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataSpecificationCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataSpecificationCreateEvent
      description: Example of a client listener for receiving the notification MetadataSpecificationCreateEvent
      operationId: listenToMetadataSpecificationCreateEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataSpecificationCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataSpecificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataSpecificationAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification MetadataSpecificationAttributeValueChangeEvent
      operationId: listenToMetadataSpecificationAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataSpecificationAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataSpecificationStatusChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataSpecificationStatusChangeEvent
      description: Example of a client listener for receiving the notification MetadataSpecificationStatusChangeEvent
      operationId: listenToMetadataSpecificationStatusChangeEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataSpecificationStatusChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/metadataSpecificationDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MetadataSpecificationDeleteEvent
      description: Example of a client listener for receiving the notification MetadataSpecificationDeleteEvent
      operationId: listenToMetadataSpecificationDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MetadataSpecificationDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
      description: Base schema for adressable entities
    Any:
      type: object
    AssociationSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: reference to an AssociationSpecification object
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Complements the description of an element (for instance a product) through video, pictures...
    AttachmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique-Identifier for this attachment
        href:
          type: string
          description: URL serving as reference for the attachment resource
          format: uri
        description:
          type: string
          description: A narrative text describing the content of the attachment
        name:
          type: string
          description: Name of the related entity.
        url:
          type: string
          description: Link to the attachment media/content
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures
    AttachmentRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.
    CharacteristicSpecification:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the characteristic
        configurable:
          type: boolean
          description: If true, the Boolean indicates that the target Characteristic is configurable
        description:
          type: string
          description: A narrative that explains the CharacteristicSpecification.
        extensible:
          type: boolean
          description: An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource.
        isUnique:
          type: boolean
          description: Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic.
        maxCardinality:
          type: integer
          description: The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality.
        minCardinality:
          type: integer
          description: The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality.
        name:
          type: string
          description: A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications.
        regex:
          type: string
          description: A rule or principle represented in regular expression used to derive the value of a characteristic value.
        valueType:
          type: string
          description: A kind of value that the characteristic can take on, such as numeric, text and so forth
        charSpecRelationship:
          type: array
          description: An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.
          items:
            $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
        characteristicValueSpecification:
          type: array
          description: A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.
          items:
            $ref: '#/components/schemas/CharacteristicValueSpecification'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@valueSchemaLocation':
          type: string
          description: This (optional) field provides a link to the schema describing the value type.
      description: This class defines a characteristic specification.
    CharacteristicSpecificationBase:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the characteristic
        configurable:
          type: boolean
          description: If true, the Boolean indicates that the target Characteristic is configurable
        description:
          type: string
          description: A narrative that explains the CharacteristicSpecification.
        extensible:
          type: boolean
          description: An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource.
        isUnique:
          type: boolean
          description: Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic.
        maxCardinality:
          type: integer
          description: The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality.
        minCardinality:
          type: integer
          description: The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality.
        name:
          type: string
          description: A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications.
        regex:
          type: string
          description: A rule or principle represented in regular expression used to derive the value of a characteristic value.
        valueType:
          type: string
          description: A kind of value that the characteristic can take on, such as numeric, text and so forth
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@valueSchemaLocation':
          type: string
          description: This (optional) field provides a link to the schema describing the value type.
      description: This class defines a characteristic specification.
    CharacteristicSpecificationRelationship:
      type: object
      properties:
        characteristicSpecificationId:
          type: string
          description: Unique identifier of the characteristic within the specification
        name:
          type: string
          description: Name of the target characteristic within the specification
        parentSpecificationHref:
          type: string
          description: Hyperlink reference to the parent specification containing the target characteristic
          format: uri
        parentSpecificationId:
          type: string
          description: Unique identifier of the parent specification containing the target characteristic
        relationshipType:
          type: string
          description: Type of relationship such as aggregation, migration, substitution, dependency, exclusivity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID.
    CharacteristicValueSpecification:
      type: object
      properties:
        isDefault:
          type: boolean
          description: If true, the Boolean Indicates if the value is the default value for a characteristic
        rangeInterval:
          type: string
          description: An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are "open", "closed", "closedBottom" and "closedTop".
        regex:
          type: string
          description: A regular expression constraint for given value
        unitOfMeasure:
          type: string
          description: A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
        valueFrom:
          type: integer
          description: The low range value that a characteristic can take on
        valueTo:
          type: integer
          description: The upper range value that a characteristic can take on
        valueType:
          type: string
          description: A kind of value that the characteristic value can take on, such as numeric, text and so forth
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: specification of a value (number or text or an object) that can be assigned to a Characteristic.
    CompositeMetadataSpecification:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the metadata specification
        href:
          type: string
          description: Reference of the metadata specification
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status
        name:
          type: string
          description: Name of the metadata specification
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A type of MetadataSpecification that belongs to a grouping of MetadataSpecifications. It inherits of all attributes of MetadataSpecification.
    Entity:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base entity schema for use in TMForum Open-APIs
    EntityCategoryRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Category version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: |-
        Reference to Entity Category object. The (entity) category resource is used to group entity catalog items in logical containers. Categories can contain other categories.
        Resource IDs for categories are strings and are defined by the catalog application.
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    EntitySpecificationRelationship:
      required:
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        relationshipType:
          type: string
          description: Type of relationship such as migration, substitution, dependency, exclusivity
        role:
          type: string
          description: The association role for this entity specification
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A migration, substitution, dependency or exclusivity relationship between/among entity specifications.
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base Extensible schema for use in TMForum Open-APIs
    MetadataCatalog:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        description:
          type: string
          description: A narrative text describing the content of the MetadataCatalog
          example: Operational
        lastUpdateDate:
          type: string
          description: The date and time the metadata asset was last updated
          example: '2'
        name:
          type: string
          description: The name of the MetadataCatalog
        version:
          type: string
          description: Catalog version
        attachment:
          $ref: '#/components/schemas/Attachment'
        metadataCategory:
          type: array
          description: The categories used in this catalog
          items:
            $ref: '#/components/schemas/MetadataCategoryRef'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Additional information to describe the catalog
    MetadataCatalog_Create:
      required:
        - description
        - name
      type: object
      properties:
        description:
          type: string
          description: A narrative text describing the content of the MetadataCatalog
          example: Operational
        lastUpdateDate:
          type: string
          description: The date and time the metadata asset was last updated
          example: '2'
        name:
          type: string
          description: The name of the MetadataCatalog
        version:
          type: string
          description: Catalog version
        attachment:
          $ref: '#/components/schemas/Attachment'
        metadataCategory:
          type: array
          description: The categories used in this catalog
          items:
            $ref: '#/components/schemas/MetadataCategoryRef'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        Additional information to describe the catalog
        Skipped properties: id,href
    MetadataCatalog_Update:
      type: object
      properties:
        description:
          type: string
          description: A narrative text describing the content of the MetadataCatalog
          example: Operational
        name:
          type: string
          description: The name of the MetadataCatalog
        version:
          type: string
          description: Catalog version
        attachment:
          $ref: '#/components/schemas/Attachment'
        metadataCategory:
          type: array
          description: The categories used in this catalog
          items:
            $ref: '#/components/schemas/MetadataCategoryRef'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
      description: |-
        Additional information to describe the catalog
        Skipped properties: id,href,lastUpdateDate,@baseType,@schemaLocation,@type
    MetadataCatalogItem:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        description:
          type: string
          description: Description of this metadata catalog item resource
        lastUpdate:
          type: string
          description: Date and time of the last update of this REST resource
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to this REST resource
        category:
          type: array
          items:
            $ref: '#/components/schemas/MetadataCategoryRef'
        specification:
          $ref: '#/components/schemas/MetadataSpecificationRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        An MetadataCatalogItem is an entity that allows any metadata asset or even any object inheriting from RootEntity, to be available to a catalog. The MetadataSpecification and Policy of the catalog governs the content of the MetadataCatalogItem. This API addresses only MetadataSpecification items extended from RootEntity as MetadataCatalogItem.
        The MetadataCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the MetadataCatalogItem.
    MetadataCatalogItem_Create:
      required:
        - description
        - name
        - specification
      type: object
      properties:
        description:
          type: string
          description: Description of this metadata catalog item resource
        lastUpdate:
          type: string
          description: Date and time of the last update of this REST resource
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to this REST resource
        category:
          type: array
          items:
            $ref: '#/components/schemas/MetadataCategoryRef'
        specification:
          $ref: '#/components/schemas/MetadataSpecificationRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        An MetadataCatalogItem is an entity that allows any metadata asset or even any object inheriting from RootEntity, to be available to a catalog. The MetadataSpecification and Policy of the catalog governs the content of the MetadataCatalogItem. This API addresses only MetadataSpecification items extended from RootEntity as MetadataCatalogItem.
        The MetadataCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the MetadataCatalogItem.
        Skipped properties: id,href
    MetadataCatalogItem_Update:
      type: object
      properties:
        description:
          type: string
          description: Description of this metadata catalog item resource
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to this REST resource
        category:
          type: array
          items:
            $ref: '#/components/schemas/MetadataCategoryRef'
        specification:
          $ref: '#/components/schemas/MetadataSpecificationRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: |-
        An MetadataCatalogItem is an entity that allows any metadata asset or even any object inheriting from RootEntity, to be available to a catalog. The MetadataSpecification and Policy of the catalog governs the content of the MetadataCatalogItem. This API addresses only MetadataSpecification items extended from RootEntity as MetadataCatalogItem.
        The MetadataCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the MetadataCatalogItem.
        Skipped properties: id,href,lastUpdate,@baseType,@schemaLocation,@type
    MetadataCatalogItemRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Catalog Item version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Reference to Metadata Category Item object.
    MetadataCategory:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        description:
          type: string
          description: Description of the category
        isRoot:
          type: boolean
          description: If true, this Boolean indicates that the category is a root of categories
        lastUpdate:
          type: string
          description: Date and time of the last update
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status
        name:
          type: string
          description: Name of the category
        parentId:
          type: string
          description: Unique identifier of the parent category
        MetadataCatalogItem:
          type: array
          description: The metadata catalog items referred to by this category
          items:
            $ref: '#/components/schemas/MetadataCatalogItemRef'
        childCategory:
          type: array
          description: The child category(ies) if any, contained in this category
          items:
            $ref: '#/components/schemas/EntityCategoryRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        The category resource is used to group metadata catalog items in logical containers. Categories can contain other categories.
        Resource IDs for categories are strings and are defined by the catalog application.
    MetadataCategory_Create:
      required:
        - description
        - name
      type: object
      properties:
        description:
          type: string
          description: Description of the category
        isRoot:
          type: boolean
          description: If true, this Boolean indicates that the category is a root of categories
        lastUpdate:
          type: string
          description: Date and time of the last update
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status
        name:
          type: string
          description: Name of the category
        parentId:
          type: string
          description: Unique identifier of the parent category
        MetadataCatalogItem:
          type: array
          description: The metadata catalog items referred to by this category
          items:
            $ref: '#/components/schemas/MetadataCatalogItemRef'
        childCategory:
          type: array
          description: The child category(ies) if any, contained in this category
          items:
            $ref: '#/components/schemas/EntityCategoryRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        The category resource is used to group metadata catalog items in logical containers. Categories can contain other categories.
        Resource IDs for categories are strings and are defined by the catalog application.
        Skipped properties: id,href
    MetadataCategory_Update:
      type: object
      properties:
        description:
          type: string
          description: Description of the category
        isRoot:
          type: boolean
          description: If true, this Boolean indicates that the category is a root of categories
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status
        name:
          type: string
          description: Name of the category
        parentId:
          type: string
          description: Unique identifier of the parent category
        MetadataCatalogItem:
          type: array
          description: The metadata catalog items referred to by this category
          items:
            $ref: '#/components/schemas/MetadataCatalogItemRef'
        childCategory:
          type: array
          description: The child category(ies) if any, contained in this category
          items:
            $ref: '#/components/schemas/EntityCategoryRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: |-
        The category resource is used to group metadata catalog items in logical containers. Categories can contain other categories.
        Resource IDs for categories are strings and are defined by the catalog application.
        Skipped properties: id,href,lastUpdate,@baseType,@schemaLocation,@type
    MetadataCategoryRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Category version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: |-
        Reference to Metadata Category object. The metadata category resource is used to group entity catalog items in logical containers. Categories can contain other categories.
        Resource IDs for categories are strings and are defined by the catalog application.
    MetadataSpecification:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        description:
          type: string
          description: Description of the specification
        isComposed:
          type: boolean
          description: Indicates if the metadata specification is part of a composite specification
        lastUpdate:
          type: string
          description: Date and time of the last update of the specification
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to the specification
        attachment:
          type: array
          description: Attachments that may be of relevance to this specification, such as picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        compositeMetadataSpecification:
          type: array
          description: A type of MetadataSpecification that belongs to a grouping of MetadataSpecifications. It inherits of all attributes of MetadataSpecification.
          items:
            $ref: '#/components/schemas/CompositeMetadataSpecification'
        entitySpecRelationship:
          type: array
          description: Relationship to another specification
          items:
            $ref: '#/components/schemas/EntitySpecificationRelationship'
        metadataSpecCharacteristic:
          type: array
          description: List of characteristics that the entity can take
          items:
            $ref: '#/components/schemas/CharacteristicSpecification'
        policySpecificationRef:
          type: array
          description: This is a list of policy references applied to this specification
          items:
            $ref: '#/components/schemas/PolicySpecificationRef'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        targetEntitySchema:
          $ref: '#/components/schemas/TargetEntitySchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: MetadataSpecification is a class that describes the specification of a specific metadata asset
    MetadataSpecification_Create:
      required:
        - '@type'
        - description
        - name
      type: object
      properties:
        description:
          type: string
          description: Description of the specification
        isComposed:
          type: boolean
          description: Indicates if the metadata specification is part of a composite specification
        lastUpdate:
          type: string
          description: Date and time of the last update of the specification
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to the specification
        attachment:
          type: array
          description: Attachments that may be of relevance to this specification, such as picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        compositeMetadataSpecification:
          type: array
          description: A type of MetadataSpecification that belongs to a grouping of MetadataSpecifications. It inherits of all attributes of MetadataSpecification.
          items:
            $ref: '#/components/schemas/CompositeMetadataSpecification'
        entitySpecRelationship:
          type: array
          description: Relationship to another specification
          items:
            $ref: '#/components/schemas/EntitySpecificationRelationship'
        metadataSpecCharacteristic:
          type: array
          description: List of characteristics that the entity can take
          items:
            $ref: '#/components/schemas/CharacteristicSpecification'
        policySpecificationRef:
          type: array
          description: This is a list of policy references applied to this specification
          items:
            $ref: '#/components/schemas/PolicySpecificationRef'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        targetEntitySchema:
          $ref: '#/components/schemas/TargetEntitySchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        MetadataSpecification is a class that describes the specification of a specific metadata asset
        Skipped properties: id,href
    MetadataSpecification_Update:
      type: object
      properties:
        description:
          type: string
          description: Description of the specification
        isComposed:
          type: boolean
          description: Indicates if the metadata specification is part of a composite specification
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to the specification
        attachment:
          type: array
          description: Attachments that may be of relevance to this specification, such as picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        compositeMetadataSpecification:
          type: array
          description: A type of MetadataSpecification that belongs to a grouping of MetadataSpecifications. It inherits of all attributes of MetadataSpecification.
          items:
            $ref: '#/components/schemas/CompositeMetadataSpecification'
        entitySpecRelationship:
          type: array
          description: Relationship to another specification
          items:
            $ref: '#/components/schemas/EntitySpecificationRelationship'
        metadataSpecCharacteristic:
          type: array
          description: List of characteristics that the entity can take
          items:
            $ref: '#/components/schemas/CharacteristicSpecification'
        policySpecificationRef:
          type: array
          description: This is a list of policy references applied to this specification
          items:
            $ref: '#/components/schemas/PolicySpecificationRef'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        targetEntitySchema:
          $ref: '#/components/schemas/TargetEntitySchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      description: |-
        MetadataSpecification is a class that describes the specification of a specific metadata asset
        Skipped properties: id,href,lastUpdate,@baseType,@schemaLocation,@type
    MetadataSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: MetadataSpecification version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: reference to an MetadataSpecification object
    PolicyRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The identifier of the policy
        href:
          type: string
          description: The reference link to the policy
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Reference to a Policy
    PolicySpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        version:
          type: string
          description: PolicySpecification version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: reference to an PolicySpecification object
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1
        units:
          type: string
          description: Unit
      description: An amount in a given unit
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
    TargetEntitySchema:
      required:
        - '@schemaLocation'
        - '@type'
      type: object
      properties:
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
        '@type':
          type: string
          description: Class type of the target entity
      description: The reference object to the schema and type of target entity which is described by a specification
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    MetadataCatalogCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCatalogCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCatalogCreateEventPayload:
      type: object
      properties:
        metadataCatalog:
          $ref: '#/components/schemas/MetadataCatalog'
      description: The event data structure
    MetadataCatalogAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/MetadataCatalogAttributeValueChangeEventPayload'
      description: The notification data structure
    MetadataCatalogAttributeValueChangeEventPayload:
      type: object
      properties:
        metadataCatalog:
          $ref: '#/components/schemas/MetadataCatalog'
      description: The event data structure
    MetadataCatalogStatusChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCatalogStatusChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCatalogStatusChangeEventPayload:
      type: object
      properties:
        metadataCatalog:
          $ref: '#/components/schemas/MetadataCatalog'
      description: The event data structure
    MetadataCatalogDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCatalogDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCatalogDeleteEventPayload:
      type: object
      properties:
        metadataCatalog:
          $ref: '#/components/schemas/MetadataCatalog'
      description: The event data structure
    MetadataCategoryCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCategoryCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCategoryCreateEventPayload:
      type: object
      properties:
        metadataCategory:
          $ref: '#/components/schemas/MetadataCategory'
      description: The event data structure
    MetadataCategoryAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/MetadataCategoryAttributeValueChangeEventPayload'
      description: The notification data structure
    MetadataCategoryAttributeValueChangeEventPayload:
      type: object
      properties:
        metadataCategory:
          $ref: '#/components/schemas/MetadataCategory'
      description: The event data structure
    MetadataCategoryStatusChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCategoryStatusChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCategoryStatusChangeEventPayload:
      type: object
      properties:
        metadataCategory:
          $ref: '#/components/schemas/MetadataCategory'
      description: The event data structure
    MetadataCategoryDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCategoryDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCategoryDeleteEventPayload:
      type: object
      properties:
        metadataCategory:
          $ref: '#/components/schemas/MetadataCategory'
      description: The event data structure
    MetadataCatalogItemCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCatalogItemCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCatalogItemCreateEventPayload:
      type: object
      properties:
        metadataCatalogItem:
          $ref: '#/components/schemas/MetadataCatalogItem'
      description: The event data structure
    MetadataCatalogItemAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/MetadataCatalogItemAttributeValueChangeEventPayload'
      description: The notification data structure
    MetadataCatalogItemAttributeValueChangeEventPayload:
      type: object
      properties:
        metadataCatalogItem:
          $ref: '#/components/schemas/MetadataCatalogItem'
      description: The event data structure
    MetadataCatalogItemStatusChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCatalogItemStatusChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCatalogItemStatusChangeEventPayload:
      type: object
      properties:
        metadataCatalogItem:
          $ref: '#/components/schemas/MetadataCatalogItem'
      description: The event data structure
    MetadataCatalogItemDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataCatalogItemDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataCatalogItemDeleteEventPayload:
      type: object
      properties:
        metadataCatalogItem:
          $ref: '#/components/schemas/MetadataCatalogItem'
      description: The event data structure
    MetadataSpecificationCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataSpecificationCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataSpecificationCreateEventPayload:
      type: object
      properties:
        metadataSpecification:
          $ref: '#/components/schemas/MetadataSpecification'
      description: The event data structure
    MetadataSpecificationAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/MetadataSpecificationAttributeValueChangeEventPayload'
      description: The notification data structure
    MetadataSpecificationAttributeValueChangeEventPayload:
      type: object
      properties:
        metadataSpecification:
          $ref: '#/components/schemas/MetadataSpecification'
      description: The event data structure
    MetadataSpecificationStatusChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataSpecificationStatusChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataSpecificationStatusChangeEventPayload:
      type: object
      properties:
        metadataSpecification:
          $ref: '#/components/schemas/MetadataSpecification'
      description: The event data structure
    MetadataSpecificationDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MetadataSpecificationDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MetadataSpecificationDeleteEventPayload:
      type: object
      properties:
        metadataSpecification:
          $ref: '#/components/schemas/MetadataSpecification'
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'