openapi: 3.0.1
info:
  title: Work Management
  description: '**TMF API Reference : TMF 713 - Work Management**'
  version: 4.0.0
servers:
  - url: https://serverRoot/tmf-api/workManagement/v4/
tags:
  - name: work
  - name: workSpecification
  - name: notification listeners (client side)
  - name: events subscription
paths:
  /work:
    get:
      tags:
        - work
      summary: List or find Work objects
      description: This operation list or find Work entities
      operationId: listWork
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Work'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - work
      summary: Creates a Work
      description: This operation creates a Work entity.
      operationId: createWork
      requestBody:
        description: The Work to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: work
  /work/{id}:
    get:
      tags:
        - work
      summary: Retrieves a Work by ID
      description: This operation retrieves a Work entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveWork
      parameters:
        - name: id
          in: path
          description: Identifier of the Work
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - work
      summary: Deletes a Work
      description: This operation deletes a Work entity.
      operationId: deleteWork
      parameters:
        - name: id
          in: path
          description: Identifier of the Work
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - work
      summary: Updates partially a Work
      description: This operation updates partially a Work entity.
      operationId: patchWork
      parameters:
        - name: id
          in: path
          description: Identifier of the Work
          required: true
          schema:
            type: string
      requestBody:
        description: The Work to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Work'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: work
  /workSpecification:
    get:
      tags:
        - workSpecification
      summary: List or find WorkSpecification objects
      description: This operation list or find WorkSpecification entities
      operationId: listWorkSpecification
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkSpecification'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - workSpecification
      summary: Creates a WorkSpecification
      description: This operation creates a WorkSpecification entity.
      operationId: createWorkSpecification
      requestBody:
        description: The WorkSpecification to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkSpecification_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkSpecification'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: workSpecification
  /workSpecification/{id}:
    get:
      tags:
        - workSpecification
      summary: Retrieves a WorkSpecification by ID
      description: This operation retrieves a WorkSpecification entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveWorkSpecification
      parameters:
        - name: id
          in: path
          description: Identifier of the WorkSpecification
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkSpecification'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - workSpecification
      summary: Deletes a WorkSpecification
      description: This operation deletes a WorkSpecification entity.
      operationId: deleteWorkSpecification
      parameters:
        - name: id
          in: path
          description: Identifier of the WorkSpecification
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - workSpecification
      summary: Updates partially a WorkSpecification
      description: This operation updates partially a WorkSpecification entity.
      operationId: patchWorkSpecification
      parameters:
        - name: id
          in: path
          description: Identifier of the WorkSpecification
          required: true
          schema:
            type: string
      requestBody:
        description: The WorkSpecification to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkSpecification_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkSpecification'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: workSpecification
  /hub:
    post:
      tags:
        - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        '201':
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/workCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkCreateEvent
      description: Example of a client listener for receiving the notification WorkCreateEvent
      operationId: listenToWorkCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/workAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification WorkAttributeValueChangeEvent
      operationId: listenToWorkAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/workDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkDeleteEvent
      description: Example of a client listener for receiving the notification WorkDeleteEvent
      operationId: listenToWorkDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/workStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkStateChangeEvent
      description: Example of a client listener for receiving the notification WorkStateChangeEvent
      operationId: listenToWorkStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/workSpecificationCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkSpecificationCreateEvent
      description: Example of a client listener for receiving the notification WorkSpecificationCreateEvent
      operationId: listenToWorkSpecificationCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkSpecificationCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/workSpecificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkSpecificationAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification WorkSpecificationAttributeValueChangeEvent
      operationId: listenToWorkSpecificationAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkSpecificationAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/workSpecificationDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkSpecificationDeleteEvent
      description: Example of a client listener for receiving the notification WorkSpecificationDeleteEvent
      operationId: listenToWorkSpecificationDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkSpecificationDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/workSpecificationStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity WorkSpecificationStateChangeEvent
      description: Example of a client listener for receiving the notification WorkSpecificationStateChangeEvent
      operationId: listenToWorkSpecificationStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkSpecificationStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
      description: Base schema for adressable entities
    AgreementRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the agreement
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.
    Any:
      type: object
    AppointmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: The identifier of the referred appointment
        href:
          type: string
          description: The reference of the appointment
        description:
          type: string
          description: An explanatory text regarding the appointment made with a party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation
      description: Refers an appointment, such as a Customer presentation or internal meeting or site visit
    AssociationSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: reference to an AssociationSpecification object
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Complements the description of an element (for instance a product) through video, pictures...
    AttachmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique-Identifier for this attachment
        href:
          type: string
          description: URL serving as reference for the attachment resource
          format: uri
        description:
          type: string
          description: A narrative text describing the content of the attachment
        name:
          type: string
          description: Name of the related entity.
        url:
          type: string
          description: Link to the attachment media/content
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures
    AttachmentRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.
    BillingAccountRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the billing account
        href:
          type: string
          description: Reference of the billing account
        name:
          type: string
          description: Name of the billing account
        ratingType:
          type: string
          description: Indicates whether the account follows a specific payment option such as prepaid or postpaid
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: BillingAccount reference. A BillingAccount is a detailed description of a bill structure.
    Characteristic:
      required:
        - name
        - value
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        characteristicRelationship:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Describes a given characteristic of an object or entity through a name/value pair.
    CharacteristicRelationship:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        href:
          type: string
          description: Hyperlink reference
          format: uri
        relationshipType:
          type: string
          description: The type of relationship
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Another Characteristic that is related to the current Characteristic;
    CharacteristicSpecification:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the characteristic
        configurable:
          type: boolean
          description: If true, the Boolean indicates that the target Characteristic is configurable
        description:
          type: string
          description: A narrative that explains the CharacteristicSpecification.
        extensible:
          type: boolean
          description: An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource.
        isUnique:
          type: boolean
          description: Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic.
        maxCardinality:
          type: integer
          description: The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality.
        minCardinality:
          type: integer
          description: The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality.
        name:
          type: string
          description: A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications.
        regex:
          type: string
          description: A rule or principle represented in regular expression used to derive the value of a characteristic value.
        valueType:
          type: string
          description: A kind of value that the characteristic can take on, such as numeric, text and so forth
        charSpecRelationship:
          type: array
          description: An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.
          items:
            $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
        characteristicValueSpecification:
          type: array
          description: A CharacteristicValueSpecification object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a CharacteristicSpecification object. The values of the attributes in the CharacteristicValueSpecification object describe the values of the attributes that a corresponding Characteristic object can take on.
          items:
            $ref: '#/components/schemas/CharacteristicValueSpecification'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@valueSchemaLocation':
          type: string
          description: This (optional) field provides a link to the schema describing the value type.
      description: This class defines a characteristic specification.
    CharacteristicSpecificationBase:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the characteristic
        configurable:
          type: boolean
          description: If true, the Boolean indicates that the target Characteristic is configurable
        description:
          type: string
          description: A narrative that explains the CharacteristicSpecification.
        extensible:
          type: boolean
          description: An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource.
        isUnique:
          type: boolean
          description: Specifies if the value of this characteristic is unique across all entities instantiated from the specification that uses this characteristc. For example, consider a ProductSpecification for a set-top box, with a CharacteristicSpecification cardID. Each set-top box must have a different value for cardID, so this isUnique attribute would be set to true for the characteristic.
        maxCardinality:
          type: integer
          description: The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality.
        minCardinality:
          type: integer
          description: The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality.
        name:
          type: string
          description: A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications.
        regex:
          type: string
          description: A rule or principle represented in regular expression used to derive the value of a characteristic value.
        valueType:
          type: string
          description: A kind of value that the characteristic can take on, such as numeric, text and so forth
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@valueSchemaLocation':
          type: string
          description: This (optional) field provides a link to the schema describing the value type.
      description: This class defines a characteristic specification.
    CharacteristicSpecificationRelationship:
      type: object
      properties:
        characteristicSpecificationId:
          type: string
          description: Unique identifier of the characteristic within the specification
        name:
          type: string
          description: Name of the target characteristic within the specification
        parentSpecificationHref:
          type: string
          description: Hyperlink reference to the parent specification containing the target characteristic
          format: uri
        parentSpecificationId:
          type: string
          description: Unique identifier of the parent specification containing the target characteristic
        relationshipType:
          type: string
          description: Type of relationship such as aggregation, migration, substitution, dependency, exclusivity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID.
    CharacteristicValueSpecification:
      type: object
      properties:
        isDefault:
          type: boolean
          description: If true, the Boolean Indicates if the value is the default value for a characteristic
        rangeInterval:
          type: string
          description: An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are "open", "closed", "closedBottom" and "closedTop".
        regex:
          type: string
          description: A regular expression constraint for given value
        unitOfMeasure:
          type: string
          description: A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
        valueFrom:
          type: integer
          description: The low range value that a characteristic can take on
        valueTo:
          type: integer
          description: The upper range value that a characteristic can take on
        valueType:
          type: string
          description: A kind of value that the characteristic value can take on, such as numeric, text and so forth
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: specification of a value (number or text or an object) that can be assigned to a Characteristic.
    ConstraintRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: constraint version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.
    ContactMedium:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        mediumType:
          type: string
          description: 'Type of the contact medium, such as: email address, telephone number, postal address'
        preferred:
          type: boolean
          description: If true, indicates that is the preferred contact medium
        characteristic:
          $ref: '#/components/schemas/MediumCharacteristic'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Indicates the contact medium that could be used to contact the party.
    Entity:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base entity schema for use in TMForum Open-APIs
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    EntitySpecification:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        description:
          type: string
          description: Description of the specification
        isBundle:
          type: boolean
          description: isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).
        lastUpdate:
          type: string
          description: Date and time of the last update of the specification
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to the specification
        version:
          type: string
          description: specification version
        attachment:
          type: array
          description: Attachments that may be of relevance to this specification, such as picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        constraint:
          type: array
          description: This is a list of constraint references applied to this specification
          items:
            $ref: '#/components/schemas/ConstraintRef'
        entitySpecRelationship:
          type: array
          description: Relationship to another specification
          items:
            $ref: '#/components/schemas/EntitySpecificationRelationship'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        specCharacteristic:
          type: array
          description: List of characteristics that the entity can take
          items:
            $ref: '#/components/schemas/CharacteristicSpecification'
        targetEntitySchema:
          $ref: '#/components/schemas/TargetEntitySchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.
        Functionally, the entity specification acts as a template by which entities may be instantiated and described. By sharing the same specification, these entities would therefore share the same set of characteristics.
        Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity instantiated from the entity specification can override the value of the attribute. When set to false, the entity instance may not define a value that differs from the value in the specification.
    EntitySpecificationRelationship:
      required:
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        relationshipType:
          type: string
          description: Type of relationship such as migration, substitution, dependency, exclusivity
        role:
          type: string
          description: The association role for this entity specification
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A migration, substitution, dependency or exclusivity relationship between/among entity specifications.
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base Extensible schema for use in TMForum Open-APIs
    ExternalReference:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        externalReferenceType:
          type: string
          description: Type of the external reference
        name:
          type: string
          description: External reference name
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: External reference of the individual or reference in other system
    MediumCharacteristic:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        city:
          type: string
          description: The city
        contactType:
          type: string
          description: 'The type of contact, for example: phone number such as mobile, fixed home, fixed office. postal address such as shipping instalation…'
        country:
          type: string
          description: The country
        emailAddress:
          type: string
          description: Full email address in standard format
        faxNumber:
          type: string
          description: The fax number of the contact
        phoneNumber:
          type: string
          description: The primary phone number of the contact
        postCode:
          type: string
          description: Postcode
        socialNetworkId:
          type: string
          description: Identifier as a member of a social network
        stateOrProvince:
          type: string
          description: State or province
        street1:
          type: string
          description: Describes the street
        street2:
          type: string
          description: Complementary street description
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Describes the contact medium characteristics that could be used to contact a party (an individual or an organization)
    Money:
      type: object
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          description: A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type
          format: float
      description: A base / value business entity used to represent money
    Note:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity
          example: ''
        author:
          type: string
          description: Author of the note
          example: ''
        date:
          type: string
          description: Date of the note
          format: date-time
        text:
          type: string
          description: Text of the note
          example: ''
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Extra information about a given entity
    Party:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the organization
        href:
          type: string
          description: Hyperlink to access the organization
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        creditRating:
          type: array
          items:
            $ref: '#/components/schemas/PartyCreditProfile'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        taxExemptionCertificate:
          type: array
          items:
            $ref: '#/components/schemas/TaxExemptionCertificate'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Generic Party structure used to define commonalities between sub concepts of Individual and Organization.
    PartyCreditProfile:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        creditAgencyName:
          type: string
          description: Name of the credit agency giving the score
        creditAgencyType:
          type: string
          description: Type of the credit agency giving the score
        ratingReference:
          type: string
          description: Reference corresponding to the credit rating
        ratingScore:
          type: integer
          description: A measure of a party’s creditworthiness calculated on the basis of a combination of factors such as their income and credit history
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: An individual might be evaluated for its worthiness and this evaluation might be based on a credit rating given by a credit agency.
    PartyRef:
      required:
        - '@referredType'
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    PartyRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the organization
        href:
          type: string
          description: Hyperlink to access the organization
        name:
          type: string
          description: Name of the related entity.
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        creditRating:
          type: array
          items:
            $ref: '#/components/schemas/PartyCreditProfile'
        externalReference:
          type: array
          items:
            $ref: '#/components/schemas/ExternalReference'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        taxExemptionCertificate:
          type: array
          items:
            $ref: '#/components/schemas/TaxExemptionCertificate'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    Place:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Place reference. Place defines the places where the products are sold or delivered.
    PlaceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.
    Price:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        percentage:
          type: number
          description: Percentage to apply for ProdOfferPriceAlteration
          format: float
        taxRate:
          type: number
          description: Tax rate
          format: float
        dutyFreeAmount:
          $ref: '#/components/schemas/Money'
        taxIncludedAmount:
          $ref: '#/components/schemas/Money'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration.
    PriceAlteration:
      required:
        - price
        - priceType
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        applicationDuration:
          type: integer
          description: Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge)
        description:
          type: string
          description: A narrative that explains in detail the semantics of this order item price alteration
        name:
          type: string
          description: Name of the order item price alteration
        priceType:
          type: string
          description: A category that describes the price such as recurring, one time and usage.
        priority:
          type: integer
          description: Priority level for applying this alteration among all the defined alterations on the order item price
        recurringChargePeriod:
          type: string
          description: Could be month, week...
        unitOfMeasure:
          type: string
          description: Could be minutes, GB...
        price:
          $ref: '#/components/schemas/Price'
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPriceRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Is an amount, usually of money, that modifies the price charged for an order item.
    PriceType:
      type: string
      description: 'Describes the type of price (ex: oneTime, recurring, etc)'
      enum:
        - recurring
        - oneTime
        - usage
    ProductOfferingPriceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1
        units:
          type: string
          description: Unit
      description: An amount in a given unit
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself
    RelatedWorkOrderItem:
      required:
        - orderItemId
        - workOrderId
      type: object
      properties:
        orderItemAction:
          type: string
          description: "Action of the order item for this unit of work\r\n"
        orderItemId:
          type: string
          description: Identifier of the work order item where the unit of work was managed
        role:
          type: string
          description: "Role of the work order item for this unitof work\r\n"
        workOrderHref:
          type: string
          description: Reference of the related entity.
        workOrderId:
          type: string
          description: Unique identifier of a related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: RelatedWorkOrderItem (WorkOrder item). The work order item which triggered this unit of work's creation/change/termination.
    TargetEntitySchema:
      required:
        - '@schemaLocation'
        - '@type'
      type: object
      properties:
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
        '@type':
          type: string
          description: Class type of the target entity
      description: The reference object to the schema and type of target entity which is described by a specification
    TaxDefinition:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the tax.
        jurisdictionLevel:
          type: string
          description: Level of the jurisdiction that levies the tax
          example: Country
        jurisdictionName:
          type: string
          description: Name of the jurisdiction that levies the tax
          example: USA
        name:
          type: string
          description: Tax name.
        taxType:
          type: string
          description: Type of the tax.
          example: VAT
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. There are many different types of tax (Federal Tax levied by the US Government, State Tax levied by the State of California,…).
    TaxExemptionCertificate:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the tax exemption within list of the exemptions
        certificateNumber:
          type: string
          description: Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction
        issuingJurisdiction:
          type: string
          description: Name of the jurisdiction that issued the exemption
          example: USA
        reason:
          type: string
          description: Reason for the tax exemption
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue'
        taxDefinition:
          type: array
          description: A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%).
          items:
            $ref: '#/components/schemas/TaxDefinition'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A tax exemption certificate represents a tax exemption granted to a party (individual or organization) by a tax jurisdiction which may be a city, state, country,... An exemption has a certificate identifier (received from the jurisdiction that levied the tax) and a validity period. An exemption is per tax types and determines for each type of tax what portion of the tax is exempted (partial by percentage or complete) via the tax definition.
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
    TimeSlot:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the TimeSlot
        href:
          type: string
          description: Reference of the TimeSlot
        relatedParty:
          $ref: '#/components/schemas/RelatedParty'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    Work:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        completionDate:
          type: string
          description: Date when the order was completed
          format: date-time
        description:
          type: string
          description: Is the description of the work unit. It could be the same as the description of the work specification.
        expectedCompletionDate:
          type: string
          description: Date when the requester expects the work to be completed
          format: date-time
        name:
          type: string
          description: Name of the work unit. It could be the same as the name of the work specification.
        orderDate:
          type: string
          description: Date at which the work order which triggered this unit of work's creation/change/termination was created.
          format: date-time
        percentageComplete:
          type: number
          format: float
        workPriority:
          type: string
        workType:
          type: string
        actualDuration:
          $ref: '#/components/schemas/Quantity'
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementRef'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        currentDuration:
          $ref: '#/components/schemas/Quantity'
        deliveryTimeSlot:
          $ref: '#/components/schemas/TimePeriod'
        note:
          $ref: '#/components/schemas/Note'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        plannedDuration:
          $ref: '#/components/schemas/Quantity'
        quantity:
          $ref: '#/components/schemas/Quantity'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        scheduledDuration:
          $ref: '#/components/schemas/Quantity'
        state:
          $ref: '#/components/schemas/WorkStateType'
        work:
          type: array
          items:
            $ref: '#/components/schemas/WorkRefOrValue'
        workCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        workOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedWorkOrderItem'
        workPrice:
          type: array
          items:
            $ref: '#/components/schemas/WorkPrice'
        workRelationship:
          type: array
          items:
            $ref: '#/components/schemas/WorkRelationship'
        workSpecification:
          $ref: '#/components/schemas/WorkSpecificationRef'
        workforceEmployeeAssignment:
          type: array
          items:
            $ref: '#/components/schemas/WorkforceEmployeeAssignment'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    Work_Create:
      type: object
      properties:
        completionDate:
          type: string
          description: Date when the order was completed
          format: date-time
        description:
          type: string
          description: Is the description of the work unit. It could be the same as the description of the work specification.
        expectedCompletionDate:
          type: string
          description: Date when the requester expects the work to be completed
          format: date-time
        name:
          type: string
          description: Name of the work unit. It could be the same as the name of the work specification.
        orderDate:
          type: string
          description: Date at which the work order which triggered this unit of work's creation/change/termination was created.
          format: date-time
        percentageComplete:
          type: number
          format: float
        workPriority:
          type: string
        workType:
          type: string
        actualDuration:
          $ref: '#/components/schemas/Quantity'
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementRef'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        currentDuration:
          $ref: '#/components/schemas/Quantity'
        deliveryTimeSlot:
          $ref: '#/components/schemas/TimePeriod'
        note:
          $ref: '#/components/schemas/Note'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        plannedDuration:
          $ref: '#/components/schemas/Quantity'
        quantity:
          $ref: '#/components/schemas/Quantity'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        scheduledDuration:
          $ref: '#/components/schemas/Quantity'
        state:
          $ref: '#/components/schemas/WorkStateType'
        work:
          type: array
          items:
            $ref: '#/components/schemas/WorkRefOrValue'
        workCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        workOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedWorkOrderItem'
        workPrice:
          type: array
          items:
            $ref: '#/components/schemas/WorkPrice'
        workRelationship:
          type: array
          items:
            $ref: '#/components/schemas/WorkRelationship'
        workSpecification:
          $ref: '#/components/schemas/WorkSpecificationRef'
        workforceEmployeeAssignment:
          type: array
          items:
            $ref: '#/components/schemas/WorkforceEmployeeAssignment'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-

        Skipped properties: id,href
    Work_Update:
      type: object
      properties:
        completionDate:
          type: string
          description: Date when the order was completed
          format: date-time
        description:
          type: string
          description: Is the description of the work unit. It could be the same as the description of the work specification.
        expectedCompletionDate:
          type: string
          description: Date when the requester expects the work to be completed
          format: date-time
        name:
          type: string
          description: Name of the work unit. It could be the same as the name of the work specification.
        orderDate:
          type: string
          description: Date at which the work order which triggered this unit of work's creation/change/termination was created.
          format: date-time
        percentageComplete:
          type: number
          format: float
        workPriority:
          type: string
        workType:
          type: string
        actualDuration:
          $ref: '#/components/schemas/Quantity'
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementRef'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        currentDuration:
          $ref: '#/components/schemas/Quantity'
        deliveryTimeSlot:
          $ref: '#/components/schemas/TimePeriod'
        note:
          $ref: '#/components/schemas/Note'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        plannedDuration:
          $ref: '#/components/schemas/Quantity'
        quantity:
          $ref: '#/components/schemas/Quantity'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        scheduledDuration:
          $ref: '#/components/schemas/Quantity'
        state:
          $ref: '#/components/schemas/WorkStateType'
        work:
          type: array
          items:
            $ref: '#/components/schemas/WorkRefOrValue'
        workCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        workOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedWorkOrderItem'
        workPrice:
          type: array
          items:
            $ref: '#/components/schemas/WorkPrice'
        workRelationship:
          type: array
          items:
            $ref: '#/components/schemas/WorkRelationship'
        workSpecification:
          $ref: '#/components/schemas/WorkSpecificationRef'
        workforceEmployeeAssignment:
          type: array
          items:
            $ref: '#/components/schemas/WorkforceEmployeeAssignment'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-

        Skipped properties: id,href
    WorkPrice:
      type: object
      properties:
        description:
          type: string
          description: A narrative that explains in detail the semantics of this shipment price.
        name:
          type: string
          description: A short descriptive name such as "Subscription price".
        recurringChargePeriod:
          type: string
          description: Could be month, week...
        unitOfMeasure:
          type: string
          description: Could be minutes, GB...
        billingAccount:
          $ref: '#/components/schemas/BillingAccountRef'
        price:
          $ref: '#/components/schemas/Price'
        priceAlteration:
          type: array
          items:
            $ref: '#/components/schemas/PriceAlteration'
        priceType:
          $ref: '#/components/schemas/PriceType'
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPriceRef'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: An amount, usually of money, that represents the actual price paid by the Customer for this item or this order.
    WorkRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Unit of Work reference
    WorkRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        completionDate:
          type: string
          description: Date when the order was completed
          format: date-time
        description:
          type: string
          description: Is the description of the work unit. It could be the same as the description of the work specification.
        expectedCompletionDate:
          type: string
          description: Date when the requester expects the work to be completed
          format: date-time
        name:
          type: string
          description: Name of the related entity.
        orderDate:
          type: string
          description: Date at which the work order which triggered this unit of work's creation/change/termination was created.
          format: date-time
        percentageComplete:
          type: number
          format: float
        workPriority:
          type: string
        workType:
          type: string
        actualDuration:
          $ref: '#/components/schemas/Quantity'
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementRef'
        appointment:
          $ref: '#/components/schemas/AppointmentRef'
        currentDuration:
          $ref: '#/components/schemas/Quantity'
        deliveryTimeSlot:
          $ref: '#/components/schemas/TimePeriod'
        note:
          $ref: '#/components/schemas/Note'
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        plannedDuration:
          $ref: '#/components/schemas/Quantity'
        quantity:
          $ref: '#/components/schemas/Quantity'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        scheduledDuration:
          $ref: '#/components/schemas/Quantity'
        state:
          $ref: '#/components/schemas/WorkStateType'
        work:
          type: array
          items:
            $ref: '#/components/schemas/WorkRefOrValue'
        workCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        workOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedWorkOrderItem'
        workPrice:
          type: array
          items:
            $ref: '#/components/schemas/WorkPrice'
        workRelationship:
          type: array
          items:
            $ref: '#/components/schemas/WorkRelationship'
        workSpecification:
          $ref: '#/components/schemas/WorkSpecificationRef'
        workforceEmployeeAssignment:
          type: array
          items:
            $ref: '#/components/schemas/WorkforceEmployeeAssignment'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A Unit of Work defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the work entity and not the related WorkRefOrValue class itself
    WorkRelationship:
      required:
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        relationshipType:
          type: string
        work:
          $ref: '#/components/schemas/WorkRefOrValue'
        workRelationshipCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
    WorkSpecification:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        description:
          type: string
          description: Description of the specification
        isAppointmentRequired:
          type: boolean
        isBundle:
          type: boolean
          description: isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).
        lastUpdate:
          type: string
          description: Date and time of the last update of the specification
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to the specification
        version:
          type: string
          description: specification version
        attachment:
          type: array
          description: Attachments that may be of relevance to this specification, such as picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        constraint:
          type: array
          description: This is a list of constraint references applied to this specification
          items:
            $ref: '#/components/schemas/ConstraintRef'
        entitySpecRelationship:
          type: array
          description: Relationship to another specification
          items:
            $ref: '#/components/schemas/EntitySpecificationRelationship'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        specCharacteristic:
          type: array
          description: List of characteristics that the entity can take
          items:
            $ref: '#/components/schemas/CharacteristicSpecification'
        targetEntitySchema:
          $ref: '#/components/schemas/TargetEntitySchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        workSpecRelationship:
          type: array
          description: "Relationship to another work specification, might be dependency, substitution, etc.\r\n"
          items:
            $ref: '#/components/schemas/WorkSpecificationRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Definition of the nature of a Work Unit. For example, could be wiring, equipment installation, etc.
    WorkSpecification_Create:
      required:
        - name
      type: object
      properties:
        description:
          type: string
          description: Description of the specification
        isAppointmentRequired:
          type: boolean
        isBundle:
          type: boolean
          description: isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).
        lastUpdate:
          type: string
          description: Date and time of the last update of the specification
          format: date-time
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to the specification
        version:
          type: string
          description: specification version
        attachment:
          type: array
          description: Attachments that may be of relevance to this specification, such as picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        constraint:
          type: array
          description: This is a list of constraint references applied to this specification
          items:
            $ref: '#/components/schemas/ConstraintRef'
        entitySpecRelationship:
          type: array
          description: Relationship to another specification
          items:
            $ref: '#/components/schemas/EntitySpecificationRelationship'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        specCharacteristic:
          type: array
          description: List of characteristics that the entity can take
          items:
            $ref: '#/components/schemas/CharacteristicSpecification'
        targetEntitySchema:
          $ref: '#/components/schemas/TargetEntitySchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        workSpecRelationship:
          type: array
          description: "Relationship to another work specification, might be dependency, substitution, etc.\r\n"
          items:
            $ref: '#/components/schemas/WorkSpecificationRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        Definition of the nature of a Work Unit. For example, could be wiring, equipment installation, etc.
        Skipped properties: id,href
    WorkSpecification_Update:
      type: object
      properties:
        description:
          type: string
          description: Description of the specification
        isAppointmentRequired:
          type: boolean
        isBundle:
          type: boolean
          description: isBundle determines whether specification represents a single specification (false), or a bundle of specifications (true).
        lifecycleStatus:
          type: string
          description: Used to indicate the current lifecycle status of this catalog item
        name:
          type: string
          description: Name given to the specification
        version:
          type: string
          description: specification version
        attachment:
          type: array
          description: Attachments that may be of relevance to this specification, such as picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        constraint:
          type: array
          description: This is a list of constraint references applied to this specification
          items:
            $ref: '#/components/schemas/ConstraintRef'
        entitySpecRelationship:
          type: array
          description: Relationship to another specification
          items:
            $ref: '#/components/schemas/EntitySpecificationRelationship'
        relatedParty:
          type: array
          description: Parties who manage or otherwise have an interest in this specification
          items:
            $ref: '#/components/schemas/RelatedParty'
        specCharacteristic:
          type: array
          description: List of characteristics that the entity can take
          items:
            $ref: '#/components/schemas/CharacteristicSpecification'
        targetEntitySchema:
          $ref: '#/components/schemas/TargetEntitySchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        workSpecRelationship:
          type: array
          description: "Relationship to another work specification, might be dependency, substitution, etc.\r\n"
          items:
            $ref: '#/components/schemas/WorkSpecificationRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        Definition of the nature of a Work Unit. For example, could be wiring, equipment installation, etc.
        Skipped properties: id,href,lastUpdate
    WorkSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Work specification reference
    WorkSpecificationRelationship:
      required:
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: The name given to the target entity specification instance
        relationshipType:
          type: string
          description: Type of relationship such as migration, substitution, dependency, exclusivity
        role:
          type: string
          description: The association role for this entity specification
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A migration, substitution, dependency or exclusivity relationship between/among entity specifications.
    WorkStateType:
      type: string
      description: ''
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - partial
    WorkforceEmployeeAssignment:
      required:
        - description
        - id
        - skillType
        - workforceEmployee
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        skillType:
          type: string
          description: 'Ex: primarySkill, secondarySkill'
        state:
          $ref: '#/components/schemas/WorkforceEmployeeAssignmentStateType'
        timeSlot:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
        workforceEmployee:
          $ref: '#/components/schemas/PartyRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Represents an assignment of a particular WorforceEmployeeRole for a particular unit of work in a specific timeframe. For example, assignment of a person in a network engineer role to a trouble shooting unit of work for at least 2 hours. The assignment is associated with a TimeSlot.
    WorkforceEmployeeAssignmentStateType:
      type: string
      description: ''
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - partial
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    WorkCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/WorkCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    WorkCreateEventPayload:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/Work'
      description: The event data structure
    WorkAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/WorkAttributeValueChangeEventPayload'
      description: The notification data structure
    WorkAttributeValueChangeEventPayload:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/Work'
      description: The event data structure
    WorkDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/WorkDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    WorkDeleteEventPayload:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/Work'
      description: The event data structure
    WorkStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/WorkStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    WorkStateChangeEventPayload:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/Work'
      description: The event data structure
    WorkSpecificationCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/WorkSpecificationCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    WorkSpecificationCreateEventPayload:
      type: object
      properties:
        workSpecification:
          $ref: '#/components/schemas/WorkSpecification'
      description: The event data structure
    WorkSpecificationAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/WorkSpecificationAttributeValueChangeEventPayload'
      description: The notification data structure
    WorkSpecificationAttributeValueChangeEventPayload:
      type: object
      properties:
        workSpecification:
          $ref: '#/components/schemas/WorkSpecification'
      description: The event data structure
    WorkSpecificationDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/WorkSpecificationDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    WorkSpecificationDeleteEventPayload:
      type: object
      properties:
        workSpecification:
          $ref: '#/components/schemas/WorkSpecification'
      description: The event data structure
    WorkSpecificationStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/WorkSpecificationStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    WorkSpecificationStateChangeEventPayload:
      type: object
      properties:
        workSpecification:
          $ref: '#/components/schemas/WorkSpecification'
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'