openapi: 3.0.1
info:
  title: ShippingOrder
  description: "### February 2021\n   A Shipping Order is a document used by a business to specify what\_items\_are to be transferred by a logisitic partner from a\_storage\_location\_or\_warehouse to a party in a different location.When goods are sent to the customers, shipment information can be provided to them so they can be aware of when things were shipped and when they will arrive. The service provider creates a Shipping Order which can be sent to a Logistic Partner to manage the physical shipment. The Shipping Order can be split into one or more Shipments with associated  Shipment Tracking to capture information about the current status of the shipment, the past checkpoints and the estimated arrival date ."
  version: 5.0.0
servers:
  - url: '{apiRoot}/tmf-api/productTestManagement/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot'
        enum:
          - 'https://serverRoot'
tags:
  - name: shippingOrder
    description: Operations for ShippingOrder Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    get:
      operationId: hubGet
      summary: Retrieve a subscription (hub)
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/shippingOrderAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ShippingOrderAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ShippingOrderAttributeValueChangeEvent
      operationId: shippingOrderAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ShippingOrderAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/shippingOrderCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ShippingOrderCreateEvent
      description: Example of a client listener for receiving the notification ShippingOrderCreateEvent
      operationId: shippingOrderCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ShippingOrderCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/shippingOrderDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ShippingOrderDeleteEvent
      description: Example of a client listener for receiving the notification ShippingOrderDeleteEvent
      operationId: shippingOrderDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ShippingOrderDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/shippingOrderStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ShippingOrderStateChangeEvent
      description: Example of a client listener for receiving the notification ShippingOrderStateChangeEvent
      operationId: shippingOrderStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ShippingOrderStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /shippingOrder:
    get:
      tags:
        - shippingOrder
      summary: List or find ShippingOrder objects
      description: List or find ShippingOrder objects
      operationId: listShippingOrder
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ShippingOrderArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - shippingOrder
      summary: Creates a ShippingOrder
      description: This operation creates a ShippingOrder entity.
      operationId: createShippingOrder
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ShippingOrder_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ShippingOrder'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/shippingOrder/{id}':
    get:
      tags:
        - shippingOrder
      summary: Retrieves a ShippingOrder by ID
      description: >-
        This operation retrieves a ShippingOrder entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveShippingOrder
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ShippingOrder_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - shippingOrder
      summary: Updates partially a ShippingOrder
      description: This operation updates partially a ShippingOrder entity.
      operationId: patchShippingOrder
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ShippingOrder_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ShippingOrder_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - shippingOrder
      summary: Deletes a ShippingOrder
      description: This operation deletes a ShippingOrder entity.
      operationId: deleteShippingOrder
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_FVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
    AccountRef_MVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
    Addressable:
      type: object
      description: Base schema for addressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for addressable entities
    Addressable_MVO:
      type: object
      description: Base schema for addressable entities
    AgreementItemRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef'
    AgreementItemRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
          required:
            - agreementId
            - agreementItemId
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_FVO'
    AgreementItemRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_MVO'
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_FVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    AssociationSpecificationRef:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef'
    AssociationSpecificationRef_FVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_FVO'
    AssociationSpecificationRef_MVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
              description: The event linked to the involved resource object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occurred.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BillingAccountRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef'
    BillingAccountRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef_FVO'
    BillingAccountRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef_MVO'
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    BusinessPartner_MVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    CalendarPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod'
    CalendarPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
          required:
            - status
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_FVO'
    CalendarPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod_MVO'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    CharacteristicSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification'
    CharacteristicSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship'
    CharacteristicSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
    CharacteristicSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
    CharacteristicSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
          required:
            - name
            - valueType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_FVO'
    CharacteristicSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristic. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_MVO'
    CharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification'
    CharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses : BooleanArrayCharacteristicValueSpecification,
            BooleanCharacteristicValueSpecification, FloatArrayCharacteristicValueSpecification,
            FloatCharacteristicValueSpecification, IntegerArrayCharacteristicValueSpecification,
            IntegerCharacteristicValueSpecification, MapArrayCharacteristicValueSpecification,
            MapCharacteristicValueSpecification, NumberArrayCharacteristicValueSpecification,
            NumberCharacteristicValueSpecification, ObjectArrayCharacteristicValueSpecification,
            ObjectCharacteristicValueSpecification, StringArrayCharacteristicValueSpecification,
            StringCharacteristicValueSpecification...
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
    ConstraintRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef'
    ConstraintRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_FVO'
    ConstraintRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_MVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Consumer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Duration:
      type: object
      description: A time interval in a given unit of time
      properties:
        amount:
          type: integer
          description: 'Time interval (number of seconds, minutes, hours, etc.)'
        units:
          type: string
          description: 'Unit of time (seconds, minutes, hours, etc.)'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
    EntityRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
    EntityRelationship:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    EntityRelationship_FVO:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef_FVO'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    EntityRelationship_MVO:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef_MVO'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanation of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              description: Collection of analytic characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    Feature:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature'
    FeatureRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship'
    FeatureRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_FVO'
    FeatureRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_MVO'
    Feature_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship_FVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_FVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_FVO'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature_FVO'
    Feature_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship_MVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_MVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_MVO'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature_MVO'
    GeographicAddress:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf 
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicAddressRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the related geographic address. This identifier serves as a
                reference to uniquely identify the associated geographic address within the system.
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship'
    GeographicAddressRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship_FVO'
    GeographicAddressRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship_MVO'
    GeographicAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf 
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_FVO'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress_FVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue_FVO'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship_FVO'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf 
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_MVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_MVO'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress_MVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue_MVO'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship_MVO'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicLocation:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicLocationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicLocationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
    GeographicLocationRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicLocationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
    GeographicLocationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocation_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicLocation_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicSite:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature'
    GeographicSiteFeature:
      allOf:
        - $ref: '#/components/schemas/Feature'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features. 
                example: Access Information
    GeographicSiteFeature_FVO:
      allOf:
        - $ref: '#/components/schemas/Feature_FVO'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features. 
                example: Access Information
    GeographicSiteFeature_MVO:
      allOf:
        - $ref: '#/components/schemas/Feature_MVO'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features. 
                example: Access Information
    GeographicSiteRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicSiteRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicSiteRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_FVO'
    GeographicSiteRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicSiteRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_MVO'
    GeographicSiteRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_FVO'
    GeographicSiteRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_MVO'
    GeographicSiteRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSiteRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSite_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_FVO'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_FVO'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature_FVO'
    GeographicSite_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_MVO'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_MVO'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature_MVO'
    GeographicSubAddress:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
          required:
            - subUnitNumber
            - subUnitType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
    GeographicSubAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_FVO'
    GeographicSubAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_MVO'
    HourPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Hour interval
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod'
    HourPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Hour interval
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_MVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_MVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    Intent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent'
    IntentExpression:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: An Intent expression
          properties:
            iri:
              type: string
              description: Internationalized Resource Identifier of the intent Expression
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression'
    IntentExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: An Intent expression
          properties:
            iri:
              type: string
              description: Internationalized Resource Identifier of the intent Expression
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_MVO'
    IntentRef:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
    IntentRefOrValue:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent'
    IntentRefOrValue_FVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef_FVO'
        - $ref: '#/components/schemas/Intent_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_FVO'
          Intent: '#/components/schemas/Intent_FVO'
    IntentRefOrValue_MVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef_MVO'
        - $ref: '#/components/schemas/Intent_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
          Intent: '#/components/schemas/Intent_MVO'
    IntentRef_FVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_FVO'
    IntentRef_MVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
    Intent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef_FVO'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_FVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_FVO'
    Intent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef_MVO'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_MVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_MVO'
    ItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the entity managed by the item
    LanguageAbility:
      type: object
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: >-
            A “true” value specifies whether the language is considered by the individual as his
            favourite one
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    LineString:
      type: object
      description: 'GeoJSON: A collection of Points forming a connected line'
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          $ref: '#/components/schemas/lineString'
    Money:
      type: object
      description: A base / value business entity used to represent money
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: >-
            A signed floating point number, the meaning of the sign is according to the context of
            the API that uses this Data type
    MultiLineString:
      type: object
      description: 'GeoJSON: A collection of distinct LineStrings'
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          $ref: '#/components/schemas/lineString'
    MultiPoint:
      type: object
      description: 'GeoJSON: A collection of Points'
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          $ref: '#/components/schemas/positionArray'
    MultiPolygon:
      type: object
      description: 'GeoJSON: A collection of Polygons'
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          $ref: '#/components/schemas/multiPolygon'
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_FVO'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
    OrganizationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
    OrganizationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_MVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_MVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OtherNameIndividual:
      type: object
      description: >-
        Keeps track of other names, for example the old name of a woman before marriage or an artist
        name.
      properties:
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl, etc.'
        generation:
          type: string
          description: 'e.g. Sr, Jr, etc.'
        givenName:
          type: string
          description: First name
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the person prefers to be addressed. Note: This name
            may be a name other than a given name, such as a nickname
        familyNamePrefix:
          type: string
          description: Family name prefix
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        fullName:
          type: string
          description: 'Full name flatten (first, middle, and last names)'
        formattedName:
          type: string
          description: >-
            . A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese,
            Korean, etc.)
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
    OtherNameOrganization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
    PartyCreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
    PartyOrPartyRole:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyOrPartyRole_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyOrPartyRole_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/Individual_MVO'
        - $ref: '#/components/schemas/Organization_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO'
        - $ref: '#/components/schemas/Supplier_MVO'
        - $ref: '#/components/schemas/BusinessPartner_MVO'
        - $ref: '#/components/schemas/Consumer_MVO'
        - $ref: '#/components/schemas/Producer_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRoleSpecificationRef:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
    PartyRoleSpecificationRef_FVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
    PartyRoleSpecificationRef_MVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_FVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_FVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef_FVO'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef_FVO'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef_FVO'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_MVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef_MVO'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef_MVO'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef_MVO'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_MVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
    PaymentMethodRef:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRef_FVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
    PaymentMethodRef_MVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
    Place:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place'
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
    PlaceRef:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicAddress'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO'
        - $ref: '#/components/schemas/PlaceRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
    PlaceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO'
        - $ref: '#/components/schemas/PlaceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    PlaceRef_FVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
    PlaceRef_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    Place_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
    Place_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
    Point:
      type: object
      description: 'GeoJSON: A single position'
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/position'
    PolicyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef'
    PolicyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
    PolicyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_MVO'
    Polygon:
      type: object
      description: 'GeoJSON: An array of linear rings'
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          $ref: '#/components/schemas/polygon'
    Price:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price'
    PriceAlteration:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price'
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration'
    PriceAlteration_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_FVO'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price'
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_FVO'
    PriceAlteration_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price_MVO'
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_MVO'
    Price_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price_MVO'
    Producer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Producer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Producer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Product:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product'
    ProductOfferingPriceRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductPriceOffering reference. An amount, usually of money, that is asked for or
            allowed when a ProductOffering is bought, rented, or leased
          properties:
            version:
              type: string
              description: Version of the product offering price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef'
    ProductOfferingPriceRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            ProductPriceOffering reference. An amount, usually of money, that is asked for or
            allowed when a ProductOffering is bought, rented, or leased
          properties:
            version:
              type: string
              description: Version of the product offering price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef_FVO'
    ProductOfferingPriceRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            ProductPriceOffering reference. An amount, usually of money, that is asked for or
            allowed when a ProductOffering is bought, rented, or leased
          properties:
            version:
              type: string
              description: Version of the product offering price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef_MVO'
    ProductOfferingRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef'
    ProductOfferingRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef_FVO'
    ProductOfferingRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef_MVO'
    ProductOrderItemRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A reference to ProductOrder item that has been executed previously.
          properties:
            ProductOrderHref:
              type: string
              description: Reference of the related ProductOrder.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            productOrderId:
              type: string
              description: Unique identifier of a refered product order.
            productOrderItemId:
              type: string
              description: 'Identifier of a product order item. '
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOrderItemRef: '#/components/schemas/ProductOrderItemRef'
    ProductOrderItemRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A reference to ProductOrder item that has been executed previously.
          properties:
            ProductOrderHref:
              type: string
              description: Reference of the related ProductOrder.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            productOrderId:
              type: string
              description: Unique identifier of a refered product order.
            productOrderItemId:
              type: string
              description: 'Identifier of a product order item. '
          required:
            - productOrderId
            - productOrderItemId
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOrderItemRef: '#/components/schemas/ProductOrderItemRef_FVO'
    ProductOrderItemRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A reference to ProductOrder item that has been executed previously.
          properties:
            ProductOrderHref:
              type: string
              description: Reference of the related ProductOrder.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            productOrderId:
              type: string
              description: Unique identifier of a refered product order.
            productOrderItemId:
              type: string
              description: 'Identifier of a product order item. '
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOrderItemRef: '#/components/schemas/ProductOrderItemRef_MVO'
    ProductOrderRef:
      type: object
      description: A reference to an existing Product Order.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOrderRef: '#/components/schemas/ProductOrderRef'
    ProductOrderRef_FVO:
      type: object
      description: A reference to an existing Product Order.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOrderRef: '#/components/schemas/ProductOrderRef_FVO'
    ProductOrderRef_MVO:
      type: object
      description: A reference to an existing Product Order.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOrderRef: '#/components/schemas/ProductOrderRef_MVO'
    ProductPrice:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice'
    ProductPrice_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_FVO'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration_FVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_FVO'
    ProductPrice_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price_MVO'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration_MVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_MVO'
    ProductRef:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product'
        - $ref: '#/components/schemas/ProductRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product'
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product_FVO'
        - $ref: '#/components/schemas/ProductRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_FVO'
          ProductRef: '#/components/schemas/ProductRef_FVO'
    ProductRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product_MVO'
        - $ref: '#/components/schemas/ProductRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_MVO'
          ProductRef: '#/components/schemas/ProductRef_MVO'
    ProductRef_FVO:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_FVO'
    ProductRef_MVO:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_MVO'
    ProductRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship'
    ProductRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_FVO'
    ProductRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_MVO'
    ProductSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef'
    ProductSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_FVO'
    ProductSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_MVO'
    ProductStatusType:
      enum:
        - created
        - pendingActive
        - cancelled
        - active
        - pendingTerminate
        - terminated
        - suspended
        - 'aborted '
      type: string
      description: Possible values for the status of the product
    ProductStockRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: ProductStockRef is a reference to a product stock
          properties:
            name:
              description: Name of the ProductStockRef
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ProductStockRef: '#/components/schemas/ProductStockRef'
    ProductStockRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: ProductStockRef is a reference to a product stock
          properties:
            name:
              description: Name of the ProductStockRef
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ProductStockRef: '#/components/schemas/ProductStockRef_FVO'
    ProductStockRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: ProductStockRef is a reference to a product stock
          properties:
            name:
              description: Name of the ProductStockRef
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ProductStockRef: '#/components/schemas/ProductStockRef_MVO'
    ProductTerm:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm'
    ProductTerm_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm_MVO'
    Product_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef_FVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef_FVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_FVO'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem_FVO'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue_FVO'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice_FVO'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship_FVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_FVO'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef_FVO'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef_FVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_FVO'
    Product_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef_MVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem_MVO'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue_MVO'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice_MVO'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship_MVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_MVO'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm_MVO'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedEntity:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity'
          RelatedShipment: '#/components/schemas/RelatedShipment'
    RelatedEntity_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef_FVO'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_FVO'
          RelatedShipment: '#/components/schemas/RelatedShipment_FVO'
    RelatedEntity_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef_MVO'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_MVO'
          RelatedShipment: '#/components/schemas/RelatedShipment_MVO'
    RelatedOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem'
    RelatedOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
          required:
            - role
            - orderId
            - orderItemId
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_FVO'
    RelatedOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_MVO'
    RelatedParty:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Related Entity reference. A related party defines party or party role linked to a
            specific entity.
          properties:
            role:
              type: string
              description: Role played by the related party
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedParty: '#/components/schemas/RelatedParty'
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
    RelatedPartyOrPartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_MVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    RelatedParty_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Related Entity reference. A related party defines party or party role linked to a
            specific entity.
          properties:
            role:
              type: string
              description: Role played by the related party
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
            - '@referredType'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedParty: '#/components/schemas/RelatedParty_FVO'
    RelatedParty_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Related Entity reference. A related party defines party or party role linked to a
            specific entity.
          properties:
            role:
              type: string
              description: Role played by the related party
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
            - '@referredType'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedParty: '#/components/schemas/RelatedParty_MVO'
    RelatedPlaceRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
    RelatedPlaceRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_FVO'
          required:
            - role
            - place
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
    RelatedPlaceRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_MVO'
          required:
            - role
            - place
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
    RelatedShipment:
      type: object
      description: A related shipment addressable entity
      allOf:
        - $ref: '#/components/schemas/RelatedEntity'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedShipment: '#/components/schemas/RelatedShipment'
    RelatedShipment_FVO:
      type: object
      description: A related shipment addressable entity
      allOf:
        - $ref: '#/components/schemas/RelatedEntity_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedShipment: '#/components/schemas/RelatedShipment_FVO'
    RelatedShipment_MVO:
      type: object
      description: A related shipment addressable entity
      allOf:
        - $ref: '#/components/schemas/RelatedEntity_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedShipment: '#/components/schemas/RelatedShipment_MVO'
    RelatedShippingOrder:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A related shipping order addressable entity
          properties:
            role:
              type: string
            relatedShippingOrder:
              $ref: '#/components/schemas/ShippingOrder'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedShippingOrder: '#/components/schemas/RelatedShippingOrder'
    RelatedShippingOrder_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A related shipping order addressable entity
          properties:
            role:
              type: string
            relatedShippingOrder:
              $ref: '#/components/schemas/ShippingOrder_FVO'
          required:
            - role
            - relatedShippingOrder
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedShippingOrder: '#/components/schemas/RelatedShippingOrder_FVO'
    RelatedShippingOrder_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A related shipping order addressable entity
          properties:
            role:
              type: string
            relatedShippingOrder:
              $ref: '#/components/schemas/ShippingOrder_MVO'
          required:
            - role
            - relatedShippingOrder
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedShippingOrder: '#/components/schemas/RelatedShippingOrder_MVO'
    ReserveProductStockRef:
      type: object
      description: Product Stock Reservation reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ReserveProductStockRef: '#/components/schemas/ReserveProductStockRef'
    ReserveProductStockRef_FVO:
      type: object
      description: Product Stock Reservation reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ReserveProductStockRef: '#/components/schemas/ReserveProductStockRef_FVO'
    ReserveProductStockRef_MVO:
      type: object
      description: Product Stock Reservation reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ReserveProductStockRef: '#/components/schemas/ReserveProductStockRef_MVO'
    ResourceRef:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
    ResourceRef_FVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_FVO'
    ResourceRef_MVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRef_FVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    Shipment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            description:
              type: string
              description: >-
                Description of the shipment. It could be the same as the description of the shipment
                specification.
              example: Cartridges for Ink Ltd
            name:
              type: string
              description: >-
                Name of the shipment. It could be the same as the name of the shipment
                specification.
              example: Shipment
            state:
              type: string
              description: The current status of the shipment.
              example: labelPrinted
            completionDate:
              type: string
              format: date-time
              description: Effective delivery date amended by the provider
              example: '2020-11-20T08:00:00Z'
            deliveryDate:
              type: string
              description: >-
                Is the date at which the shipment was completed (customer has taken ownership of the
                package)
              format: date-time
              example: '2020-11-20T08:00:00Z'
            collectionDate:
              type: string
              format: date-time
              description: The date the package was collected from the carrier (Collection scenario)
              example: '2020-11-18T08:00:00Z'
            expectedDeliveryDate:
              type: string
              format: date-time
              description: The date that the shipment will be delivered
              example: '2020-11-20T08:00:00Z'
            requestedDeliveryDate:
              type: string
              format: date-time
              description: The date requester by the sender for shipment delivery
              example: '2020-11-20T08:00:00Z'
            weight:
              $ref: '#/components/schemas/Quantity'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction'
            shipmentCharacteristic:
              type: array
              description: List of characteristics with values
              items:
                $ref: '#/components/schemas/Characteristic'
            shipmentItem:
              type: array
              description: List of items that are part of the shipment (parcel/package)
              items:
                $ref: '#/components/schemas/ShipmentItem'
            shipmentPrice:
              $ref: '#/components/schemas/ProductPrice'
            note:
              type: array
              description: A list of notes made on this shipment
              items:
                $ref: '#/components/schemas/Note'
            shipmentTracking:
              $ref: '#/components/schemas/ShipmentTrackingRef'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            relatedShipment:
              type: array
              description: >-
                A list of existing shipments that has some form of correlation with the given
                shipment
              items:
                $ref: '#/components/schemas/RelatedShipment'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRef'
            externalIdentifier:
              type: array
              description: >-
                An identification of an entity that is owned by or originates in a software system
                different from the current system, for example a ProductOrder handed off from a
                commerce platform into an order handling system. The structure identifies the system
                itself, the nature of the entity within the system (e.g. class name) and the unique
                ID of the entity within the system. It is anticipated that multiple external IDs can
                be held for a single entity, e.g. if the entity passed through multiple systems on
                the way to the current system. In this case the consumer is expected to sequence the
                IDs in the array in reverse order of provenance, i.e. most recent system first in
                the list.
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            shipmentSpecification:
              $ref: '#/components/schemas/ShipmentSpecificationRefOrValue'
            relatedParty:
              type: array
              description: A list of parties which are involved in this shipment and the role they are playing
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            attachment:
              type: array
              description: "Attachments that may be of relevance to this shipment, such as shippingLabels, Signature or photos of the delivery\r\n"
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Shipment: '#/components/schemas/Shipment'
    ShipmentItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            id:
              type: string
              description: Identifier of the individual shipment line item
              example: 4aafacbd-11ff-4dc8-b445-305f2215715f789
            action:
              $ref: '#/components/schemas/ShipmentItemActionType'
            quantity:
              type: string
              description: Quantity the individual shipment line item
              example: 10 units
            sku:
              type: string
              description: >-
                SKU (Stock Keeping Unit) is a unique code that you use to identify every inventory
                item in your warehouse
              example: UGG-BB-PUR-06
            weight:
              $ref: '#/components/schemas/Quantity'
            productReservationRef:
              $ref: '#/components/schemas/ReserveProductStockRef'
            productStockRef:
              $ref: '#/components/schemas/ProductStockRef'
            externalIdentifier:
              type: array
              description: >-
                An identification of an entity that is owned by or originates in a software system
                different from the current system, for example a ProductOrder handed off from a
                commerce platform into an order handling system. The structure identifies the system
                itself, the nature of the entity within the system (e.g. class name) and the unique
                ID of the entity within the system. It is anticipated that multiple external IDs can
                be held for a single entity, e.g. if the entity passed through multiple systems on
                the way to the current system. In this case the consumer is expected to sequence the
                IDs in the array in reverse order of provenance, i.e. most recent system first in
                the list.
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            shipmentItemPrice:
              $ref: '#/components/schemas/Price'
            characteristic:
              type: array
              description: List of characteristics with values that define the test run
              items:
                $ref: '#/components/schemas/Characteristic'
            product:
              $ref: '#/components/schemas/ProductRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentItem: '#/components/schemas/ShipmentItem'
    ShipmentItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the shipment item
    ShipmentItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            id:
              type: string
              description: Identifier of the individual shipment line item
              example: 4aafacbd-11ff-4dc8-b445-305f2215715f789
            action:
              $ref: '#/components/schemas/ShipmentItemActionType'
            quantity:
              type: string
              description: Quantity the individual shipment line item
              example: 10 units
            sku:
              type: string
              description: >-
                SKU (Stock Keeping Unit) is a unique code that you use to identify every inventory
                item in your warehouse
              example: UGG-BB-PUR-06
            weight:
              $ref: '#/components/schemas/Quantity'
            productReservationRef:
              $ref: '#/components/schemas/ReserveProductStockRef_FVO'
            productStockRef:
              $ref: '#/components/schemas/ProductStockRef_FVO'
            externalIdentifier:
              type: array
              description: >-
                An identification of an entity that is owned by or originates in a software system
                different from the current system, for example a ProductOrder handed off from a
                commerce platform into an order handling system. The structure identifies the system
                itself, the nature of the entity within the system (e.g. class name) and the unique
                ID of the entity within the system. It is anticipated that multiple external IDs can
                be held for a single entity, e.g. if the entity passed through multiple systems on
                the way to the current system. In this case the consumer is expected to sequence the
                IDs in the array in reverse order of provenance, i.e. most recent system first in
                the list.
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            shipmentItemPrice:
              $ref: '#/components/schemas/Price'
            characteristic:
              type: array
              description: List of characteristics with values that define the test run
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentItem: '#/components/schemas/ShipmentItem_FVO'
    ShipmentItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            id:
              type: string
              description: Identifier of the individual shipment line item
              example: 4aafacbd-11ff-4dc8-b445-305f2215715f789
            action:
              $ref: '#/components/schemas/ShipmentItemActionType'
            quantity:
              type: string
              description: Quantity the individual shipment line item
              example: 10 units
            sku:
              type: string
              description: >-
                SKU (Stock Keeping Unit) is a unique code that you use to identify every inventory
                item in your warehouse
              example: UGG-BB-PUR-06
            weight:
              $ref: '#/components/schemas/Quantity'
            productReservationRef:
              $ref: '#/components/schemas/ReserveProductStockRef_MVO'
            productStockRef:
              $ref: '#/components/schemas/ProductStockRef_MVO'
            externalIdentifier:
              type: array
              description: >-
                An identification of an entity that is owned by or originates in a software system
                different from the current system, for example a ProductOrder handed off from a
                commerce platform into an order handling system. The structure identifies the system
                itself, the nature of the entity within the system (e.g. class name) and the unique
                ID of the entity within the system. It is anticipated that multiple external IDs can
                be held for a single entity, e.g. if the entity passed through multiple systems on
                the way to the current system. In this case the consumer is expected to sequence the
                IDs in the array in reverse order of provenance, i.e. most recent system first in
                the list.
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            shipmentItemPrice:
              $ref: '#/components/schemas/Price_MVO'
            characteristic:
              type: array
              description: List of characteristics with values that define the test run
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentItem: '#/components/schemas/ShipmentItem_MVO'
    ShipmentSpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Definition of the nature of a Shipment. For example, could be a standard ground
            delivery, overnight express with signature required by an adult, etc.
          properties:
            description:
              type: string
              description: Description of this REST resource
              example: Airmail delivery
            lastUpdate:
              type: string
              description: Date and time of the last update of this REST resource
              format: date-time
              example: '2020-11-20T08:00:00Z'
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
              example: active
            name:
              type: string
              description: Name given to this REST resource
              example: Shipment Spec
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an ShipmentSpecification represents a single
                ShipmentSpecification (false), or a bundle of ShipmentSpecification (true).
              example: true
            version:
              type: string
              description: Entity specification version
              example: 4.0.1
            constraint:
              type: array
              description: "This is a list of constraint references applied to this specification\r\n"
              items:
                $ref: '#/components/schemas/ConstraintRef'
            targetShipmentSchema:
              $ref: '#/components/schemas/TargetShipmentSchema'
            attachment:
              type: array
              description: "Attachments that may be of relevance to this specification, such as picture, document, media\r\n"
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            shipmentSpecificationCharacteristic:
              type: array
              description: List of characteristics that the shipment can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this shipment specification
              items:
                $ref: '#/components/schemas/RelatedParty'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            shipmentSpecRelationship:
              type: array
              description: "Relationship to another shipment specification, might be dependency, substitution, etc.\r\n"
              items:
                $ref: '#/components/schemas/ShipmentSpecificationRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecification: '#/components/schemas/ShipmentSpecification'
          ShipmentSpecificationRefOrValue: '#/components/schemas/ShipmentSpecificationRefOrValue'
    ShipmentSpecificationRef:
      type: object
      description: Shipment specification reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecificationRef: '#/components/schemas/ShipmentSpecificationRef'
          ShipmentSpecificationRefOrValue: '#/components/schemas/ShipmentSpecificationRefOrValue'
    ShipmentSpecificationRefOrValue:
      type: object
      description: >-
        A shipment specification defined by value or existing defined by reference. The polymorphic
        attributes @type, @schemaLocation &amp; @referredType are related to the shipment
        specification entity and not the related ShipmentSpecificationRefOrValue class itself
      allOf:
        - $ref: '#/components/schemas/ShipmentSpecification'
        - $ref: '#/components/schemas/ShipmentSpecificationRef'
    ShipmentSpecificationRefOrValue_FVO:
      type: object
      description: >-
        A shipment specification defined by value or existing defined by reference. The polymorphic
        attributes @type, @schemaLocation &amp; @referredType are related to the shipment
        specification entity and not the related ShipmentSpecificationRefOrValue class itself
      allOf:
        - $ref: '#/components/schemas/ShipmentSpecification_FVO'
        - $ref: '#/components/schemas/ShipmentSpecificationRef_FVO'
    ShipmentSpecificationRefOrValue_MVO:
      type: object
      description: >-
        A shipment specification defined by value or existing defined by reference. The polymorphic
        attributes @type, @schemaLocation &amp; @referredType are related to the shipment
        specification entity and not the related ShipmentSpecificationRefOrValue class itself
      allOf:
        - $ref: '#/components/schemas/ShipmentSpecification_MVO'
        - $ref: '#/components/schemas/ShipmentSpecificationRef_MVO'
    ShipmentSpecificationRef_FVO:
      type: object
      description: Shipment specification reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecificationRef: '#/components/schemas/ShipmentSpecificationRef_FVO'
          ShipmentSpecificationRefOrValue: '#/components/schemas/ShipmentSpecificationRefOrValue_FVO'
    ShipmentSpecificationRef_MVO:
      type: object
      description: Shipment specification reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecificationRef: '#/components/schemas/ShipmentSpecificationRef_MVO'
          ShipmentSpecificationRefOrValue: '#/components/schemas/ShipmentSpecificationRefOrValue_MVO'
    ShipmentSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A migration, substitution, dependency or exclusivity relationship between/among entity
            specifications.
          properties:
            name:
              type: string
              description: The name given to the target entity specification instance
            role:
              type: string
              description: The association role for this entity specification
            relationshipType:
              type: string
              description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
            associationSpec:
              $ref: '#/components/schemas/AssociationSpecificationRef'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecificationRelationship: '#/components/schemas/ShipmentSpecificationRelationship'
    ShipmentSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A migration, substitution, dependency or exclusivity relationship between/among entity
            specifications.
          properties:
            name:
              type: string
              description: The name given to the target entity specification instance
            role:
              type: string
              description: The association role for this entity specification
            relationshipType:
              type: string
              description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
            associationSpec:
              $ref: '#/components/schemas/AssociationSpecificationRef_FVO'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecificationRelationship: '#/components/schemas/ShipmentSpecificationRelationship_FVO'
    ShipmentSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A migration, substitution, dependency or exclusivity relationship between/among entity
            specifications.
          properties:
            name:
              type: string
              description: The name given to the target entity specification instance
            role:
              type: string
              description: The association role for this entity specification
            relationshipType:
              type: string
              description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
            associationSpec:
              $ref: '#/components/schemas/AssociationSpecificationRef_MVO'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecificationRelationship: '#/components/schemas/ShipmentSpecificationRelationship_MVO'
    ShipmentSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Definition of the nature of a Shipment. For example, could be a standard ground
            delivery, overnight express with signature required by an adult, etc.
          properties:
            description:
              type: string
              description: Description of this REST resource
              example: Airmail delivery
            lastUpdate:
              type: string
              description: Date and time of the last update of this REST resource
              format: date-time
              example: '2020-11-20T08:00:00Z'
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
              example: active
            name:
              type: string
              description: Name given to this REST resource
              example: Shipment Spec
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an ShipmentSpecification represents a single
                ShipmentSpecification (false), or a bundle of ShipmentSpecification (true).
              example: true
            version:
              type: string
              description: Entity specification version
              example: 4.0.1
            constraint:
              type: array
              description: "This is a list of constraint references applied to this specification\r\n"
              items:
                $ref: '#/components/schemas/ConstraintRef_FVO'
            targetShipmentSchema:
              $ref: '#/components/schemas/TargetShipmentSchema_FVO'
            attachment:
              type: array
              description: "Attachments that may be of relevance to this specification, such as picture, document, media\r\n"
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            shipmentSpecificationCharacteristic:
              type: array
              description: List of characteristics that the shipment can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this shipment specification
              items:
                $ref: '#/components/schemas/RelatedParty_FVO'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            shipmentSpecRelationship:
              type: array
              description: "Relationship to another shipment specification, might be dependency, substitution, etc.\r\n"
              items:
                $ref: '#/components/schemas/ShipmentSpecificationRelationship_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecification: '#/components/schemas/ShipmentSpecification_FVO'
          ShipmentSpecificationRefOrValue: '#/components/schemas/ShipmentSpecificationRefOrValue_FVO'
    ShipmentSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Definition of the nature of a Shipment. For example, could be a standard ground
            delivery, overnight express with signature required by an adult, etc.
          properties:
            description:
              type: string
              description: Description of this REST resource
              example: Airmail delivery
            lastUpdate:
              type: string
              description: Date and time of the last update of this REST resource
              format: date-time
              example: '2020-11-20T08:00:00Z'
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
              example: active
            name:
              type: string
              description: Name given to this REST resource
              example: Shipment Spec
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an ShipmentSpecification represents a single
                ShipmentSpecification (false), or a bundle of ShipmentSpecification (true).
              example: true
            version:
              type: string
              description: Entity specification version
              example: 4.0.1
            constraint:
              type: array
              description: "This is a list of constraint references applied to this specification\r\n"
              items:
                $ref: '#/components/schemas/ConstraintRef_MVO'
            targetShipmentSchema:
              $ref: '#/components/schemas/TargetShipmentSchema_MVO'
            attachment:
              type: array
              description: "Attachments that may be of relevance to this specification, such as picture, document, media\r\n"
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            shipmentSpecificationCharacteristic:
              type: array
              description: List of characteristics that the shipment can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this shipment specification
              items:
                $ref: '#/components/schemas/RelatedParty_MVO'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            shipmentSpecRelationship:
              type: array
              description: "Relationship to another shipment specification, might be dependency, substitution, etc.\r\n"
              items:
                $ref: '#/components/schemas/ShipmentSpecificationRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentSpecification: '#/components/schemas/ShipmentSpecification_MVO'
          ShipmentSpecificationRefOrValue: '#/components/schemas/ShipmentSpecificationRefOrValue_MVO'
    ShipmentTrackingRef:
      type: object
      description: ShipmentTracking reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentTrackingRef: '#/components/schemas/ShipmentTrackingRef'
    ShipmentTrackingRef_FVO:
      type: object
      description: ShipmentTracking reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentTrackingRef: '#/components/schemas/ShipmentTrackingRef_FVO'
    ShipmentTrackingRef_MVO:
      type: object
      description: ShipmentTracking reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShipmentTrackingRef: '#/components/schemas/ShipmentTrackingRef_MVO'
    Shipment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            description:
              type: string
              description: >-
                Description of the shipment. It could be the same as the description of the shipment
                specification.
              example: Cartridges for Ink Ltd
            name:
              type: string
              description: >-
                Name of the shipment. It could be the same as the name of the shipment
                specification.
              example: Shipment
            state:
              type: string
              description: The current status of the shipment.
              example: labelPrinted
            deliveryDate:
              type: string
              description: >-
                Is the date at which the shipment was completed (customer has taken ownership of the
                package)
              format: date-time
              example: '2020-11-20T08:00:00Z'
            collectionDate:
              type: string
              format: date-time
              description: The date the package was collected from the carrier (Collection scenario)
              example: '2020-11-18T08:00:00Z'
            expectedDeliveryDate:
              type: string
              format: date-time
              description: The date that the shipment will be delivered
              example: '2020-11-20T08:00:00Z'
            requestedDeliveryDate:
              type: string
              format: date-time
              description: The date requester by the sender for shipment delivery
              example: '2020-11-20T08:00:00Z'
            weight:
              $ref: '#/components/schemas/Quantity'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction_FVO'
            shipmentCharacteristic:
              type: array
              description: List of characteristics with values
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            shipmentItem:
              type: array
              description: List of items that are part of the shipment (parcel/package)
              items:
                $ref: '#/components/schemas/ShipmentItem_FVO'
            shipmentPrice:
              $ref: '#/components/schemas/ProductPrice_FVO'
            note:
              type: array
              description: A list of notes made on this shipment
              items:
                $ref: '#/components/schemas/Note_FVO'
            shipmentTracking:
              $ref: '#/components/schemas/ShipmentTrackingRef_FVO'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            relatedShipment:
              type: array
              description: >-
                A list of existing shipments that has some form of correlation with the given
                shipment
              items:
                $ref: '#/components/schemas/RelatedShipment_FVO'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRef_FVO'
            externalIdentifier:
              type: array
              description: >-
                An identification of an entity that is owned by or originates in a software system
                different from the current system, for example a ProductOrder handed off from a
                commerce platform into an order handling system. The structure identifies the system
                itself, the nature of the entity within the system (e.g. class name) and the unique
                ID of the entity within the system. It is anticipated that multiple external IDs can
                be held for a single entity, e.g. if the entity passed through multiple systems on
                the way to the current system. In this case the consumer is expected to sequence the
                IDs in the array in reverse order of provenance, i.e. most recent system first in
                the list.
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            shipmentSpecification:
              $ref: '#/components/schemas/ShipmentSpecificationRefOrValue_FVO'
            relatedParty:
              type: array
              description: A list of parties which are involved in this shipment and the role they are playing
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            attachment:
              type: array
              description: "Attachments that may be of relevance to this shipment, such as shippingLabels, Signature or photos of the delivery\r\n"
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Shipment: '#/components/schemas/Shipment_FVO'
    Shipment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            description:
              type: string
              description: >-
                Description of the shipment. It could be the same as the description of the shipment
                specification.
              example: Cartridges for Ink Ltd
            name:
              type: string
              description: >-
                Name of the shipment. It could be the same as the name of the shipment
                specification.
              example: Shipment
            state:
              type: string
              description: The current status of the shipment.
              example: labelPrinted
            completionDate:
              type: string
              format: date-time
              description: Effective delivery date amended by the provider
              example: '2020-11-20T08:00:00Z'
            deliveryDate:
              type: string
              description: >-
                Is the date at which the shipment was completed (customer has taken ownership of the
                package)
              format: date-time
              example: '2020-11-20T08:00:00Z'
            collectionDate:
              type: string
              format: date-time
              description: The date the package was collected from the carrier (Collection scenario)
              example: '2020-11-18T08:00:00Z'
            expectedDeliveryDate:
              type: string
              format: date-time
              description: The date that the shipment will be delivered
              example: '2020-11-20T08:00:00Z'
            requestedDeliveryDate:
              type: string
              format: date-time
              description: The date requester by the sender for shipment delivery
              example: '2020-11-20T08:00:00Z'
            weight:
              $ref: '#/components/schemas/Quantity'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction_MVO'
            shipmentCharacteristic:
              type: array
              description: List of characteristics with values
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            shipmentItem:
              type: array
              description: List of items that are part of the shipment (parcel/package)
              items:
                $ref: '#/components/schemas/ShipmentItem_MVO'
            shipmentPrice:
              $ref: '#/components/schemas/ProductPrice_MVO'
            note:
              type: array
              description: A list of notes made on this shipment
              items:
                $ref: '#/components/schemas/Note_MVO'
            shipmentTracking:
              $ref: '#/components/schemas/ShipmentTrackingRef_MVO'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            relatedShipment:
              type: array
              description: >-
                A list of existing shipments that has some form of correlation with the given
                shipment
              items:
                $ref: '#/components/schemas/RelatedShipment_MVO'
            paymentMethod:
              $ref: '#/components/schemas/PaymentMethodRef_MVO'
            externalIdentifier:
              type: array
              description: >-
                An identification of an entity that is owned by or originates in a software system
                different from the current system, for example a ProductOrder handed off from a
                commerce platform into an order handling system. The structure identifies the system
                itself, the nature of the entity within the system (e.g. class name) and the unique
                ID of the entity within the system. It is anticipated that multiple external IDs can
                be held for a single entity, e.g. if the entity passed through multiple systems on
                the way to the current system. In this case the consumer is expected to sequence the
                IDs in the array in reverse order of provenance, i.e. most recent system first in
                the list.
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            shipmentSpecification:
              $ref: '#/components/schemas/ShipmentSpecificationRefOrValue_MVO'
            relatedParty:
              type: array
              description: A list of parties which are involved in this shipment and the role they are playing
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            attachment:
              type: array
              description: "Attachments that may be of relevance to this shipment, such as shippingLabels, Signature or photos of the delivery\r\n"
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Shipment: '#/components/schemas/Shipment_MVO'
    ShippingInstruction:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Instructions and details for the carrier
          properties:
            shippingType:
              type: string
              description: 'The shipping type, e.g. thick_envelope, small_flat_rate_box, large_package, etc.'
              example: large_package
            carrierId:
              type: string
              description: The carrier identifier
              example: '1010123'
            carrierName:
              type: string
              description: The carrier name
              example: On Time Deliveries Ltd
            carrierServiceCode:
              type: string
              description: >-
                The service code used by the carrier to ship the package, royal mail ground, royal
                mail first class, etc
              example: XH545554533GB
            deliverySpeed:
              type: string
              description: 'Shipping delivery speed, same day, next day, next business day, etc'
              example: SameDay
            deliveryAttempts:
              type: integer
              description: Shipping delivery attempts that should be performed
              example: 3
            deliveryTimeSlot:
              $ref: '#/components/schemas/TimePeriod'
            insuredValue:
              $ref: '#/components/schemas/Money'
            labelMessage:
              type: string
              description: Shipping delivery message label
              example: FAO Ink Industries
            packageType:
              type: string
              description: The type of packaging
              example: 'Bottle, gas'
            instructionCharacteristic:
              type: array
              description: Additional shipping characteristics that maybe specific to one or another carrier
              items:
                $ref: '#/components/schemas/Characteristic'
            warehouseId:
              type: string
              description: The identification of the warehouse that the shipment is being shipped from.
              example: wh12345
            receiptConfirmation:
              type: string
              description: 'Delivery confirmation required for the shipment (none, signature, over18Signature)'
              example: signature
            note:
              type: array
              description: A list of notes made on this shipment item
              items:
                $ref: '#/components/schemas/Note'
            signatureRequired:
              type: boolean
              example: 'true'
            signatureRequiredBy:
              $ref: '#/components/schemas/SignatureRequiredByType'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingInstruction: '#/components/schemas/ShippingInstruction'
    ShippingInstruction_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Instructions and details for the carrier
          properties:
            shippingType:
              type: string
              description: 'The shipping type, e.g. thick_envelope, small_flat_rate_box, large_package, etc.'
              example: large_package
            carrierId:
              type: string
              description: The carrier identifier
              example: '1010123'
            carrierName:
              type: string
              description: The carrier name
              example: On Time Deliveries Ltd
            carrierServiceCode:
              type: string
              description: >-
                The service code used by the carrier to ship the package, royal mail ground, royal
                mail first class, etc
              example: XH545554533GB
            deliverySpeed:
              type: string
              description: 'Shipping delivery speed, same day, next day, next business day, etc'
              example: SameDay
            deliveryAttempts:
              type: integer
              description: Shipping delivery attempts that should be performed
              example: 3
            deliveryTimeSlot:
              $ref: '#/components/schemas/TimePeriod'
            insuredValue:
              $ref: '#/components/schemas/Money'
            labelMessage:
              type: string
              description: Shipping delivery message label
              example: FAO Ink Industries
            packageType:
              type: string
              description: The type of packaging
              example: 'Bottle, gas'
            instructionCharacteristic:
              type: array
              description: Additional shipping characteristics that maybe specific to one or another carrier
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            warehouseId:
              type: string
              description: The identification of the warehouse that the shipment is being shipped from.
              example: wh12345
            receiptConfirmation:
              type: string
              description: 'Delivery confirmation required for the shipment (none, signature, over18Signature)'
              example: signature
            note:
              type: array
              description: A list of notes made on this shipment item
              items:
                $ref: '#/components/schemas/Note_FVO'
            signatureRequired:
              type: boolean
              example: 'true'
            signatureRequiredBy:
              $ref: '#/components/schemas/SignatureRequiredByType'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingInstruction: '#/components/schemas/ShippingInstruction_FVO'
    ShippingInstruction_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Instructions and details for the carrier
          properties:
            shippingType:
              type: string
              description: 'The shipping type, e.g. thick_envelope, small_flat_rate_box, large_package, etc.'
              example: large_package
            carrierId:
              type: string
              description: The carrier identifier
              example: '1010123'
            carrierName:
              type: string
              description: The carrier name
              example: On Time Deliveries Ltd
            carrierServiceCode:
              type: string
              description: >-
                The service code used by the carrier to ship the package, royal mail ground, royal
                mail first class, etc
              example: XH545554533GB
            deliverySpeed:
              type: string
              description: 'Shipping delivery speed, same day, next day, next business day, etc'
              example: SameDay
            deliveryAttempts:
              type: integer
              description: Shipping delivery attempts that should be performed
              example: 3
            deliveryTimeSlot:
              $ref: '#/components/schemas/TimePeriod'
            insuredValue:
              $ref: '#/components/schemas/Money'
            labelMessage:
              type: string
              description: Shipping delivery message label
              example: FAO Ink Industries
            packageType:
              type: string
              description: The type of packaging
              example: 'Bottle, gas'
            instructionCharacteristic:
              type: array
              description: Additional shipping characteristics that maybe specific to one or another carrier
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            warehouseId:
              type: string
              description: The identification of the warehouse that the shipment is being shipped from.
              example: wh12345
            receiptConfirmation:
              type: string
              description: 'Delivery confirmation required for the shipment (none, signature, over18Signature)'
              example: signature
            note:
              type: array
              description: A list of notes made on this shipment item
              items:
                $ref: '#/components/schemas/Note_MVO'
            signatureRequired:
              type: boolean
              example: 'true'
            signatureRequiredBy:
              $ref: '#/components/schemas/SignatureRequiredByType'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingInstruction: '#/components/schemas/ShippingInstruction_MVO'
    ShippingOrder:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A Shipping Order is a document used by a business to specify what items are to be
            transferred from a storage location or warehouse to which person and to which new
            location. A Shipping Order can typically be sent along with a shipment of goods so that
            the person receiving them can verify that the document correctly reflects the items that
            they actually received.
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date and time when the ProductOrder was created
            completionDate:
              type: string
              format: date-time
              description: Date when the ProductOrder was completed
            lastUpdate:
              type: string
              format: date-time
              description: The date and time that the trouble ticket was last updated
            relatedParty:
              type: array
              description: The parties involved in the shipping order
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            relatedShippingOrder:
              $ref: '#/components/schemas/RelatedShippingOrder'
            productOrderRef:
              $ref: '#/components/schemas/ProductOrderRef'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction'
            shippingOrderItem:
              type: array
              description: >-
                A list of shipping order items. Each shipping order item has a corresponding
                Shipment(e.g. parcel) which has one or multiple products in it
              items:
                $ref: '#/components/schemas/ShippingOrderItem'
            shippingOrderCharacteristic:
              type: array
              description: 'A list of characteristics that characterize this order '
              items:
                $ref: '#/components/schemas/Characteristic'
            note:
              type: array
              description: A list of notes made on this shipping shipment
              items:
                $ref: '#/components/schemas/Note'
            shippingOrderPrice:
              $ref: '#/components/schemas/Price'
            shippingOrderOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            state:
              $ref: '#/components/schemas/ShippingOrderStateType'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrder: '#/components/schemas/ShippingOrder'
    ShippingOrderAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ShippingOrderAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ShippingOrderAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrderAttributeValueChangeEvent: '#/components/schemas/ShippingOrderAttributeValueChangeEvent'
    ShippingOrderAttributeValueChangeEventPayload:
      type: object
      description: ShippingOrderAttributeValueChangeEventPayload generic structure
      properties:
        shippingOrder:
          $ref: '#/components/schemas/ShippingOrder'
    ShippingOrderCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ShippingOrderCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ShippingOrderCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrderCreateEvent: '#/components/schemas/ShippingOrderCreateEvent'
    ShippingOrderCreateEventPayload:
      type: object
      description: ShippingOrderCreateEventPayload generic structure
      properties:
        shippingOrder:
          $ref: '#/components/schemas/ShippingOrder'
    ShippingOrderDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ShippingOrderDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ShippingOrderDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrderDeleteEvent: '#/components/schemas/ShippingOrderDeleteEvent'
    ShippingOrderDeleteEventPayload:
      type: object
      description: ShippingOrderDeleteEventPayload generic structure
      properties:
        shippingOrder:
          $ref: '#/components/schemas/ShippingOrder'
    ShippingOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A list of shipping order items
          properties:
            id:
              type: string
              description: Identifier of the Shipping Order Item
            action:
              $ref: '#/components/schemas/ShippingOrderItemActionType'
            productOrderItem:
              $ref: '#/components/schemas/ProductOrderItemRef'
            product:
              $ref: '#/components/schemas/ProductRef'
            relatedParty:
              type: array
              description: The parties involved in the shipping order
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            quantity:
              type: integer
              description: Quantity ordered
            status:
              type: string
              description: 'status of shipping order item. e.g "active" , "savedForLater"'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction'
            shippingOrderItemOffer:
              $ref: '#/components/schemas/ProductOfferingRef'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            shipment:
              $ref: '#/components/schemas/Shipment'
            shippingOrderItemPrice:
              $ref: '#/components/schemas/ProductPrice'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrderItem: '#/components/schemas/ShippingOrderItem'
    ShippingOrderItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the shipping order item
    ShippingOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A list of shipping order items
          properties:
            action:
              $ref: '#/components/schemas/ShippingOrderItemActionType'
            productOrderItem:
              $ref: '#/components/schemas/ProductOrderItemRef_FVO'
            product:
              $ref: '#/components/schemas/ProductRef_FVO'
            relatedParty:
              type: array
              description: The parties involved in the shipping order
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            quantity:
              type: integer
              description: Quantity ordered
            status:
              type: string
              description: 'status of shipping order item. e.g "active" , "savedForLater"'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction_FVO'
            shippingOrderItemOffer:
              $ref: '#/components/schemas/ProductOfferingRef_FVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_FVO'
            shipment:
              $ref: '#/components/schemas/Shipment_FVO'
            shippingOrderItemPrice:
              $ref: '#/components/schemas/ProductPrice_FVO'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
          required:
            - action
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrderItem: '#/components/schemas/ShippingOrderItem_FVO'
    ShippingOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: A list of shipping order items
          properties:
            action:
              $ref: '#/components/schemas/ShippingOrderItemActionType'
            productOrderItem:
              $ref: '#/components/schemas/ProductOrderItemRef_MVO'
            product:
              $ref: '#/components/schemas/ProductRef_MVO'
            relatedParty:
              type: array
              description: The parties involved in the shipping order
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            quantity:
              type: integer
              description: Quantity ordered
            status:
              type: string
              description: 'status of shipping order item. e.g "active" , "savedForLater"'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction_MVO'
            shippingOrderItemOffer:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            shipment:
              $ref: '#/components/schemas/Shipment_MVO'
            shippingOrderItemPrice:
              $ref: '#/components/schemas/ProductPrice_MVO'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrderItem: '#/components/schemas/ShippingOrderItem_MVO'
    ShippingOrderStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ShippingOrderStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ShippingOrderStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrderStateChangeEvent: '#/components/schemas/ShippingOrderStateChangeEvent'
    ShippingOrderStateChangeEventPayload:
      type: object
      description: ShippingOrderStateChangeEventPayload generic structure
      properties:
        shippingOrder:
          $ref: '#/components/schemas/ShippingOrder'
    ShippingOrderStateType:
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - completed
        - failed
        - partial
        - assessingCancellation
        - pendingCancellation
        - draft
        - inProgress.accepted
      type: string
      description: Possible values for the state of the order
    ShippingOrder_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A Shipping Order is a document used by a business to specify what items are to be
            transferred from a storage location or warehouse to which person and to which new
            location. A Shipping Order can typically be sent along with a shipment of goods so that
            the person receiving them can verify that the document correctly reflects the items that
            they actually received.
          properties:
            completionDate:
              type: string
              format: date-time
              description: Date when the ProductOrder was completed
            lastUpdate:
              type: string
              format: date-time
              description: The date and time that the trouble ticket was last updated
            relatedParty:
              type: array
              description: The parties involved in the shipping order
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            relatedShippingOrder:
              $ref: '#/components/schemas/RelatedShippingOrder_FVO'
            productOrderRef:
              $ref: '#/components/schemas/ProductOrderRef_FVO'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction_FVO'
            shippingOrderItem:
              type: array
              description: >-
                A list of shipping order items. Each shipping order item has a corresponding
                Shipment(e.g. parcel) which has one or multiple products in it
              items:
                $ref: '#/components/schemas/ShippingOrderItem_FVO'
            shippingOrderCharacteristic:
              type: array
              description: 'A list of characteristics that characterize this order '
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            note:
              type: array
              description: A list of notes made on this shipping shipment
              items:
                $ref: '#/components/schemas/Note_FVO'
            shippingOrderPrice:
              $ref: '#/components/schemas/Price'
            shippingOrderOffering:
              $ref: '#/components/schemas/ProductOfferingRef_FVO'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
          required:
            - shippingOrderItem
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrder: '#/components/schemas/ShippingOrder_FVO'
    ShippingOrder_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A Shipping Order is a document used by a business to specify what items are to be
            transferred from a storage location or warehouse to which person and to which new
            location. A Shipping Order can typically be sent along with a shipment of goods so that
            the person receiving them can verify that the document correctly reflects the items that
            they actually received.
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date and time when the ProductOrder was created
            completionDate:
              type: string
              format: date-time
              description: Date when the ProductOrder was completed
            lastUpdate:
              type: string
              format: date-time
              description: The date and time that the trouble ticket was last updated
            relatedParty:
              type: array
              description: The parties involved in the shipping order
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            relatedShippingOrder:
              $ref: '#/components/schemas/RelatedShippingOrder_MVO'
            productOrderRef:
              $ref: '#/components/schemas/ProductOrderRef_MVO'
            shippingInstruction:
              $ref: '#/components/schemas/ShippingInstruction_MVO'
            shippingOrderItem:
              type: array
              description: >-
                A list of shipping order items. Each shipping order item has a corresponding
                Shipment(e.g. parcel) which has one or multiple products in it
              items:
                $ref: '#/components/schemas/ShippingOrderItem_MVO'
            shippingOrderCharacteristic:
              type: array
              description: 'A list of characteristics that characterize this order '
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            note:
              type: array
              description: A list of notes made on this shipping shipment
              items:
                $ref: '#/components/schemas/Note_MVO'
            shippingOrderPrice:
              $ref: '#/components/schemas/Price_MVO'
            shippingOrderOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            state:
              $ref: '#/components/schemas/ShippingOrderStateType'
            placeFrom:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            placeTo:
              $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ShippingOrder: '#/components/schemas/ShippingOrder_MVO'
    SignatureRequiredByType:
      enum:
        - adult
        - receiver
      type: string
      description: Possible values for the signature requirement upon receiving the shipment
    Skill:
      type: object
      description: >-
        Skills evaluated for an individual with a level and possibly with a limited validity when an
        obsolescence is defined (Ex: the first-aid certificate first level is limited to one year
        and an update training is required each year to keep the level).
      properties:
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: 'Name of the skill, such as Java language'
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    StandardIdentifier:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier'
    StandardIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_MVO'
    Supplier:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Supplier_MVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    TargetProductSchema:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
    TargetProductSchema_FVO:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
      required:
        - '@type'
        - '@schemaLocation'
    TargetProductSchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
    TargetShipmentSchema:
      type: object
      description: >-
        The reference object to the schema and type of target shipment which is described by
        shipment specification
      properties:
        '@type':
          type: string
          description: Class type of the target shipment
        '@schemaLocation':
          type: string
          description: "This field provides a link to the schema describing the target shipment\r\n"
    TargetShipmentSchema_FVO:
      type: object
      description: >-
        The reference object to the schema and type of target shipment which is described by
        shipment specification
      properties:
        '@type':
          type: string
          description: Class type of the target shipment
        '@schemaLocation':
          type: string
          description: "This field provides a link to the schema describing the target shipment\r\n"
      required:
        - '@type'
        - '@schemaLocation'
    TargetShipmentSchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target shipment which is described by
        shipment specification
      properties:
        '@type':
          type: string
          description: Class type of the target shipment
        '@schemaLocation':
          type: string
          description: "This field provides a link to the schema describing the target shipment\r\n"
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
    TaxDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
    TaxExemptionCertificate_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_MVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    bbox:
      items:
        type: number
      minItems: 4
      type: array
      description: >-
        A bounding box array that contains the geometry. The axes order follows the axes order of
        the geometry
    lineString:
      items:
        $ref: '#/components/schemas/position'
      minItems: 2
      type: array
      description: 'GeoJSON: An array of two or more positions'
    linearRing:
      items:
        $ref: '#/components/schemas/position'
      minItems: 4
      type: array
      description: 'GeoJSON: An array of four or more positions where the first equals the last'
    multiLineString:
      items:
        $ref: '#/components/schemas/lineString'
      minItems: 1
      type: array
      description: 'GeoJSON: One or more lines'
    multiPolygon:
      items:
        $ref: '#/components/schemas/polygon'
      minItems: 1
      type: array
      description: 'GeoJSON: An array of polygons'
    polygon:
      items:
        $ref: '#/components/schemas/linearRing'
      minItems: 1
      type: array
      description: 'GeoJSON: An array of linear rings'
    position:
      items:
        type: number
      minItems: 2
      type: array
      description: 'GeoJSON: A single position'
    positionArray:
      items:
        $ref: '#/components/schemas/position'
      type: array
      description: 'GeoJSON: An array of positions'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    ShippingOrder_FVO:
      description: The ShippingOrder to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrder_FVO'
          examples:
            CreateShippingOrder:
              $ref: '#/components/examples/CreateShippingOrder_request'
      required: true
    ShippingOrder_MVO:
      description: The ShippingOrder to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrder_MVO'
          examples:
            ShippingOrder_partialupdate_01:
              $ref: '#/components/examples/ShippingOrder_partialupdate_01_request'
            ShippingOrder_partialupdate_example04:
              $ref: '#/components/examples/ShippingOrder_partialupdate_example04_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ShippingOrder_MVO'
          examples:
            ShippingOrder_partialupdate_02:
              $ref: '#/components/examples/ShippingOrder_partialupdate_02_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ShippingOrder_partialupdate_03:
              $ref: '#/components/examples/ShippingOrder_partialupdate_03_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ShippingOrder_partialupdate_04:
              $ref: '#/components/examples/ShippingOrder_partialupdate_04_request'
      required: true
    ShippingOrderCreateEvent:
      description: ShippingOrder create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrderCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    ShippingOrderAttributeValueChangeEvent:
      description: ShippingOrder attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrderAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    ShippingOrderDeleteEvent:
      description: ShippingOrder delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrderDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    ShippingOrderStateChangeEvent:
      description: ShippingOrder stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrderStateChangeEvent'
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
          examples:
            Basic Hub Example Request:
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
                query: data
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Bad Request Error
              value:
                '@type': Error
                code: ERR400
                reason: Bad Request
                message: >-
                  The server could not understand the request due to invalid syntax. Please correct
                  the syntax and try again.
                referenceError: 'https://host/errors'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Unauthorized Error
              value:
                '@type': Error
                code: ERR401
                reason: Unauthorized
                message: >-
                  You are not authorized to access the requested resource. Please provide the
                  correct credentials.
                referenceError: 'https://host/errors'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Forbidden Error
              value:
                '@type': Error
                code: ERR403
                reason: Forbidden
                message: >-
                  You don't have the permission to access the requested resource. It is either
                  read-protected or not readable by the server.
                referenceError: 'https://host/errors'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Found Error
              value:
                '@type': Error
                code: ERR404
                reason: Not Found
                message: The requested URL was not found on the server.
                referenceError: 'https://host/errors'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Method Not allowed Error
              value:
                '@type': Error
                code: ERR405
                reason: Method Not allowed
                message: The method is not allowed for the requested URL.
                referenceError: 'https://host/errors'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Conflict Error
              value:
                '@type': Error
                code: ERR409
                reason: Conflict
                message: >-
                  The request could not be completed due to a conflict with the current state of the
                  target resource.
                referenceError: 'https://host/errors'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Internal Server Error example
              value:
                '@type': Error
                code: ERR500
                reason: Internal Server Error
                message: The server encountered an internal error. Please contact the system administrator.
                referenceError: 'https://host/errors'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Implemented Error
              value:
                '@type': Error
                code: ERR501
                reason: The requested operation is not implemented
                message: >-
                  The requested operation is not implemented. Please contact the system
                  administrator.
                referenceError: 'https://host/errors'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Service Unavailable Error
              value:
                '@type': Error
                code: ERR503
                reason: Service Unavailable
                message: The service is currently unavailable. Please try again later.
                referenceError: 'https://host/errors'
    200ShippingOrderArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ShippingOrder'
          examples:
            ShippingOrder_list_example:
              $ref: '#/components/examples/ShippingOrder_list_example_response'
    200ShippingOrder_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrder'
          examples:
            ShippingOrder_retrieve_example:
              $ref: '#/components/examples/ShippingOrder_retrieve_example_response'
    200ShippingOrder_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrder'
          examples:
            ShippingOrder_partialupdate_01:
              $ref: '#/components/examples/ShippingOrder_partialupdate_01_response'
            ShippingOrder_partialupdate_example04:
              $ref: '#/components/examples/ShippingOrder_partialupdate_example04_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ShippingOrder'
          examples:
            ShippingOrder_partialupdate_02:
              $ref: '#/components/examples/ShippingOrder_partialupdate_02_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ShippingOrder'
              - type: array
                items:
                  $ref: '#/components/schemas/ShippingOrder'
              - type: string
                nullable: true
          examples:
            ShippingOrder_partialupdate_03:
              $ref: '#/components/examples/ShippingOrder_partialupdate_03_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ShippingOrder'
              - type: array
                items:
                  $ref: '#/components/schemas/ShippingOrder'
              - type: string
                nullable: true
          examples:
            ShippingOrder_partialupdate_04:
              $ref: '#/components/examples/ShippingOrder_partialupdate_04_response'
    201ShippingOrder:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingOrder'
          examples:
            CreateShippingOrder:
              $ref: '#/components/examples/CreateShippingOrder_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Error example
              value:
                '@type': Error
                code: ERR001
                reason: Missing information
                message: Please provide the additional example information
                referenceError: 'https://host/errors'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
          examples:
            basic:
              summary: Hub example
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    ShippingOrder_list_example_response:
      value:
        - '@type': ShippingOrder
          id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
          href: >-
            https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
          productOrderRef:
            '@type': ProductOrderRef
            id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
            href: >-
              https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
          relatedParty:
            - '@type': RelatedPartyOrPartyRole
              role: Recepient
              partyOrPartyRole:
                id: f2d9391f-c34a-453c-8d9b-0ecede05e871
                '@type': Individual
                name: Joe Doe
                contactMedium:
                  - '@type': PhoneContactMedium
                    contactMediumIdentifier: TelephoneNumber
                    preferred: true
                    validFor:
                      startDateTime: '2018-06-12T00:00:00Z'
                      endDateTime: '2019-01-01T00:00:00Z'
                    phoneNumber: 01 09 75 83 51
                  - '@type': GeographicAddressContactMedium
                    postCode: OX11 6TR
                    city: Oxford
                    street1: 23 Borney Road
          shippingInstruction:
            '@type': ShippingInstruction
            deliveryAttempts: 3
            deliverySpeed: SameDay
            labelMessage: FAO Ink Industries
            packageType: Bottle
            receiptConfirmation: SignatureRequired
            shippingType: largePackage
            signatureRequired: true
            signatureRequiredBy: adult
            instructionCharacteristic:
              - '@type': StringCharacteristic
                name: CustomerCall
                value: 'Yes, 1h before arriving'
          shippingOrderItem:
            - '@type': shippingOrderItem
              id: '1'
              action: add
              productOrderItem:
                '@type': ProductOrderItemRef
                ProductOrderHref: >-
                  https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
                productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
                productOrderItemId: '2'
              product:
                '@type': ProductRef
                href: >-
                  https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
                id: 552e4c10-a650-487b-b9c4-fbbb73879f24
                name: Apple Iphone
              quantity: 1
              productOffering:
                '@type': ProductOfferingRef
                id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
                name: Apple Iphone
                href: >-
                  https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
            - '@type': shippingOrderItem
              id: '2'
              action: add
              productOrderItem:
                '@type': ProductOrderItemRef
                ProductOrderHref: >-
                  https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
                productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
                productOrderItemId: '2'
              product:
                '@type': ProductRef
                href: >-
                  https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
                id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
                name: Plantronics X100
              quantity: 1
              productOffering:
                '@type': ProductOfferingRef
                id: f96744fd-d0d3-4abb-929c-9f68a527892b
                name: Plantronics X100
                href: >-
                  https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
            - '@type': shippingOrderItem
              id: '3'
              action: add
              productOrderItem:
                '@type': ProductOrderItemRef
                ProductOrderHref: >-
                  https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
                productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
                productOrderItemId: '2'
              product:
                '@type': ProductRef
                href: >-
                  https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
                id: 046acef8-d397-434a-9334-b57f47393db8
                name: Red 75
              quantity: 1
              productOffering:
                '@type': ProductOfferingRef
                id: 45f53a72-92a3-42f6-89cc-a04277f905af
                name: Red 75
                href: >-
                  https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
          shippingOrderPrice:
            '@type': Price
            dutyFreeAmount:
              unit: EUR
              value: 5
            percentage: 0
            taxIncludedAmount:
              unit: EUR
              value: 10
          shippingOrderOffering:
            '@type': ProductOfferingRef
            href: >-
              https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
            id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          state: inProgress
          placeTo:
            '@type': RelatedPlaceRefOrValue
            role: installationAddress
            place:
              id: 8b103e6d-6ceb-459b-be59-5cec85732064
              href: >-
                https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
              '@referredType': GeographicAddress
              '@type': PlaceRef
        - '@type': ShippingOrder
          id: 8c9ba90d-77fa-4291-af9c-805d827dd994
          href: >-
            https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/8c9ba90d-77fa-4291-af9c-805d827dd994
          productOrderRef:
            '@type': ProductOrderRef
            id: fd108f3c-d072-42e8-9517-f3b06289e5b1
            href: >-
              https://example.com/tmf-api/productOrderingManagement/v5/productOrder/fd108f3c-d072-42e8-9517-f3b06289e5b1
          relatedParty:
            - '@type': RelatedPartyWithContactInfo
              role: Recepient
              partyOrPartyRole:
                id: 92741527-2e45-42ec-a3a1-d3c3714f6f9f
                '@type': Individual
                name: Joe Doe
                contactMedium:
                  - '@type': PhoneContactMedium
                    contactMediumIdentifier: TelephoneNumber
                    preferred: true
                    validFor:
                      startDateTime: '2018-06-12T00:00:00Z'
                      endDateTime: '2019-01-01T00:00:00Z'
                    phoneNumber: 01 09 75 83 51
                  - '@type': GeographicAddressContactMedium
                    postCode: OX11 6TR
                    city: Oxford
                    street1: 23 Borney Road
          shippingInstruction:
            '@type': ShippingInstruction
            deliveryAttempts: 3
            deliverySpeed: SameDay
            labelMessage: FAO Ink Industries
            packageType: Bottle
            receiptConfirmation: SignatureRequired
            shippingType: largePackage
            signatureRequired: true
            signatureRequiredBy: adult
            instructionCharacteristic:
              - '@type': StringCharacteristic
                name: CustomerCall
                value: 'Yes, 1h before arriving'
          shippingOrderItem:
            - '@type': shippingOrderItem
              id: '1'
              action: add
              productOrderItem:
                '@type': ProductOrderItemRef
                ProductOrderHref: >-
                  https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
                productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
                productOrderItemId: '2'
              product:
                '@type': ProductRef
                href: >-
                  https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
                id: 552e4c10-a650-487b-b9c4-fbbb73879f24
                name: Apple Iphone
              quantity: 1
              productOffering:
                '@type': ProductOfferingRef
                id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
                name: Apple Iphone
                href: >-
                  https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
            - '@type': shippingOrderItem
              id: '2'
              action: add
              productOrderItem:
                '@type': ProductOrderItemRef
                ProductOrderHref: >-
                  https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
                productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
                productOrderItemId: '2'
              product:
                '@type': ProductRef
                href: >-
                  https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
                id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
                name: Plantronics X100
              quantity: 1
              productOffering:
                '@type': ProductOfferingRef
                id: f96744fd-d0d3-4abb-929c-9f68a527892b
                name: Plantronics X100
                href: >-
                  https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
            - '@type': shippingOrderItem
              id: '3'
              action: add
              productOrderItem:
                '@type': ProductOrderItemRef
                ProductOrderHref: >-
                  https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
                productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
                productOrderItemId: '2'
              product:
                '@type': ProductRef
                href: >-
                  https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
                id: 046acef8-d397-434a-9334-b57f47393db8
                name: Red 75
              quantity: 1
              productOffering:
                '@type': ProductOfferingRef
                id: 45f53a72-92a3-42f6-89cc-a04277f905af
                name: Red 75
                href: >-
                  https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
          shippingOrderPrice:
            '@type': Price
            dutyFreeAmount:
              unit: EUR
              value: 5
            percentage: 0
            taxIncludedAmount:
              unit: EUR
              value: 10
          shippingOrderOffering:
            '@type': ProductOfferingRef
            href: >-
              https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
            id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          state: acknowledged
          placeTo:
            '@type': RelatedPlaceRefOrValue
            role: installationAddress
            place:
              id: 8b103e6d-6ceb-459b-be59-5cec85732064
              href: >-
                https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
              '@referredType': GeographicAddress
              '@type': PlaceRef
      description: Here's an example of a request for retrieving shipping orders.
    ShippingOrder_retrieve_example_response:
      value:
        '@type': ShippingOrder
        id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
        href: >-
          https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              id: 93ba0fc0-abb4-44ed-a94d-ea2db5dc4b8d
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': shippingOrderItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': shippingOrderItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': shippingOrderItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: acknowledged
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: Here's an example of a request for retrieving a specific shipping order.
    CreateShippingOrder_request:
      value:
        '@type': ShippingOrder
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': ShippingOrderItemItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': ShippingOrderItemItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': ShippingOrderItemItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: acknowledged
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: >-
        POST ShippingOrder request example - only a subset of shipping order attributes are used in
        this example
    CreateShippingOrder_response:
      value:
        '@type': ShippingOrder
        id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
        href: >-
          https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              id: 327f6571-bc58-4068-a250-1284dfedb926
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': ShippingOrderItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': ShippingOrderItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': ShippingOrderItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: acknowledged
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: POST ShippingOrder response
    ShippingOrder_partialupdate_01_request:
      value:
        state: acknowledged
        '@type': ShippingOrder
      description: >-
        Here's an example of a request for patching a Shipping Order using application/json. In this
        example,  description is updated.
    ShippingOrder_partialupdate_01_response:
      value:
        '@type': ShippingOrder
        id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
        href: >-
          https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              id: d5e812e2-fd2e-47c0-ba00-bdab52b8335b
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': shippingOrderItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': shippingOrderItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': shippingOrderItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: acknowledged
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: Response message
    ShippingOrder_partialupdate_02_request:
      value:
        state: acknowledged
        '@type': ShippingOrderItemrder
      description: >-
        Here's an example of a request for patching a Shipping Order using merge-patch+json. In this
        example,  description is updated.
    ShippingOrder_partialupdate_02_response:
      value:
        '@type': ShippingOrder
        id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
        href: >-
          https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              id: d5e812e2-fd2e-47c0-ba00-bdab52b8335b
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': shippingOrderItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': shippingOrderItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': shippingOrderItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: acknowledged
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: Response message
    ShippingOrder_partialupdate_03_request:
      value:
        - op: replace
          path: /state
          value: inProgress
      description: >-
        Here's an example of a request for patching a Shipping Order using json-patch+json. In this
        example, description is updated.
    ShippingOrder_partialupdate_03_response:
      value:
        '@type': ShippingOrder
        id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
        href: >-
          https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              id: d5e812e2-fd2e-47c0-ba00-bdab52b8335b
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': shippingOrderItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': shippingOrderItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': shippingOrderItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: inProgress
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: Response message
    ShippingOrder_partialupdate_04_request:
      value:
        - op: replace
          path: '$.shippingOrderItem[?(@.id==''1'')].productOrderItem.productOrderItemId'
          value: '100'
      description: >-
        Here's an example of a request for patching a Shipping Order this time using
        json-patch-query+json. In this example, the RelatedParty role attribute is updated.
    ShippingOrder_partialupdate_04_response:
      value:
        '@type': ShippingOrder
        id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
        href: >-
          https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              id: d5e812e2-fd2e-47c0-ba00-bdab52b8335b
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': shippingOrderItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '100'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': shippingOrderItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': shippingOrderItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: acknowledged
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: Response message
    ShippingOrder_partialupdate_example04_request:
      value:
        state: acknowledged
        '@type': ShippingOrderItemrder
      description: >-
        Here's an example of a request for patching a Shipping Order using application/json. In this
        example,  description is updated.
    ShippingOrder_partialupdate_example04_response:
      value:
        '@type': ShippingOrder
        id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
        href: >-
          https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
        productOrderRef:
          '@type': ProductOrderRef
          id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
          href: >-
            https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Recepient
            partyOrPartyRole:
              id: d5e812e2-fd2e-47c0-ba00-bdab52b8335b
              '@type': Individual
              name: Joe Doe
              contactMedium:
                - '@type': PhoneContactMedium
                  contactMediumIdentifier: TelephoneNumber
                  preferred: true
                  validFor:
                    startDateTime: '2018-06-12T00:00:00Z'
                    endDateTime: '2019-01-01T00:00:00Z'
                  phoneNumber: 01 09 75 83 51
                - '@type': GeographicAddressContactMedium
                  postCode: OX11 6TR
                  city: Oxford
                  street1: 23 Borney Road
        shippingInstruction:
          '@type': ShippingInstruction
          deliveryAttempts: 3
          deliverySpeed: SameDay
          labelMessage: FAO Ink Industries
          packageType: Bottle
          receiptConfirmation: SignatureRequired
          shippingType: largePackage
          signatureRequired: true
          signatureRequiredBy: adult
          instructionCharacteristic:
            - '@type': StringCharacteristic
              name: CustomerCall
              value: 'Yes, 1h before arriving'
        shippingOrderItem:
          - '@type': shippingOrderItem
            id: '1'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
              id: 552e4c10-a650-487b-b9c4-fbbb73879f24
              name: Apple Iphone
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              name: Apple Iphone
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
          - '@type': shippingOrderItem
            id: '2'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
              name: Plantronics X100
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: f96744fd-d0d3-4abb-929c-9f68a527892b
              name: Plantronics X100
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
          - '@type': shippingOrderItem
            id: '3'
            action: add
            productOrderItem:
              '@type': ProductOrderItemRef
              ProductOrderHref: >-
                https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
              productOrderItemId: '2'
            product:
              '@type': ProductRef
              href: >-
                https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
              id: 046acef8-d397-434a-9334-b57f47393db8
              name: Red 75
            quantity: 1
            productOffering:
              '@type': ProductOfferingRef
              id: 45f53a72-92a3-42f6-89cc-a04277f905af
              name: Red 75
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
        shippingOrderPrice:
          '@type': Price
          dutyFreeAmount:
            unit: EUR
            value: 5
          percentage: 0
          taxIncludedAmount:
            unit: EUR
            value: 10
        shippingOrderOffering:
          '@type': ProductOfferingRef
          href: >-
            https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
          id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
        state: acknowledged
        placeTo:
          '@type': RelatedPlaceRefOrValue
          role: installationAddress
          place:
            id: 8b103e6d-6ceb-459b-be59-5cec85732064
            href: >-
              https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
            '@referredType': GeographicAddress
            '@type': PlaceRef
      description: Response message
    Create_request:
      value:
        correlationId: 1c8af9cd-847f-43ac-86de-0a40e6c51ca2
        description: ShippingOrderCreateEvent
        domain: EngagedParty
        eventId: 57e8b58e-6121-427f-9f38-03848fe5876d
        eventTime: '2024-08-25T12:21:36.704Z'
        eventType: ShippingOrderCreateEvent
        priority: '1'
        timeOcurred: '2024-08-25T12:21:32.568Z'
        title: ShippingOrderCreateEvent
        event:
          shippingOrder:
            '@type': shippingOrder
            id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
            href: >-
              https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
            productOrderRef:
              '@type': ProductOrderRef
              id: 48a28acb-9cf6-4255-8954-660eaa7ea37c
              href: >-
                https://example.com/tmf-api/productOrderingManagement/v5/productOrder/48a28acb-9cf6-4255-8954-660eaa7ea37c
            relatedParty:
              - '@type': RelatedPartyOrPartyRole
                role: Recepient
                partyOrPartyRole:
                  id: c18bddf9-1e8b-48a3-a635-bac930024fed
                  '@type': Individual
                  name: Joe Doe
                  contactMedium:
                    - '@type': PhoneContactMedium
                      contactMediumIdentifier: TelephoneNumber
                      preferred: true
                      validFor:
                        startDateTime: '2018-06-12T00:00:00Z'
                        endDateTime: '2019-01-01T00:00:00Z'
                      phoneNumber: 01 09 75 83 51
                    - '@type': GeographicAddressContactMedium
                      postCode: OX11 6TR
                      city: Oxford
                      street1: 23 Borney Road
            shippingInstruction:
              '@type': ShippingInstruction
              deliveryAttempts: 3
              deliverySpeed: SameDay
              labelMessage: FAO Ink Industries
              packageType: Bottle
              receiptConfirmation: SignatureRequired
              shippingType: largePackage
              signatureRequired: true
              signatureRequiredBy: adult
              instructionCharacteristic:
                - '@type': StringCharacteristic
                  name: CustomerCall
                  value: 'Yes, 1h before arriving'
            shippingOrderItem:
              - '@type': ShippingOrderItem
                id: '1'
                action: add
                productOrderItem:
                  '@type': ProductOrderItemRef
                  ProductOrderHref: >-
                    https://example.com/tmf-api/productOrder/v4/productOrder/14505b4c-2740-4546-9c3a-eea7c983d261
                  productOrderId: 14505b4c-2740-4546-9c3a-eea7c983d261
                  productOrderItemId: '2'
                product:
                  '@type': ProductRef
                  href: >-
                    https://example.com/tmf-api/productInventoryManagement/v5/product/552e4c10-a650-487b-b9c4-fbbb73879f24
                  id: 552e4c10-a650-487b-b9c4-fbbb73879f24
                  name: Apple Iphone
                quantity: 1
                productOffering:
                  '@type': ProductOfferingRef
                  id: 2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
                  name: Apple Iphone
                  href: >-
                    https://example.com/tmf-api/productCatalogManagement/v4/productOffering/2c3ec5b4-43a1-4d55-8b02-c292e577f6f9
              - '@type': ShippingOrderItem
                id: '2'
                action: add
                productOrderItem:
                  '@type': ProductOrderItemRef
                  ProductOrderHref: >-
                    https://example.com/tmf-api/productOrder/v4/productOrder/d63a2841-19b2-4730-9485-7c4d9d348565
                  productOrderId: d63a2841-19b2-4730-9485-7c4d9d348565
                  productOrderItemId: '2'
                product:
                  '@type': ProductRef
                  href: >-
                    https://example.com/tmf-api/productInventoryManagement/v5/product/c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
                  id: c70ba0ba-4cf4-457f-8700-d014d1cbe2f5
                  name: Plantronics X100
                quantity: 1
                productOffering:
                  '@type': ProductOfferingRef
                  id: f96744fd-d0d3-4abb-929c-9f68a527892b
                  name: Plantronics X100
                  href: >-
                    https://example.com/tmf-api/productCatalogManagement/v4/productOffering/f96744fd-d0d3-4abb-929c-9f68a527892b
              - '@type': ShippingOrderItem
                id: '3'
                action: add
                productOrderItem:
                  '@type': ProductOrderItemRef
                  ProductOrderHref: >-
                    https://example.com/tmf-api/productOrder/v4/productOrder/4b3c5916-6bc3-4f01-9402-6fc57e2db606
                  productOrderId: 4b3c5916-6bc3-4f01-9402-6fc57e2db606
                  productOrderItemId: '2'
                product:
                  '@type': ProductRef
                  href: >-
                    https://example.com/tmf-api/productInventoryManagement/v5/product/046acef8-d397-434a-9334-b57f47393db8
                  id: 046acef8-d397-434a-9334-b57f47393db8
                  name: Red 75
                quantity: 1
                productOffering:
                  '@type': ProductOfferingRef
                  id: 45f53a72-92a3-42f6-89cc-a04277f905af
                  name: Red 75
                  href: >-
                    https://example.com/tmf-api/productCatalogManagement/v4/productOffering/45f53a72-92a3-42f6-89cc-a04277f905af
            shippingOrderPrice:
              '@type': Price
              dutyFreeAmount:
                unit: EUR
                value: 5
              percentage: 0
              taxIncludedAmount:
                unit: EUR
                value: 10
            shippingOrderOffering:
              '@type': ProductOfferingRef
              href: >-
                https://example.com/tmf-api/productCatalogManagement/v4/productOffering/1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
              id: 1f5efe5b-b3c9-4307-844a-5a6a288ef7e5
            state: acknowledged
            placeTo:
              '@type': RelatedPlaceRefOrValue
              role: installationAddress
              place:
                id: 8b103e6d-6ceb-459b-be59-5cec85732064
                href: >-
                  https://example.com/geographicAddressManagement/v5/geographicAddress/8b103e6d-6ceb-459b-be59-5cec85732064
                '@referredType': GeographicAddress
                '@type': PlaceRef
        reportingSystem:
          id: '409'
          name: APP-675
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '4'
          name: APP-374
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ShippingOrderCreateEvent
      description: Message example for ShippingOrderCreateEvent event
    AttributeValueChange_request:
      value:
        correlationId: 180874f1-6ea1-4391-9c99-a12f6cde93e6
        description: ShippingOrderAttributeValueChangeEvent
        domain: EngagedParty
        eventId: 31cedf69-3b50-42bb-b116-ac37d82a90f1
        eventTime: '2024-08-25T12:21:36.714Z'
        eventType: ShippingOrderAttributeValueChangeEvent
        priority: '3'
        timeOcurred: '2024-08-25T12:21:36.133Z'
        title: ShippingOrderAttributeValueChangeEvent
        event:
          shippingOrder:
            id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
            href: >-
              https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
            '@type': ShippingOrder
            shippingInstruction:
              '@type': ShippingInstruction
              deliverySpeed: SameDay
        '@baseType': Event
        '@type': ShippingOrderAttributeValueChangeEvent
      description: Message example for ShippingOrderAttributeValueChangeEvent event
    Delete_request:
      value:
        correlationId: d697938a-374e-435d-ae29-e5c198ddced4
        description: ShippingOrderDeleteEvent
        domain: EngagedParty
        eventId: f4ea6f37-60d3-451d-8a4f-183fde2e19f0
        eventTime: '2024-08-25T12:21:36.724Z'
        eventType: ShippingOrderDeleteEvent
        priority: '4'
        timeOcurred: '2024-08-25T12:21:36.363Z'
        title: ShippingOrderDeleteEvent
        event:
          shippingOrder:
            href: >-
              https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
            id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
            '@type': shippingOrder
        reportingSystem:
          id: '409'
          name: APP-675
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '4'
          name: APP-374
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ShippingOrderDeleteEvent
      description: Message example for ShippingOrderDeleteEvent event
    StateChange_request:
      value:
        correlationId: 9800ed1f-1315-4594-accf-eae6f168d76f
        description: ShippingOrderStateChangeEvent
        domain: EngagedParty
        eventId: ec6d33c0-2b61-422b-98ce-0026aaf92f14
        eventTime: '2022-08-25T12:21:36.678Z'
        eventType: ShippingOrderStateChangeEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:21:28.377Z'
        title: ShippingOrderStateChangeEvent
        event:
          shippingOrder:
            href: >-
              https://example.com/tmf-api/shippingOrderManagement/v5/shippingOrder/37b90cbc-35c8-40de-bd56-4b3f143756a0
            id: 37b90cbc-35c8-40de-bd56-4b3f143756a0
            state: completed
            '@type': shippingOrder
        reportingSystem:
          id: '409'
          name: APP-675
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '4'
          name: APP-374
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ShippingOrderStateChangeEvent
      description: Message example for ShippingOrderStateChangeEvent event with ?fields=state property only
