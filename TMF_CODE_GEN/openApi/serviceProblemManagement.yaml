openapi: 3.0.1
info:
  title: Service Problem Management
  description: >-
    TMF656 - Service Problem Management. Service Problem Management API is used to manage problems
    in the Service domain. It can retrieve a Problem or a collection of Problems based on filter
    criteria; Partial update of Problems (including updating rules); Create a Problem (including
    default values and creation rules); Delete a Problem (for administration purposes) and Manage
    the notification of events
  version: 5.0.0
servers:
  - url: 'https://serverRoot'
tags:
  - name: serviceProblem
    description: Operations for ServiceProblem Resource
  - name: serviceProblemEventRecord
    description: Operations for ServiceProblemEventRecord Resource
  - name: problemAcknowledgement
    description: Operations for ProblemAcknowledgement Resource
  - name: problemUnacknowledgement
    description: Operations for ProblemUnacknowledgement Resource
  - name: problemGroup
    description: Operations for ProblemGroup Resource
  - name: problemUngroup
    description: Operations for ProblemUngroup Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/problemAcknowledgementCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemAcknowledgementCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        ProblemAcknowledgementCreateEvent
      operationId: problemAcknowledgementCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemAcknowledgementCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemAcknowledgementDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemAcknowledgementDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        ProblemAcknowledgementDeleteEvent
      operationId: problemAcknowledgementDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemAcknowledgementDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemAcknowledgementStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemAcknowledgementStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ProblemAcknowledgementStateChangeEvent
      operationId: problemAcknowledgementStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemAcknowledgementStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemGroupCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemGroupCreateEvent
      description: Example of a client listener for receiving the notification ProblemGroupCreateEvent
      operationId: problemGroupCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemGroupCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemGroupDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemGroupDeleteEvent
      description: Example of a client listener for receiving the notification ProblemGroupDeleteEvent
      operationId: problemGroupDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemGroupDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemGroupStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemGroupStateChangeEvent
      description: Example of a client listener for receiving the notification ProblemGroupStateChangeEvent
      operationId: problemGroupStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemGroupStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemUnacknowledgementCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemUnacknowledgementCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        ProblemUnacknowledgementCreateEvent
      operationId: problemUnacknowledgementCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemUnacknowledgementCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemUnacknowledgementDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemUnacknowledgementDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        ProblemUnacknowledgementDeleteEvent
      operationId: problemUnacknowledgementDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemUnacknowledgementDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemUnacknowledgementStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemUnacknowledgementStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ProblemUnacknowledgementStateChangeEvent
      operationId: problemUnacknowledgementStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemUnacknowledgementStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemUngroupCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemUngroupCreateEvent
      description: Example of a client listener for receiving the notification ProblemUngroupCreateEvent
      operationId: problemUngroupCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemUngroupCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemUngroupDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemUngroupDeleteEvent
      description: Example of a client listener for receiving the notification ProblemUngroupDeleteEvent
      operationId: problemUngroupDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemUngroupDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/problemUngroupStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ProblemUngroupStateChangeEvent
      description: Example of a client listener for receiving the notification ProblemUngroupStateChangeEvent
      operationId: problemUngroupStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ProblemUngroupStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceProblemAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceProblemAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceProblemAttributeValueChangeEvent
      operationId: serviceProblemAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceProblemAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceProblemCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceProblemCreateEvent
      description: Example of a client listener for receiving the notification ServiceProblemCreateEvent
      operationId: serviceProblemCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceProblemCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceProblemDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceProblemDeleteEvent
      description: Example of a client listener for receiving the notification ServiceProblemDeleteEvent
      operationId: serviceProblemDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceProblemDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceProblemInformationRequiredEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceProblemInformationRequiredEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceProblemInformationRequiredEvent
      operationId: serviceProblemInformationRequiredEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceProblemInformationRequiredEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceProblemStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceProblemStateChangeEvent
      description: Example of a client listener for receiving the notification ServiceProblemStateChangeEvent
      operationId: serviceProblemStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceProblemStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /problemAcknowledgement:
    get:
      tags:
        - problemAcknowledgement
      summary: List or find ProblemAcknowledgement objects
      description: List or find ProblemAcknowledgement objects
      operationId: listProblemAcknowledgement
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemAcknowledgementArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - problemAcknowledgement
      summary: Creates a ProblemAcknowledgement
      description: This operation creates a ProblemAcknowledgement entity.
      operationId: createProblemAcknowledgement
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ProblemAcknowledgement_FVO'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemAcknowledgement_Task'
        '201':
          $ref: '#/components/responses/201ProblemAcknowledgement'
        '202':
          description: Accepted
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  '/problemAcknowledgement/{id}':
    get:
      tags:
        - problemAcknowledgement
      summary: Retrieves a ProblemAcknowledgement by ID
      description: >-
        This operation retrieves a ProblemAcknowledgement entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveProblemAcknowledgement
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemAcknowledgement_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /problemGroup:
    get:
      tags:
        - problemGroup
      summary: List or find ProblemGroup objects
      description: List or find ProblemGroup objects
      operationId: listProblemGroup
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemGroupArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - problemGroup
      summary: Creates a ProblemGroup
      description: This operation creates a ProblemGroup entity.
      operationId: createProblemGroup
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ProblemGroup_FVO'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemGroup_Task'
        '201':
          $ref: '#/components/responses/201ProblemGroup'
        '202':
          description: Accepted
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  '/problemGroup/{id}':
    get:
      tags:
        - problemGroup
      summary: Retrieves a ProblemGroup by ID
      description: >-
        This operation retrieves a ProblemGroup entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveProblemGroup
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemGroup_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /problemUnacknowledgement:
    get:
      tags:
        - problemUnacknowledgement
      summary: List or find ProblemUnacknowledgement objects
      description: List or find ProblemUnacknowledgement objects
      operationId: listProblemUnacknowledgement
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemUnacknowledgementArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - problemUnacknowledgement
      summary: Creates a ProblemUnacknowledgement
      description: This operation creates a ProblemUnacknowledgement entity.
      operationId: createProblemUnacknowledgement
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ProblemUnacknowledgement_FVO'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemUnacknowledgement_Task'
        '201':
          $ref: '#/components/responses/201ProblemUnacknowledgement'
        '202':
          description: Accepted
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  '/problemUnacknowledgement/{id}':
    get:
      tags:
        - problemUnacknowledgement
      summary: Retrieves a ProblemUnacknowledgement by ID
      description: >-
        This operation retrieves a ProblemUnacknowledgement entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveProblemUnacknowledgement
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemUnacknowledgement_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /problemUngroup:
    get:
      tags:
        - problemUngroup
      summary: List or find ProblemUngroup objects
      description: List or find ProblemUngroup objects
      operationId: listProblemUngroup
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemUngroupArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - problemUngroup
      summary: Creates a ProblemUngroup
      description: This operation creates a ProblemUngroup entity.
      operationId: createProblemUngroup
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ProblemUngroup_FVO'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemUngroup_Task'
        '201':
          $ref: '#/components/responses/201ProblemUngroup'
        '202':
          description: Accepted
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
  '/problemUngroup/{id}':
    get:
      tags:
        - problemUngroup
      summary: Retrieves a ProblemUngroup by ID
      description: >-
        This operation retrieves a ProblemUngroup entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveProblemUngroup
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ProblemUngroup_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /serviceProblem:
    get:
      tags:
        - serviceProblem
      summary: List or find ServiceProblem objects
      description: List or find ServiceProblem objects
      operationId: listServiceProblem
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceProblemArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - serviceProblem
      summary: Creates a ServiceProblem
      description: This operation creates a ServiceProblem entity.
      operationId: createServiceProblem
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceProblem_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ServiceProblem'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/serviceProblem/{id}':
    get:
      tags:
        - serviceProblem
      summary: Retrieves a ServiceProblem by ID
      description: >-
        This operation retrieves a ServiceProblem entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveServiceProblem
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceProblem_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - serviceProblem
      summary: Updates partially a ServiceProblem
      description: This operation updates partially a ServiceProblem entity.
      operationId: patchServiceProblem
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceProblem_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceProblem_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - serviceProblem
      summary: Deletes a ServiceProblem
      description: This operation deletes a ServiceProblem entity.
      operationId: deleteServiceProblem
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /serviceProblemEventRecord:
    get:
      tags:
        - serviceProblemEventRecord
      summary: List or find ServiceProblemEventRecord objects
      description: List or find ServiceProblemEventRecord objects
      operationId: listServiceProblemEventRecord
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceProblemEventRecordArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/serviceProblemEventRecord/{id}':
    get:
      tags:
        - serviceProblemEventRecord
      summary: Retrieves a ServiceProblemEventRecord by ID
      description: >-
        This operation retrieves a ServiceProblemEventRecord entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveServiceProblemEventRecord
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceProblemEventRecord_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    Any:
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          Any: '#/components/schemas/Any'
    Any_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          Any: '#/components/schemas/Any_FVO'
    Any_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          Any: '#/components/schemas/Any_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BaseEvent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_FVO'
    BaseEvent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_MVO'
    CalendarPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod'
    CalendarPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod_FVO'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
          required:
            - status
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_FVO'
    CalendarPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod_MVO'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRefOrValue:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity'
          EntityRef: '#/components/schemas/EntityRef'
          TroubleTicketRef: '#/components/schemas/TroubleTicketRef'
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRelationship:
      type: object
      description: A uni-directionmal relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    ErrorMessage:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: represents an Error
          properties:
            code:
              type: string
              description: error code
            reason:
              type: string
              description: Explanation of the reason for the error
            message:
              type: string
              description: More details and corrective actions related to the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            referenceError:
              type: string
              description: URI of documentation describing the error
      discriminator:
        propertyName: '@type'
        mapping:
          ErrorMessage: '#/components/schemas/ErrorMessage'
    ErrorMessage_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: represents an Error
          properties:
            code:
              type: string
              description: error code
            reason:
              type: string
              description: Explanation of the reason for the error
            message:
              type: string
              description: More details and corrective actions related to the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            referenceError:
              type: string
              description: URI of documentation describing the error
      discriminator:
        propertyName: '@type'
        mapping:
          ErrorMessage: '#/components/schemas/ErrorMessage_FVO'
    ErrorMessage_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: represents an Error
          properties:
            code:
              type: string
              description: error code
            reason:
              type: string
              description: Explanation of the reason for the error
            message:
              type: string
              description: More details and corrective actions related to the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            referenceError:
              type: string
              description: URI of documentation describing the error
      discriminator:
        propertyName: '@type'
        mapping:
          ErrorMessage: '#/components/schemas/ErrorMessage_MVO'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    EventRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Events linked with service problem
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            eventTime:
              type: string
              format: date-time
              description: Time the event occurred
      discriminator:
        propertyName: '@type'
        mapping:
          EventRef: '#/components/schemas/EventRef'
    EventRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Events linked with service problem
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            eventTime:
              type: string
              format: date-time
              description: Time the event occurred
      discriminator:
        propertyName: '@type'
        mapping:
          EventRef: '#/components/schemas/EventRef_FVO'
    EventRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Events linked with service problem
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            eventTime:
              type: string
              format: date-time
              description: Time the event occurred
      discriminator:
        propertyName: '@type'
        mapping:
          EventRef: '#/components/schemas/EventRef_MVO'
    Event_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef_FVO'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Event_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    Feature:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature'
    FeatureRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship'
    FeatureRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_FVO'
    FeatureRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_MVO'
    Feature_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship_FVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_FVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_FVO'
    Feature_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_MVO'
    GeographicAddress:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_FVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_FVO'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress_FVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_MVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_MVO'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress_MVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicLocation:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
    GeographicLocationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicLocationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
    GeographicLocationRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicLocationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
    GeographicLocationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocation_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
          required:
            - '@type'
    GeographicLocation_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
    GeographicSite:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSiteRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSite_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_FVO'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSite_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_MVO'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSubAddress:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
          required:
            - subUnitNumber
            - subUnitType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
    GeographicSubAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_FVO'
    GeographicSubAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_MVO'
    HourPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod'
    HourPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_FVO'
    HourPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_MVO'
    ImpactPattern:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Define the patterns of impact (optional), such as other service characteristics- Used
            when defining impact through another pattern than the pre-defined attributes
          properties:
            description:
              type: string
              description: Basic description of the impact pattern
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: >-
                A generic list of any type of elements. Used for extensions or loose element
                encapsulation from other namespaces
      discriminator:
        propertyName: '@type'
        mapping:
          ImpactPattern: '#/components/schemas/ImpactPattern'
    ImpactPattern_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Define the patterns of impact (optional), such as other service characteristics- Used
            when defining impact through another pattern than the pre-defined attributes
          properties:
            description:
              type: string
              description: Basic description of the impact pattern
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: >-
                A generic list of any type of elements. Used for extensions or loose element
                encapsulation from other namespaces
      discriminator:
        propertyName: '@type'
        mapping:
          ImpactPattern: '#/components/schemas/ImpactPattern_FVO'
    ImpactPattern_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Define the patterns of impact (optional), such as other service characteristics- Used
            when defining impact through another pattern than the pre-defined attributes
          properties:
            description:
              type: string
              description: Basic description of the impact pattern
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: >-
                A generic list of any type of elements. Used for extensions or loose element
                encapsulation from other namespaces
      discriminator:
        propertyName: '@type'
        mapping:
          ImpactPattern: '#/components/schemas/ImpactPattern_MVO'
    InformationRequiredArray:
      items:
        $ref: '#/components/schemas/JsonPatch'
      minItems: 1
      type: array
      description: InformationRequiredArray generic structure
    Intent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent'
    IntentExpression:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression'
    IntentExpression_FVO:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_FVO'
    IntentExpression_MVO:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_MVO'
    IntentRef:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
    IntentRefOrValue:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent'
    IntentRef_FVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_FVO'
    IntentRef_MVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
    Intent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef_FVO'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression_FVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_FVO'
    Intent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_MVO'
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_FVO'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    OrderItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the product
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    Place:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicAddress: '#/components/schemas/GeographicAddress'
    PlaceRef:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicAddress'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO'
        - $ref: '#/components/schemas/PlaceRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
    PlaceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO'
        - $ref: '#/components/schemas/PlaceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    PlaceRef_FVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
    PlaceRef_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    Place_FVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
    Place_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
    PolicyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef'
    PolicyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
    PolicyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_MVO'
    ProblemAcknowledgement:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource that requests acknowledgement of problems by the problem handler.
          properties:
            ackProblem:
              description: 'The problems that were acknowledged, populated in the output to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            trackingRecord:
              $ref: '#/components/schemas/TrackingRecord'
            problem:
              description: 'The problems to be acknowledged, relevant in the input to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            state:
              type: string
              description: >-
                State of the Problem Acknowledgement task (acknowledged, inProgress,
                terminatedWithError, done)
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemAcknowledgement: '#/components/schemas/ProblemAcknowledgement'
    ProblemAcknowledgementCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemAcknowledgementCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemAcknowledgementCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemAcknowledgementCreateEvent: '#/components/schemas/ProblemAcknowledgementCreateEvent'
    ProblemAcknowledgementCreateEventPayload:
      type: object
      description: ProblemAcknowledgementCreateEventPayload generic structure
      properties:
        problemAcknowledgement:
          $ref: '#/components/schemas/ProblemAcknowledgement'
    ProblemAcknowledgementDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemAcknowledgementDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemAcknowledgementDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemAcknowledgementDeleteEvent: '#/components/schemas/ProblemAcknowledgementDeleteEvent'
    ProblemAcknowledgementDeleteEventPayload:
      type: object
      description: ProblemAcknowledgementDeleteEventPayload generic structure
      properties:
        problemAcknowledgement:
          $ref: '#/components/schemas/ProblemAcknowledgement'
    ProblemAcknowledgementStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemAcknowledgementStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemAcknowledgementStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemAcknowledgementStateChangeEvent: '#/components/schemas/ProblemAcknowledgementStateChangeEvent'
    ProblemAcknowledgementStateChangeEventPayload:
      type: object
      description: ProblemAcknowledgementStateChangeEventPayload generic structure
      properties:
        problemAcknowledgement:
          $ref: '#/components/schemas/ProblemAcknowledgement'
    ProblemAcknowledgement_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Task resource that requests acknowledgement of problems by the problem handler.
          properties:
            ackProblem:
              description: 'The problems that were acknowledged, populated in the output to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            trackingRecord:
              $ref: '#/components/schemas/TrackingRecord_FVO'
            problem:
              description: 'The problems to be acknowledged, relevant in the input to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            state:
              type: string
              description: >-
                State of the Problem Acknowledgement task (acknowledged, inProgress,
                terminatedWithError, done)
          required:
            - problem
            - '@type'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemAcknowledgement: '#/components/schemas/ProblemAcknowledgement_FVO'
    ProblemAcknowledgement_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Task resource that requests acknowledgement of problems by the problem handler.
          properties:
            ackProblem:
              description: 'The problems that were acknowledged, populated in the output to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            trackingRecord:
              $ref: '#/components/schemas/TrackingRecord'
            problem:
              description: 'The problems to be acknowledged, relevant in the input to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            state:
              type: string
              description: >-
                State of the Problem Acknowledgement task (acknowledged, inProgress,
                terminatedWithError, done)
          required:
            - problem
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemAcknowledgement: '#/components/schemas/ProblemAcknowledgement_MVO'
    ProblemGroup:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Task resource that requests Service Problems to be grouped together into a parent and
            set of children
          properties:
            childProblem:
              type: array
              description: List of problems to be grouped under a parent problem
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            parentProblem:
              $ref: '#/components/schemas/ServiceProblemRef'
            state:
              type: string
              description: >-
                State of the Problem Group task (acknowledged, inProgress, terminatedWithError,
                done)
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemGroup: '#/components/schemas/ProblemGroup'
    ProblemGroupCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemGroupCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemGroupCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemGroupCreateEvent: '#/components/schemas/ProblemGroupCreateEvent'
    ProblemGroupCreateEventPayload:
      type: object
      description: ProblemGroupCreateEventPayload generic structure
      properties:
        problemGroup:
          $ref: '#/components/schemas/ProblemGroup'
    ProblemGroupDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemGroupDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemGroupDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemGroupDeleteEvent: '#/components/schemas/ProblemGroupDeleteEvent'
    ProblemGroupDeleteEventPayload:
      type: object
      description: ProblemGroupDeleteEventPayload generic structure
      properties:
        problemGroup:
          $ref: '#/components/schemas/ProblemGroup'
    ProblemGroupStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemGroupStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemGroupStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemGroupStateChangeEvent: '#/components/schemas/ProblemGroupStateChangeEvent'
    ProblemGroupStateChangeEventPayload:
      type: object
      description: ProblemGroupStateChangeEventPayload generic structure
      properties:
        problemGroup:
          $ref: '#/components/schemas/ProblemGroup'
    ProblemGroup_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Task resource that requests Service Problems to be grouped together into a parent and
            set of children
          properties:
            childProblem:
              type: array
              description: List of problems to be grouped under a parent problem
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            parentProblem:
              $ref: '#/components/schemas/ServiceProblemRef_FVO'
            state:
              type: string
              description: >-
                State of the Problem Group task (acknowledged, inProgress, terminatedWithError,
                done)
          required:
            - childProblem
            - parentProblem
            - '@type'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemGroup: '#/components/schemas/ProblemGroup_FVO'
    ProblemGroup_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Task resource that requests Service Problems to be grouped together into a parent and
            set of children
          properties:
            childProblem:
              type: array
              description: List of problems to be grouped under a parent problem
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            parentProblem:
              $ref: '#/components/schemas/ServiceProblemRef_MVO'
            state:
              type: string
              description: >-
                State of the Problem Group task (acknowledged, inProgress, terminatedWithError,
                done)
          required:
            - childProblem
            - parentProblem
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemGroup: '#/components/schemas/ProblemGroup_MVO'
    ProblemUnacknowledgement:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Task resource that requests unacknowledgement of problems, rolling back the status of
            the problems from Acknowledged to Submitted.
          properties:
            unackProblem:
              description: 'The problems that were unacknowledged, populated in the output to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            trackingRecord:
              $ref: '#/components/schemas/TrackingRecord'
            problem:
              description: 'The problems to be unacknowledged, relevant in the input to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            state:
              type: string
              description: >-
                State of the Problem Unacknowledgement task (acknowledged, inProgress,
                terminatedWithError, done)
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUnacknowledgement: '#/components/schemas/ProblemUnacknowledgement'
    ProblemUnacknowledgementCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemUnacknowledgementCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemUnacknowledgementCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUnacknowledgementCreateEvent: '#/components/schemas/ProblemUnacknowledgementCreateEvent'
    ProblemUnacknowledgementCreateEventPayload:
      type: object
      description: ProblemUnacknowledgementCreateEventPayload generic structure
      properties:
        problemUnacknowledgement:
          $ref: '#/components/schemas/ProblemUnacknowledgement'
    ProblemUnacknowledgementDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemUnacknowledgementDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemUnacknowledgementDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUnacknowledgementDeleteEvent: '#/components/schemas/ProblemUnacknowledgementDeleteEvent'
    ProblemUnacknowledgementDeleteEventPayload:
      type: object
      description: ProblemUnacknowledgementDeleteEventPayload generic structure
      properties:
        problemUnacknowledgement:
          $ref: '#/components/schemas/ProblemUnacknowledgement'
    ProblemUnacknowledgementStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemUnacknowledgementStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemUnacknowledgementStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUnacknowledgementStateChangeEvent: '#/components/schemas/ProblemUnacknowledgementStateChangeEvent'
    ProblemUnacknowledgementStateChangeEventPayload:
      type: object
      description: ProblemUnacknowledgementStateChangeEventPayload generic structure
      properties:
        problemUnacknowledgement:
          $ref: '#/components/schemas/ProblemUnacknowledgement'
    ProblemUnacknowledgement_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Task resource that requests unacknowledgement of problems, rolling back the status of
            the problems from Acknowledged to Submitted.
          properties:
            unackProblem:
              description: 'The problems that were unacknowledged, populated in the output to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            trackingRecord:
              $ref: '#/components/schemas/TrackingRecord_FVO'
            problem:
              description: 'The problems to be unacknowledged, relevant in the input to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            state:
              type: string
              description: >-
                State of the Problem Unacknowledgement task (acknowledged, inProgress,
                terminatedWithError, done)
          required:
            - problem
            - '@type'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUnacknowledgement: '#/components/schemas/ProblemUnacknowledgement_FVO'
    ProblemUnacknowledgement_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Task resource that requests unacknowledgement of problems, rolling back the status of
            the problems from Acknowledged to Submitted.
          properties:
            unackProblem:
              description: 'The problems that were unacknowledged, populated in the output to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            trackingRecord:
              $ref: '#/components/schemas/TrackingRecord'
            problem:
              description: 'The problems to be unacknowledged, relevant in the input to this task'
              type: array
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            state:
              type: string
              description: >-
                State of the Problem Unacknowledgement task (acknowledged, inProgress,
                terminatedWithError, done)
          required:
            - problem
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUnacknowledgement: '#/components/schemas/ProblemUnacknowledgement_MVO'
    ProblemUngroup:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Task resource that requests Service Problems to be ungrouped from a parent
          properties:
            childProblem:
              type: array
              description: List of problems to be ungrouped from a parent problem
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            parentProblem:
              $ref: '#/components/schemas/ServiceProblemRef'
            state:
              type: string
              description: >-
                State of the Problem Ungroup task (acknowledged, inProgress, terminatedWithError,
                done)
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUngroup: '#/components/schemas/ProblemUngroup'
    ProblemUngroupCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemUngroupCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemUngroupCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUngroupCreateEvent: '#/components/schemas/ProblemUngroupCreateEvent'
    ProblemUngroupCreateEventPayload:
      type: object
      description: ProblemUngroupCreateEventPayload generic structure
      properties:
        problemGroup:
          $ref: '#/components/schemas/ProblemUngroup'
    ProblemUngroupDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemUngroupDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemUngroupDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUngroupDeleteEvent: '#/components/schemas/ProblemUngroupDeleteEvent'
    ProblemUngroupDeleteEventPayload:
      type: object
      description: ProblemUngroupDeleteEventPayload generic structure
      properties:
        problemGroup:
          $ref: '#/components/schemas/ProblemUngroup'
    ProblemUngroupStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ProblemUngroupStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ProblemUngroupStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUngroupStateChangeEvent: '#/components/schemas/ProblemUngroupStateChangeEvent'
    ProblemUngroupStateChangeEventPayload:
      type: object
      description: ProblemUngroupStateChangeEventPayload generic structure
      properties:
        problemGroup:
          $ref: '#/components/schemas/ProblemUngroup'
    ProblemUngroup_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Task resource that requests Service Problems to be ungrouped from a parent
          properties:
            childProblem:
              type: array
              description: List of problems to be ungrouped from a parent problem
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            parentProblem:
              $ref: '#/components/schemas/ServiceProblemRef_FVO'
            state:
              type: string
              description: >-
                State of the Problem Ungroup task (acknowledged, inProgress, terminatedWithError,
                done)
          required:
            - childProblem
            - parentProblem
            - '@type'
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUngroup: '#/components/schemas/ProblemUngroup_FVO'
    ProblemUngroup_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Task resource that requests Service Problems to be ungrouped from a parent
          properties:
            childProblem:
              type: array
              description: List of problems to be ungrouped from a parent problem
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            parentProblem:
              $ref: '#/components/schemas/ServiceProblemRef_MVO'
            state:
              type: string
              description: >-
                State of the Problem Ungroup task (acknowledged, inProgress, terminatedWithError,
                done)
          required:
            - childProblem
            - parentProblem
      discriminator:
        propertyName: '@type'
        mapping:
          ProblemUngroup: '#/components/schemas/ProblemUngroup_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedEntity:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity'
    RelatedEntityRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue'
    RelatedEntityRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_FVO'
    RelatedEntityRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_MVO'
    RelatedEntity_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef_FVO'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_FVO'
    RelatedEntity_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'A reference to an entity, where the type of the entity is not known in advance.'
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntity: '#/components/schemas/RelatedEntity_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    RelatedPlaceRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
    RelatedPlaceRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_FVO'
          required:
            - role
            - place
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
    RelatedPlaceRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
    RelatedServiceOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem'
    RelatedServiceOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem_FVO'
    RelatedServiceOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem_MVO'
    ResourceAlarmRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: A set of alarm ids identifying the alarms that are underlying this problem.
          properties:
            changeRequest:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceAlarmRef: '#/components/schemas/ResourceAlarmRef'
    ResourceAlarmRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: A set of alarm ids identifying the alarms that are underlying this problem.
          properties:
            changeRequest:
              $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceAlarmRef: '#/components/schemas/ResourceAlarmRef_FVO'
    ResourceAlarmRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: A set of alarm ids identifying the alarms that are underlying this problem.
          properties:
            changeRequest:
              $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceAlarmRef: '#/components/schemas/ResourceAlarmRef_MVO'
    ResourceRef:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
    ResourceRef_FVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_FVO'
    ResourceRef_MVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
    SLAViolationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          SLAViolationRef: '#/components/schemas/SLAViolationRef'
    SLAViolationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          SLAViolationRef: '#/components/schemas/SLAViolationRef_FVO'
    SLAViolationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          SLAViolationRef: '#/components/schemas/SLAViolationRef_MVO'
    Service:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service'
    ServiceOperatingStatusType:
      enum:
        - pending
        - configured
        - starting
        - running
        - degraded
        - failed
        - limited
        - stopping
        - stopped
        - unknown
      type: string
      description: Valid values for the Operating status of the service
    ServiceProblem:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The problem information for Middle B which is abstracted in the service layer from the
            issued event information by First B
          properties:
            affectedLocation:
              type: array
              description: >-
                A list of the locations affected by the problem. At least one of affectedResource,
                affectedService or affectedLocation should be present.
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            affectedNumberOfServices:
              type: integer
              description: Number of affected services
            affectedResource:
              type: array
              description: >-
                A list of the resources affected by the problem. At least one of affectedResource,
                affectedService or affectedLocation should be present.
              items:
                $ref: '#/components/schemas/ResourceRef'
            affectedService:
              type: array
              description: >-
                List of affected services. At least one of affectedResource, affectedService or
                affectedLocation should be present.
              items:
                $ref: '#/components/schemas/ServiceRef'
            note:
              type: array
              description: A list of comments or notes made on the problem
              items:
                $ref: '#/components/schemas/Note'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            name:
              type: string
              description: Name of the Service Problem
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            firstAlert:
              $ref: '#/components/schemas/RelatedEntity'
            impactImportanceFactor:
              type: string
              description: >-
                Impact Importance is characterized by an Impact Importance Factor: overall
                importance of the impact of all the affected services, e.g. 0 (zero impact) to 100
                (worst impact). The Impact Importance is a calculated field which is set by the OSS
                determining the impact.
            impactPattern:
              $ref: '#/components/schemas/ImpactPattern'
            originatingSystem:
              type: string
              description: Indicates where the problem was generated
            parentProblem:
              type: array
              description: The parent problem to which this problem is attached.
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            problemEscalation:
              type: string
              description: >-
                Indicates if this service problem has been escalated or not. Possible values are 0
                to 10. A value of zero means no escalation. The meanings of values 1-10 are to be
                determined by the user of the interface, but they show increasing levels of
                escalation.
            relatedEvent:
              type: array
              description: List of events associated to this problem
              items:
                $ref: '#/components/schemas/EventRef'
            relatedEntity:
              type: array
              description: List of entities associated with this problem
              items:
                $ref: '#/components/schemas/RelatedEntity'
            responsibleParty:
              $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            relatedParty:
              type: array
              description: List of parties or party roles playing a role within the service problem
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            rootCauseResource:
              type: array
              description: >-
                Resource(s) that are associated to the underlying service problems that are the Root
                Cause of this one if any (used only if applicable).
              items:
                $ref: '#/components/schemas/ResourceRef'
            rootCauseService:
              type: array
              description: >-
                Service(s) that are associated to the underlying service problems that are the Root
                Cause of this one if any (used only if applicable)
              items:
                $ref: '#/components/schemas/ServiceRef'
            resolutionDate:
              type: string
              format: date-time
              description: Time the problem was resolved
            status:
              $ref: '#/components/schemas/ServiceProblemStateType'
            statusChangeDate:
              type: string
              format: date-time
              description: Time the problem was last status changed
            statusChangeReason:
              type: string
              description: The reason of state change
            lastUpdate:
              type: string
              format: date-time
              description: Time the problem was last changed
            creationDate:
              type: string
              format: date-time
              description: Time the problem was created
            trackingRecord:
              type: array
              description: >-
                List of tracking records that allow the tracking of modifications on the problem.The
                tracking records should not be embedded in the problem to allow retrieving the
                problem without the tracking records
              items:
                $ref: '#/components/schemas/TrackingRecord'
            underlyingAlarm:
              type: array
              description: A list of alarms underlying this problem.
              items:
                $ref: '#/components/schemas/ResourceAlarmRef'
            slaViolation:
              type: array
              description: A List of SLA violations associated with this problem.
              items:
                $ref: '#/components/schemas/SLAViolationRef'
            troubleTicket:
              type: array
              description: A list of trouble tickets associated with this problem.
              items:
                $ref: '#/components/schemas/TroubleTicketRef'
            underlyingProblem:
              type: array
              description: >-
                A list of underlying problems. Relevant only if this problem is derived from other
                problems.
              items:
                $ref: '#/components/schemas/ServiceProblemRef'
            errorMessage:
              type: array
              description: >-
                A list of the error(s) associated to the Service Problem. This object is used for
                any asynchronous errors and error information to be shared with consumer.
              items:
                $ref: '#/components/schemas/ErrorMessage'
            category:
              type: string
              description: >-
                Classifier for the problem. Settable. For example, this is used for distinguish the
                category of problem originator in [role].[category] format. Example:
                serviceProvider.declarer, supplier.originated, system.originated
            description:
              type: string
              description: Free form text describing the Service Problem
            priority:
              type: integer
              description: >-
                An indication varying from 1 (highest) to 10 (lowest) of how important it is for the
                service provider to correct the Service Problem.
            reason:
              type: string
              description: Free text or optionally structured text. It can be Unknown.
            originatorParty:
              $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblem: '#/components/schemas/ServiceProblem'
    ServiceProblemAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceProblemAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceProblemAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemAttributeValueChangeEvent: '#/components/schemas/ServiceProblemAttributeValueChangeEvent'
    ServiceProblemAttributeValueChangeEventPayload:
      type: object
      description: ServiceProblemAttributeValueChangeEventPayload generic structure
      properties:
        serviceProblem:
          $ref: '#/components/schemas/ServiceProblem'
    ServiceProblemCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceProblemCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceProblemCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemCreateEvent: '#/components/schemas/ServiceProblemCreateEvent'
    ServiceProblemCreateEventPayload:
      type: object
      description: ServiceProblemCreateEventPayload generic structure
      properties:
        serviceProblem:
          $ref: '#/components/schemas/ServiceProblem'
    ServiceProblemDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceProblemDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceProblemDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemDeleteEvent: '#/components/schemas/ServiceProblemDeleteEvent'
    ServiceProblemDeleteEventPayload:
      type: object
      description: ServiceProblemDeleteEventPayload generic structure
      properties:
        serviceProblem:
          $ref: '#/components/schemas/ServiceProblem'
    ServiceProblemEventRecord:
      allOf:
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: A record of an event (related to a service problem) received from another system
          properties:
            eventTime:
              description: Time at which the event occurred
              type: string
              format: date-time
            eventType:
              description: Type of the recorded event
              type: string
            recordTime:
              description: Time at which the record was created
              type: string
              format: date-time
            serviceProblem:
              $ref: '#/components/schemas/ServiceProblemRef'
            notification:
              $ref: '#/components/schemas/Any'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemEventRecord: '#/components/schemas/ServiceProblemEventRecord'
    ServiceProblemEventRecord_FVO:
      allOf:
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: A record of an event (related to a service problem) received from another system
          properties:
            eventTime:
              description: Time at which the event occurred
              type: string
              format: date-time
            eventType:
              description: Type of the recorded event
              type: string
            recordTime:
              description: Time at which the record was created
              type: string
              format: date-time
            serviceProblem:
              $ref: '#/components/schemas/ServiceProblemRef_FVO'
            notification:
              $ref: '#/components/schemas/Any_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemEventRecord: '#/components/schemas/ServiceProblemEventRecord_FVO'
    ServiceProblemInformationRequiredEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceProblemInformationRequiredEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceProblemInformationRequiredEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemInformationRequiredEvent: '#/components/schemas/ServiceProblemInformationRequiredEvent'
    ServiceProblemInformationRequiredEventPayload:
      type: object
      description: ServiceProblemInformationRequiredEventPayload generic structure
      properties:
        serviceProblem:
          $ref: '#/components/schemas/ServiceProblemRef'
        informationRequired:
          $ref: '#/components/schemas/InformationRequiredArray'
    ServiceProblemRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemRef: '#/components/schemas/ServiceProblemRef'
    ServiceProblemRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemRef: '#/components/schemas/ServiceProblemRef_FVO'
    ServiceProblemRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemRef: '#/components/schemas/ServiceProblemRef_MVO'
    ServiceProblemStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceProblemStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceProblemStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblemStateChangeEvent: '#/components/schemas/ServiceProblemStateChangeEvent'
    ServiceProblemStateChangeEventPayload:
      type: object
      description: ServiceProblemStateChangeEventPayload generic structure
      properties:
        serviceProblem:
          $ref: '#/components/schemas/ServiceProblem'
    ServiceProblemStateType:
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - resolved
        - cancelled
        - closed
      type: string
      description: Possible values for the state of the ServiceProblem
    ServiceProblem_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            The problem information for Middle B which is abstracted in the service layer from the
            issued event information by First B
          properties:
            affectedLocation:
              type: array
              description: >-
                A list of the locations affected by the problem. At least one of affectedResource,
                affectedService or affectedLocation should be present.
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            affectedNumberOfServices:
              type: integer
              description: Number of affected services
            affectedResource:
              type: array
              description: >-
                A list of the resources affected by the problem. At least one of affectedResource,
                affectedService or affectedLocation should be present.
              items:
                $ref: '#/components/schemas/ResourceRef_FVO'
            affectedService:
              type: array
              description: >-
                List of affected services. At least one of affectedResource, affectedService or
                affectedLocation should be present.
              items:
                $ref: '#/components/schemas/ServiceRef_FVO'
            note:
              type: array
              description: A list of comments or notes made on the problem
              items:
                $ref: '#/components/schemas/Note_FVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            name:
              type: string
              description: Name of the Service Problem
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            firstAlert:
              $ref: '#/components/schemas/RelatedEntity_FVO'
            impactImportanceFactor:
              type: string
              description: >-
                Impact Importance is characterized by an Impact Importance Factor: overall
                importance of the impact of all the affected services, e.g. 0 (zero impact) to 100
                (worst impact). The Impact Importance is a calculated field which is set by the OSS
                determining the impact.
            impactPattern:
              $ref: '#/components/schemas/ImpactPattern_FVO'
            originatingSystem:
              type: string
              description: Indicates where the problem was generated
            parentProblem:
              type: array
              description: The parent problem to which this problem is attached.
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            problemEscalation:
              type: string
              description: >-
                Indicates if this service problem has been escalated or not. Possible values are 0
                to 10. A value of zero means no escalation. The meanings of values 1-10 are to be
                determined by the user of the interface, but they show increasing levels of
                escalation.
            relatedEvent:
              type: array
              description: List of events associated to this problem
              items:
                $ref: '#/components/schemas/EventRef_FVO'
            relatedEntity:
              type: array
              description: List of entities associated with this problem
              items:
                $ref: '#/components/schemas/RelatedEntity_FVO'
            responsibleParty:
              $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            relatedParty:
              type: array
              description: List of parties or party roles playing a role within the service problem
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            rootCauseResource:
              type: array
              description: >-
                Resource(s) that are associated to the underlying service problems that are the Root
                Cause of this one if any (used only if applicable).
              items:
                $ref: '#/components/schemas/ResourceRef_FVO'
            rootCauseService:
              type: array
              description: >-
                Service(s) that are associated to the underlying service problems that are the Root
                Cause of this one if any (used only if applicable)
              items:
                $ref: '#/components/schemas/ServiceRef_FVO'
            resolutionDate:
              type: string
              format: date-time
              description: Time the problem was resolved
            status:
              $ref: '#/components/schemas/ServiceProblemStateType'
            statusChangeDate:
              type: string
              format: date-time
              description: Time the problem was last status changed
            statusChangeReason:
              type: string
              description: The reason of state change
            lastUpdate:
              type: string
              format: date-time
              description: Time the problem was last changed
            creationDate:
              type: string
              format: date-time
              description: Time the problem was created
            trackingRecord:
              type: array
              description: >-
                List of tracking records that allow the tracking of modifications on the problem.The
                tracking records should not be embedded in the problem to allow retrieving the
                problem without the tracking records
              items:
                $ref: '#/components/schemas/TrackingRecord_FVO'
            underlyingAlarm:
              type: array
              description: A list of alarms underlying this problem.
              items:
                $ref: '#/components/schemas/ResourceAlarmRef_FVO'
            slaViolation:
              type: array
              description: A List of SLA violations associated with this problem.
              items:
                $ref: '#/components/schemas/SLAViolationRef_FVO'
            troubleTicket:
              type: array
              description: A list of trouble tickets associated with this problem.
              items:
                $ref: '#/components/schemas/TroubleTicketRef_FVO'
            underlyingProblem:
              type: array
              description: >-
                A list of underlying problems. Relevant only if this problem is derived from other
                problems.
              items:
                $ref: '#/components/schemas/ServiceProblemRef_FVO'
            category:
              type: string
              description: >-
                Classifier for the problem. Settable. For example, this is used for distinguish the
                category of problem originator in [role].[category] format. Example:
                serviceProvider.declarer, supplier.originated, system.originated
            description:
              type: string
              description: Free form text describing the Service Problem
            priority:
              type: integer
              description: >-
                An indication varying from 1 (highest) to 10 (lowest) of how important it is for the
                service provider to correct the Service Problem.
            reason:
              type: string
              description: Free text or optionally structured text. It can be Unknown.
            originatorParty:
              $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
          required:
            - category
            - priority
            - description
            - reason
            - originatorParty
            - '@type'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblem: '#/components/schemas/ServiceProblem_FVO'
    ServiceProblem_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            The problem information for Middle B which is abstracted in the service layer from the
            issued event information by First B
          properties:
            affectedLocation:
              type: array
              description: >-
                A list of the locations affected by the problem. At least one of affectedResource,
                affectedService or affectedLocation should be present.
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            affectedNumberOfServices:
              type: integer
              description: Number of affected services
            affectedResource:
              type: array
              description: >-
                A list of the resources affected by the problem. At least one of affectedResource,
                affectedService or affectedLocation should be present.
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            affectedService:
              type: array
              description: >-
                List of affected services. At least one of affectedResource, affectedService or
                affectedLocation should be present.
              items:
                $ref: '#/components/schemas/ServiceRef_MVO'
            note:
              type: array
              description: A list of comments or notes made on the problem
              items:
                $ref: '#/components/schemas/Note_MVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            name:
              type: string
              description: Name of the Service Problem
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            impactImportanceFactor:
              type: string
              description: >-
                Impact Importance is characterized by an Impact Importance Factor: overall
                importance of the impact of all the affected services, e.g. 0 (zero impact) to 100
                (worst impact). The Impact Importance is a calculated field which is set by the OSS
                determining the impact.
            impactPattern:
              $ref: '#/components/schemas/ImpactPattern_MVO'
            parentProblem:
              type: array
              description: The parent problem to which this problem is attached.
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            problemEscalation:
              type: string
              description: >-
                Indicates if this service problem has been escalated or not. Possible values are 0
                to 10. A value of zero means no escalation. The meanings of values 1-10 are to be
                determined by the user of the interface, but they show increasing levels of
                escalation.
            relatedEvent:
              type: array
              description: List of events associated to this problem
              items:
                $ref: '#/components/schemas/EventRef_MVO'
            relatedEntity:
              type: array
              description: List of entities associated with this problem
              items:
                $ref: '#/components/schemas/RelatedEntity_MVO'
            responsibleParty:
              $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            relatedParty:
              type: array
              description: List of parties or party roles playing a role within the service problem
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            rootCauseResource:
              type: array
              description: >-
                Resource(s) that are associated to the underlying service problems that are the Root
                Cause of this one if any (used only if applicable).
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            rootCauseService:
              type: array
              description: >-
                Service(s) that are associated to the underlying service problems that are the Root
                Cause of this one if any (used only if applicable)
              items:
                $ref: '#/components/schemas/ServiceRef_MVO'
            resolutionDate:
              type: string
              format: date-time
              description: Time the problem was resolved
            status:
              $ref: '#/components/schemas/ServiceProblemStateType'
            statusChangeDate:
              type: string
              format: date-time
              description: Time the problem was last status changed
            statusChangeReason:
              type: string
              description: The reason of state change
            lastUpdate:
              type: string
              format: date-time
              description: Time the problem was last changed
            creationDate:
              type: string
              format: date-time
              description: Time the problem was created
            underlyingAlarm:
              type: array
              description: A list of alarms underlying this problem.
              items:
                $ref: '#/components/schemas/ResourceAlarmRef_MVO'
            slaViolation:
              type: array
              description: A List of SLA violations associated with this problem.
              items:
                $ref: '#/components/schemas/SLAViolationRef_MVO'
            troubleTicket:
              type: array
              description: A list of trouble tickets associated with this problem.
              items:
                $ref: '#/components/schemas/TroubleTicketRef_MVO'
            underlyingProblem:
              type: array
              description: >-
                A list of underlying problems. Relevant only if this problem is derived from other
                problems.
              items:
                $ref: '#/components/schemas/ServiceProblemRef_MVO'
            category:
              type: string
              description: >-
                Classifier for the problem. Settable. For example, this is used for distinguish the
                category of problem originator in [role].[category] format. Example:
                serviceProvider.declarer, supplier.originated, system.originated
            description:
              type: string
              description: Free form text describing the Service Problem
            priority:
              type: integer
              description: >-
                An indication varying from 1 (highest) to 10 (lowest) of how important it is for the
                service provider to correct the Service Problem.
            reason:
              type: string
              description: Free text or optionally structured text. It can be Unknown.
            originatorParty:
              $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceProblem: '#/components/schemas/ServiceProblem_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service
        entity and not the ServiceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Service'
        - $ref: '#/components/schemas/ServiceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service'
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRef_FVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    ServiceRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue'
            relationshipType:
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship'
    ServiceRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue'
            relationshipType:
              type: string
          required:
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_FVO'
    ServiceRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue'
            relationshipType:
              type: string
          required:
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_MVO'
    ServiceSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    ServiceSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_FVO'
    ServiceSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_MVO'
    ServiceStateType:
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - inactive
        - active
        - terminated
        - suspended
      type: string
      description: Valid values for the lifecycle state of the service
    Service_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem_FVO'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note_FVO'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature_FVO'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue_FVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship_FVO'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef_FVO'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef_FVO'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
          required:
            - state
            - serviceSpecification
            - serviceDate
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_FVO'
    Service_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note_MVO'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
          required:
            - state
            - serviceSpecification
            - serviceDate
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_MVO'
    StandardIdentifier:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier'
    StandardIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_FVO'
    StandardIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    TrackingRecord:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Tracking records allow the tracking of modifications on the problem. The tracking
            records should not be embedded in the problem to allow retrieving the problem without
            the tracking records
          properties:
            description:
              type: string
              description: 'Describes the action being done, such as: ack, clear'
              example:
                - acknowledge
                - clear
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: >-
                A generic list of any type of elements. Used for vendor Extensions or loose element
                encapsulation from other namespaces
            systemId:
              type: string
              description: Describes the system Id from which the action was done
            time:
              type: string
              format: date-time
              description: Describes the time at which the action was done
            user:
              type: string
              description: Describes the user doing the action
            id:
              type: string
              description: Identifier of the TrackingRecord.
      discriminator:
        propertyName: '@type'
        mapping:
          TrackingRecord: '#/components/schemas/TrackingRecord'
    TrackingRecord_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Tracking records allow the tracking of modifications on the problem. The tracking
            records should not be embedded in the problem to allow retrieving the problem without
            the tracking records
          properties:
            description:
              type: string
              description: 'Describes the action being done, such as: ack, clear'
              example:
                - acknowledge
                - clear
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: >-
                A generic list of any type of elements. Used for vendor Extensions or loose element
                encapsulation from other namespaces
            systemId:
              type: string
              description: Describes the system Id from which the action was done
            time:
              type: string
              format: date-time
              description: Describes the time at which the action was done
            user:
              type: string
              description: Describes the user doing the action
            id:
              type: string
              description: Identifier of the TrackingRecord.
      discriminator:
        propertyName: '@type'
        mapping:
          TrackingRecord: '#/components/schemas/TrackingRecord_FVO'
    TrackingRecord_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Tracking records allow the tracking of modifications on the problem. The tracking
            records should not be embedded in the problem to allow retrieving the problem without
            the tracking records
          properties:
            description:
              type: string
              description: 'Describes the action being done, such as: ack, clear'
              example:
                - acknowledge
                - clear
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: >-
                A generic list of any type of elements. Used for vendor Extensions or loose element
                encapsulation from other namespaces
            systemId:
              type: string
              description: Describes the system Id from which the action was done
            time:
              type: string
              format: date-time
              description: Describes the time at which the action was done
            user:
              type: string
              description: Describes the user doing the action
            id:
              type: string
              description: Identifier of the TrackingRecord.
      discriminator:
        propertyName: '@type'
        mapping:
          TrackingRecord: '#/components/schemas/TrackingRecord_MVO'
    TroubleTicketRef:
      type: object
      description: reference to an TroubleTicket object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketRef: '#/components/schemas/TroubleTicketRef'
    TroubleTicketRef_FVO:
      type: object
      description: reference to an TroubleTicket object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketRef: '#/components/schemas/TroubleTicketRef_FVO'
    TroubleTicketRef_MVO:
      type: object
      description: reference to an TroubleTicket object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          TroubleTicketRef: '#/components/schemas/TroubleTicketRef_MVO'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    ServiceProblem_FVO:
      description: The ServiceProblem to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblem_FVO'
          examples:
            ServiceProblem_create_example:
              $ref: '#/components/examples/ServiceProblem_create_example_request'
      required: true
    ServiceProblem_MVO:
      description: The ServiceProblem to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblem_MVO'
          examples:
            ServiceProblem_partialupdate_example_01:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_01_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceProblem_MVO'
          examples:
            ServiceProblem_partialupdate_example_02:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_02_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ServiceProblem_partialupdate_example_11:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_11_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ServiceProblem_partialupdate_example_22:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_22_request'
      required: true
    ServiceProblemCreateEvent:
      description: ServiceProblem create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    ServiceProblemStateChangeEvent:
      description: ServiceProblem stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemStateChangeEvent'
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
      required: true
    ServiceProblemAttributeValueChangeEvent:
      description: ServiceProblem attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    ServiceProblemInformationRequiredEvent:
      description: ServiceProblem informationRequired Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemInformationRequiredEvent'
          examples:
            InformationRequired:
              $ref: '#/components/examples/InformationRequired_request'
      required: true
    ServiceProblemDeleteEvent:
      description: ServiceProblem delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    ProblemAcknowledgement_FVO:
      description: The ProblemAcknowledgement to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgement_FVO'
          examples:
            ProblemAcknowledgement_create_example:
              $ref: '#/components/examples/ProblemAcknowledgement_create_example_request'
      required: true
    ProblemAcknowledgementCreateEvent:
      description: ProblemAcknowledgement create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgementCreateEvent'
          examples:
            ProblemAcknowledgementCreateEvent:
              $ref: '#/components/examples/ProblemAcknowledgementCreateEvent_request'
      required: true
    ProblemAcknowledgementStateChangeEvent:
      description: ProblemAcknowledgement stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgementStateChangeEvent'
          examples:
            ProblemAcknowledgementStateChangeEvent:
              $ref: '#/components/examples/ProblemAcknowledgementStateChangeEvent_request'
      required: true
    ProblemAcknowledgementDeleteEvent:
      description: ProblemAcknowledgement delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgementDeleteEvent'
          examples:
            ProblemAcknowledgementDeleteEvent:
              $ref: '#/components/examples/ProblemAcknowledgementDeleteEvent_request'
      required: true
    ProblemUnacknowledgement_FVO:
      description: The ProblemUnacknowledgement to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgement_FVO'
          examples:
            ProblemUnacknowledgement_create_example:
              $ref: '#/components/examples/ProblemUnacknowledgement_create_example_request'
      required: true
    ProblemUnacknowledgementCreateEvent:
      description: ProblemUnacknowledgement create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgementCreateEvent'
          examples:
            ProblemUnacknowledgementCreateEvent:
              $ref: '#/components/examples/ProblemUnacknowledgementCreateEvent_request'
      required: true
    ProblemUnacknowledgementStateChangeEvent:
      description: ProblemUnacknowledgement stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgementStateChangeEvent'
          examples:
            ProblemUnacknowledgementStateChangeEvent:
              $ref: '#/components/examples/ProblemUnacknowledgementStateChangeEvent_request'
      required: true
    ProblemUnacknowledgementDeleteEvent:
      description: ProblemUnacknowledgement delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgementDeleteEvent'
          examples:
            ProblemUnacknowledgementDeleteEvent:
              $ref: '#/components/examples/ProblemUnacknowledgementDeleteEvent_request'
      required: true
    ProblemGroup_FVO:
      description: The ProblemGroup to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroup_FVO'
          examples:
            ProblemGroup_create_example:
              $ref: '#/components/examples/ProblemGroup_create_example_request'
      required: true
    ProblemGroupCreateEvent:
      description: ProblemGroup create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroupCreateEvent'
          examples:
            ProblemGroupCreateEvent:
              $ref: '#/components/examples/ProblemGroupCreateEvent_request'
      required: true
    ProblemGroupStateChangeEvent:
      description: ProblemGroup stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroupStateChangeEvent'
          examples:
            ProblemGroupStateChangeEvent:
              $ref: '#/components/examples/ProblemGroupStateChangeEvent_request'
      required: true
    ProblemGroupDeleteEvent:
      description: ProblemGroup delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroupDeleteEvent'
          examples:
            ProblemGroupDeleteEvent:
              $ref: '#/components/examples/ProblemGroupDeleteEvent_request'
      required: true
    ProblemUngroup_FVO:
      description: The ProblemUngroup to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroup_FVO'
          examples:
            ProblemUngroup_create_example:
              $ref: '#/components/examples/ProblemUngroup_create_example_request'
      required: true
    ProblemUngroupCreateEvent:
      description: ProblemUngroup create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroupCreateEvent'
          examples:
            ProblemUngroupCreateEvent:
              $ref: '#/components/examples/ProblemUngroupCreateEvent_request'
      required: true
    ProblemUngroupStateChangeEvent:
      description: ProblemUngroup stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroupStateChangeEvent'
          examples:
            ProblemUngroupStateChangeEvent:
              $ref: '#/components/examples/ProblemUngroupStateChangeEvent_request'
      required: true
    ProblemUngroupDeleteEvent:
      description: ProblemUngroup delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroupDeleteEvent'
          examples:
            ProblemUngroupDeleteEvent:
              $ref: '#/components/examples/ProblemUngroupDeleteEvent_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200ServiceProblemArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceProblem'
          examples:
            ServiceProblem_list_example:
              $ref: '#/components/examples/ServiceProblem_list_example_response'
    200ServiceProblem_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblem'
          examples:
            ServiceProblem_retrieve_example:
              $ref: '#/components/examples/ServiceProblem_retrieve_example_response'
    200ServiceProblem_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblem'
          examples:
            ServiceProblem_partialupdate_example_01:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_01_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceProblem'
          examples:
            ServiceProblem_partialupdate_example_02:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_02_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceProblem'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceProblem'
              - type: string
                nullable: true
          examples:
            ServiceProblem_partialupdate_example_11:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_11_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceProblem'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceProblem'
              - type: string
                nullable: true
          examples:
            ServiceProblem_partialupdate_example_22:
              $ref: '#/components/examples/ServiceProblem_partialupdate_example_22_response'
    201ServiceProblem:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblem'
          examples:
            ServiceProblem_create_example:
              $ref: '#/components/examples/ServiceProblem_create_example_response'
    200ServiceProblemEventRecordArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceProblemEventRecord'
          examples:
            ServiceProblemEventRecord_list_example:
              $ref: '#/components/examples/ServiceProblemEventRecord_list_example_response'
    200ServiceProblemEventRecord_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemEventRecord'
          examples:
            ServiceProblemEventRecord_retrieve_example:
              $ref: '#/components/examples/ServiceProblemEventRecord_retrieve_example_response'
    200ServiceProblemEventRecord_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemEventRecord'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceProblemEventRecord'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceProblemEventRecord'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceProblemEventRecord'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceProblemEventRecord'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceProblemEventRecord'
              - type: string
                nullable: true
    201ServiceProblemEventRecord:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceProblemEventRecord'
    200ProblemAcknowledgement_Task:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgement'
    200ProblemAcknowledgementArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProblemAcknowledgement'
          examples:
            ProblemAcknowledgement_list_example:
              $ref: '#/components/examples/ProblemAcknowledgement_list_example_response'
    200ProblemAcknowledgement_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgement'
          examples:
            ProblemAcknowledgement_retrieve_example:
              $ref: '#/components/examples/ProblemAcknowledgement_retrieve_example_response'
    200ProblemAcknowledgement_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgement'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgement'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemAcknowledgement'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemAcknowledgement'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemAcknowledgement'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemAcknowledgement'
              - type: string
                nullable: true
    201ProblemAcknowledgement:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemAcknowledgement'
          examples:
            ProblemAcknowledgement_create_example:
              $ref: '#/components/examples/ProblemAcknowledgement_create_example_response'
    200ProblemUnacknowledgement_Task:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgement'
    200ProblemUnacknowledgementArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProblemUnacknowledgement'
          examples:
            ProblemUnacknowledgement_list_example:
              $ref: '#/components/examples/ProblemUnacknowledgement_list_example_response'
    200ProblemUnacknowledgement_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgement'
          examples:
            ProblemUnacknowledgement_retrieve_example:
              $ref: '#/components/examples/ProblemUnacknowledgement_retrieve_example_response'
    200ProblemUnacknowledgement_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgement'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgement'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemUnacknowledgement'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemUnacknowledgement'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemUnacknowledgement'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemUnacknowledgement'
              - type: string
                nullable: true
    201ProblemUnacknowledgement:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUnacknowledgement'
          examples:
            ProblemUnacknowledgement_create_example:
              $ref: '#/components/examples/ProblemUnacknowledgement_create_example_response'
    200ProblemGroup_Task:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroup'
    200ProblemGroupArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProblemGroup'
          examples:
            ProblemGroup_list_example:
              $ref: '#/components/examples/ProblemGroup_list_example_response'
    200ProblemGroup_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroup'
          examples:
            ProblemGroup_retrieve_example:
              $ref: '#/components/examples/ProblemGroup_retrieve_example_response'
    200ProblemGroup_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroup'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ProblemGroup'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemGroup'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemGroup'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemGroup'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemGroup'
              - type: string
                nullable: true
    201ProblemGroup:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemGroup'
          examples:
            ProblemGroup_create_example:
              $ref: '#/components/examples/ProblemGroup_create_example_response'
    200ProblemUngroup_Task:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroup'
    200ProblemUngroupArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProblemUngroup'
          examples:
            ProblemUngroup_list_example:
              $ref: '#/components/examples/ProblemUngroup_list_example_response'
    200ProblemUngroup_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroup'
          examples:
            ProblemUngroup_retrieve_example:
              $ref: '#/components/examples/ProblemUngroup_retrieve_example_response'
    200ProblemUngroup_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroup'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ProblemUngroup'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemUngroup'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemUngroup'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ProblemUngroup'
              - type: array
                items:
                  $ref: '#/components/schemas/ProblemUngroup'
              - type: string
                nullable: true
    201ProblemUngroup:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemUngroup'
          examples:
            ProblemUngroup_create_example:
              $ref: '#/components/examples/ProblemUngroup_create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    ServiceProblem_list_example_response:
      value:
        - id: sp_001
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
          category: serviceProvider.declared
          priority: 1
          description: Internet connection error
          statusChangeDate: '2017-10-29T12:00:00.361Z'
          reason: unknown
          status: closed
          originatorParty:
            role: ServiceProvider
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: SP_00001
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
              name: ABCompany
              '@type': PartyRef
              '@referredType': Organization
          affectedService:
            - id: SP00001_Service_001
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
              '@type': ServiceRef
          '@type': ServiceProblem
        - id: sp_002
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_002'
          category: serviceProvider.declared
          priority: 1
          description: Wireless connection error
          statusChangeDate: '2017-10-29T12:00:00.361Z'
          reason: unknown
          status: closed
          originatorParty:
            role: ServiceProvider
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: SP_00001
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
              name: ABCompany
              '@type': PartyRef
              '@referredType': Organization
          affectedService:
            - id: SP00001_Service_002
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_002'
              '@type': ServiceRef
          '@type': ServiceProblem
      description: >-
        Here's an example of a request for retrieving multiple service problems, in this example
        closed items first reported from a specific service
    ServiceProblem_retrieve_example_response:
      value:
        id: problemxxxx0000
        originatingSystem: System_001
        category: supplier.originated
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/problemxxxx0000'
        impactImportanceFactor: '0'
        priority: 1
        description: connection failure between Tokyo and Osaka
        problemEscalation: '0'
        timeRaised: '2017-10-25T12:14:16.361Z'
        timeChanged: '2017-10-30T12:13:16.361Z'
        statusChangeDate: '2017-10-29T12:00:00.361Z'
        statusChangeReason: problem analysis has been completed in NP1
        resolutionDate: '2017-10-29T12:00:00.361Z'
        status: resolved
        reason: Failure of resource NP1_Resource_1 in NP1
        affectedNumberOfServices: 2
        firstAlert:
          '@type': RelatedEntity
          entity:
            '@type': EntityRef
            '@referredType': TroubleTicketRef
            id: NP1_TT_0000000
            href: 'https://mycsp.com:8080/tmf-api/troubleTicketManagement/v5/troubleTicket/NP1_TT_000000'
        responsibleParty:
          role: Customer
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            '@type': PartyRef
            id: '456'
            href: 'http://serverlocation:port/tmf-api/partyManagement/v5/individual/456'
            name: Jean Pontus
            referredType: Individual
        originatorParty:
          role: ServiceProvider
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            id: SP_00001
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
            name: ABCompany
            '@type': PartyRef
            '@referredType': Organization
        relatedParty:
          - role: Supplier
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              '@type': PartyRef
              id: '789'
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization/789'
              name: NP1
              referredType: Organization
          - role: Partner
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              '@type': PartyRef
              id: '123'
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization/123'
              name: SP1
              referredType: Organization
          - role: Partner
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              '@type': PartyRef
              id: '321'
              href: 'http://serverlocation:port/tmf-api/partyManagement/v5/organization/321'
              name: SP2
              referredType: Organization
        affectedService:
          - id: NP1_Tokyo_Osaka
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/NW1_Tokyo_Osaka'
            '@type': ServiceRef
          - id: NP1_Tokyo_xxxx
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/NW1_Tokyo_xxxx'
            '@type': ServiceRef
        affectedResource:
          - id: NP1_RES_0001
            href: 'https://mycsp.com:8080/tmf-api/resourceInventory/v5/resource/NW1_RES_0001'
            '@type': ResourceRef
        affectedLocation:
          - role: VPN Endpoint
            '@type': RelatedPlaceRefOrValue
            place:
              '@type': PlaceRef
              '@referredType': GeographicAddress
              id: Loc000000
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/Loc000000/
              name: 144 Main Street Tokyo 51663556
          - role: VPN Endpoint
            '@type': RelatedPlaceRefOrValue
            place:
              '@type': PlaceRef
              '@referredType': GeographicAddress
              id: Loc000001
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/Loc000001/
              name: 351 Main Street Osaka 3546365
        troubleTicket:
          - id: NP1_TT_0000000
            href: >-
              https://mycsp.com:8080/tmf-api/troubleTicketManagement/v5/TroubleTicketRef/NP1_TT_000000
            '@type': TroubleTicketRef
        underlyingAlarm:
          - id: NP1_A_0000000
            href: 'https://mycsp.com:8080/tmf-api/alarmManagement/v5/resourceAlarm/NP1_A_000000'
            '@referredType': ResourceAlarm
            '@type': ResourceAlarmRef
        slaViolation:
          - id: NP1_SLA_0000000
            href: 'https://mycsp.com:8080/tmf-api/SLAManagement/v5/SLAViolationRef/NP1_SLA_000000'
            '@type': SLAViolationRef
        relatedEvent:
          - id: prediction_0001
            href: 'https://mycsp.com:8080/tmf-api/eventManagement/v5/event/prediction_0001'
            eventTime: '2014-12-20T17:00:00Z'
            '@type': EventRef
        rootCauseService:
          - id: NP1_Tokyo_Osaka
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/NW1_Tokyo_Osaka'
            '@type': ServiceRef
        rootCauseResource:
          - id: NP1_Resource_1
            href: 'https://mycsp.com:8080/tmf-api/resourceInventory/v5/resource/NP1_Resource_1'
            '@type': ResourceRef
        parentProblem:
          - id: problemxxxx0001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/problemxxxx0001
            '@type': ServiceProblemRef
        underlyingProblem:
          - id: problemxxxx0001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/problemxxxx0001
            '@type': ServiceProblemRef
        trackingRecord:
          - description: yyy cleared the problem
            systemId: xxxx
            time: '2014-12-20T17:00:00Z'
            user: NPUSER1
            id: TR_xxxx
            '@type': TrackingRecord
        note:
          - author: SPM IT Team
            date: '2014-12-20T17:00:00Z'
            text: 'receive trouble ticket from NP1, and create this Service Problem'
            '@type': Note
        impactPattern:
          description: Many services are at risk in this problem
          id: TR_0002
          characteristic:
            - id: CH_003
              name: ImpactProbability
              value: true
              valueType: boolean
              '@type': BooleanCharacteristic
          '@type': ImpactPattern
        '@type': ServiceProblem
      description: Here's an example of a request for retrieving a specific service problem.
    ServiceProblemEventRecord_list_example_response:
      value:
        - id: '42'
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblemEventRecord/42'
          recordTime: '2016-08-08T10:45:30.0Z'
          eventType: ServiceProblemCreateEvent
          eventTime: '2016-08-08T10:45:25.0Z'
          notification:
            eventType: ServiceProblemCreateEvent
            eventTime: '2016-08-08T10:45:25.0Z'
            eventId: '92775'
            event:
              serviceProblem:
                id: sp_001
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
                category: serviceProvider.declared
                priority: 1
                description: Internet connection error
                statusChangeDate: '2017-10-29T12:00:00.361Z'
                reason: unknown
                status: acknowledged
                originatorParty:
                  role: ServiceProvider
                  '@type': RelatedPartyRefOrPartyRoleRef
                  partyOrPartyRole:
                    id: SP_00001
                    href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/party/SP_00001'
                    name: ABCompany
                    '@type': PartyRef
                    '@referredType': Organization
                affectedService:
                  - id: SP00001_Service_001
                    href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
                    '@type': ServiceRef
                '@type': ServiceProblem
            '@type': ServiceProblemCreateEvent
          serviceProblem:
            id: problemxxxx0000
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/problemxxxx0000
            '@type': ServiceProblemRef
          '@type': ServiceProblemEventRecord
      description: Here's an example of a request for retrieving multiple event records for a service problems
    ServiceProblemEventRecord_retrieve_example_response:
      value:
        id: '42'
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblemEventRecord/42'
        recordTime: '2016-08-08T10:45:30.0Z'
        eventType: ServiceProblemCreateEvent
        eventTime: '2016-08-08T10:45:25.0Z'
        notification:
          eventType: ServiceProblemCreateEvent
          eventTime: '2016-08-08T10:45:25.0Z'
          eventId: '92775'
          event:
            serviceProblem:
              id: sp_001
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
              category: serviceProvider.declared
              priority: 1
              description: Internet connection error
              statusChangeDate: '2017-10-29T12:00:00.361Z'
              reason: unknown
              status: acknowledged
              originatorParty:
                role: ServiceProvider
                '@type': RelatedPartyRefOrPartyRoleRef
                partyOrPartyRole:
                  id: SP_00001
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/party/SP_00001'
                  name: ABCompany
                  '@type': PartyRef
                  '@referredType': Organization
              affectedService:
                - id: SP00001_Service_001
                  href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
                  '@type': ServiceRef
              '@type': ServiceProblem
          '@type': ServiceProblemCreateEvent
        serviceProblem:
          id: problemxxxx0000
          href: >-
            https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/problemxxxx0000
          '@type': ServiceProblemRef
        '@type': ServiceProblemEventRecord
      description: Here's an example of a request for retrieving a specific service problem event record.
    ProblemAcknowledgement_retrieve_example_response:
      value:
        id: pa_00001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemAcknowledgement/pa_00001'
        state: acknowledged
        problem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        ackProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        trackingRecord:
          description: yyy ack the problem
          systemId: xxxx
          time: '2014-12-20T17:00:00Z'
          user: NP1
          '@type': TrackingRecord
        '@type': ProblemAcknowledgement
      description: Here's an example of a request for retrieving a specific problem acknowledgement task.
    ProblemAcknowledgement_list_example_response:
      value:
        - id: pa_00001
          href: >-
            https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemAcknowledgement/pa_00001
          state: acknowledged
          problem:
            - id: '41'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
              '@type': ServiceProblemRef
            - id: '42'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
              '@type': ServiceProblemRef
            - id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
          ackProblem:
            - id: '41'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
              '@type': ServiceProblemRef
            - id: '42'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
              '@type': ServiceProblemRef
            - id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
          trackingRecord:
            description: yyy ack the problem
            systemId: xxxx
            time: '2014-12-20T17:00:00Z'
            user: NP1
            '@type': TrackingRecord
          '@type': ProblemAcknowledgement
        - id: pa_00002
          href: >-
            https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemAcknowledgement/pa_00002
          state: acknowledged
          problem:
            - id: '31'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/31'
              '@type': ServiceProblemRef
            - id: '32'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/32'
              '@type': ServiceProblemRef
            - id: '33'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/33'
              '@type': ServiceProblemRef
          ackProblem:
            - id: '31'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/31'
              '@type': ServiceProblemRef
            - id: '32'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/32'
              '@type': ServiceProblemRef
            - id: '33'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/33'
              '@type': ServiceProblemRef
          trackingRecord:
            description: yyy ack the problem
            systemId: xxxx
            time: '2014-12-20T17:00:00Z'
            user: NP1
            '@type': TrackingRecord
          '@type': ProblemAcknowledgement
      description: Here's an example of a request for retrieving multiple problem ack entities
    ProblemUnacknowledgement_retrieve_example_response:
      value:
        id: pu_00001
        href: >-
          https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUnacknowledgement/pu_00001
        state: acknowledged
        problem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        unackProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        trackingRecord:
          description: yyy unack the problem
          systemId: xxxx
          time: '2014-12-20T17:00:00Z'
          user: NP1
          '@type': TrackingRecord
        '@type': ProblemUnacknowledgement
      description: Here's an example of a request for retrieving a specific problem unacknowledgement task.
    ProblemUnacknowledgement_list_example_response:
      value:
        - id: pu_00001
          href: >-
            https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUnacknowledgement/pu_00001
          state: acknowledged
          problem:
            - id: '41'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
              '@type': ServiceProblemRef
            - id: '42'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
              '@type': ServiceProblemRef
            - id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
          unackProblem:
            - id: '41'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
              '@type': ServiceProblemRef
            - id: '42'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
              '@type': ServiceProblemRef
            - id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
          trackingRecord:
            description: yyy unack the problem
            systemId: xxxx
            time: '2014-12-20T17:00:00Z'
            user: NP1
            '@type': TrackingRecord
          '@type': ProblemUnacknowledgement
        - id: pu_00002
          href: >-
            https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUnacknowledgement/pu_00002
          state: acknowledged
          problem:
            - id: '31'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/31'
              '@type': ServiceProblemRef
            - id: '32'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/32'
              '@type': ServiceProblemRef
            - id: '33'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/33'
              '@type': ServiceProblemRef
          unackProblem:
            - id: '31'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/31'
              '@type': ServiceProblemRef
            - id: '32'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/32'
              '@type': ServiceProblemRef
            - id: '33'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/33'
              '@type': ServiceProblemRef
          trackingRecord:
            description: yyy unack the problem
            systemId: xxxx
            time: '2014-12-20T17:00:00Z'
            user: NP1
            '@type': TrackingRecord
          '@type': ProblemUnacknowledgement
      description: Here's an example of a request for retrieving multiple problem unack entities
    ProblemGroup_retrieve_example_response:
      value:
        id: pg_00001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemGroup/pg_00001'
        state: acknowledged
        childProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        parentProblem:
          id: '43'
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
          '@type': ServiceProblemRef
        '@type': ProblemGroup
      description: Here's an example of a request for retrieving a specific problem group task.
    ProblemGroup_list_example_response:
      value:
        - id: pg_00001
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemGroup/pg_00001'
          state: acknowledged
          childProblem:
            - id: '41'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
              '@type': ServiceProblemRef
            - id: '42'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
              '@type': ServiceProblemRef
            - id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
          parentProblem:
            id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
          '@type': ProblemGroup
        - id: pg_00002
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemGroup/pg_00002'
          state: acknowledged
          childProblem:
            - id: '31'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/31'
              '@type': ServiceProblemRef
            - id: '32'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/32'
              '@type': ServiceProblemRef
            - id: '33'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/33'
              '@type': ServiceProblemRef
          parentProblem:
            id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
          '@type': ProblemGroup
      description: Here's an example of a request for retrieving multiple problem group entities
    ProblemUngroup_retrieve_example_response:
      value:
        id: pu_00001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUngroup/pu_00001'
        state: acknowledged
        childProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        parentProblem:
          id: '43'
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
          '@type': ServiceProblemRef
        '@type': ProblemUngroup
      description: Here's an example of a request for retrieving a specific problem ungroup task.
    ProblemUngroup_list_example_response:
      value:
        - id: pu_00001
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUngroup/pu_00001'
          state: acknowledged
          childProblem:
            - id: '41'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
              '@type': ServiceProblemRef
            - id: '42'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
              '@type': ServiceProblemRef
            - id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
          parentProblem:
            id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
          '@type': ProblemUngroup
        - id: pu_00002
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUngroup/pu_00001'
          state: acknowledged
          childProblem:
            - id: '31'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/31'
              '@type': ServiceProblemRef
            - id: '32'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/32'
              '@type': ServiceProblemRef
            - id: '33'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/33'
              '@type': ServiceProblemRef
          parentProblem:
            id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
          '@type': ProblemUngroup
      description: Here's an example of a request for retrieving multiple problem ungroup entities
    ServiceProblem_create_example_request:
      value:
        category: serviceProvider.declared
        priority: 1
        description: Internet connection error
        reason: unknown
        originatorParty:
          role: ServiceProvider
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            id: SP_00001
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
            name: ABCompany
            '@type': PartyRef
            '@referredType': Organization
        affectedService:
          - id: SP00001_Service_001
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
            '@type': ServiceRef
        '@type': ServiceProblem
      description: Here's an example of a request for creating a service problem
    ServiceProblem_create_example_response:
      value:
        id: sp_001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
        category: serviceProvider.declared
        priority: 1
        description: Internet connection error
        statusChangeDate: '2017-10-29T12:00:00.361Z'
        reason: unknown
        status: acknowledged
        originatorParty:
          role: ServiceProvider
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            id: SP_00001
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
            name: ABCompany
            '@type': PartyRef
            '@referredType': Organization
        affectedService:
          - id: SP00001_Service_001
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
            '@type': ServiceRef
        '@type': ServiceProblem
    ProblemAcknowledgement_create_example_request:
      value:
        problem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        trackingRecord:
          description: yyy ack the problem
          systemId: xxxx
          time: '2014-12-20T17:00:00Z'
          user: NP1
          '@type': TrackingRecord
        '@type': ProblemAcknowledgement
      description: Here's an example of a request for creating a service problem ack task
    ProblemAcknowledgement_create_example_response:
      value:
        id: pa_00001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemAcknowledgement/pa_00001'
        state: acknowledged
        problem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        ackProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        trackingRecord:
          description: yyy ack the problem
          systemId: xxxx
          time: '2014-12-20T17:00:00Z'
          user: NP1
          '@type': TrackingRecord
        '@type': ProblemAcknowledgement
    ProblemUnacknowledgement_create_example_request:
      value:
        problem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        trackingRecord:
          description: yyy unack the problem
          systemId: xxxx
          time: '2014-12-20T17:00:00Z'
          user: NP1
          '@type': TrackingRecord
        '@type': ProblemUnacknowledgement
      description: Here's an example of a request for creating a problem unack task
    ProblemUnacknowledgement_create_example_response:
      value:
        id: pu_00001
        href: >-
          https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUnacknowledgement/pu_00001
        state: acknowledged
        problem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        unackProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        trackingRecord:
          description: yyy unack the problem
          systemId: xxxx
          time: '2014-12-20T17:00:00Z'
          user: NP1
          '@type': TrackingRecord
        '@type': ProblemUnacknowledgement
    ProblemGroup_create_example_request:
      value:
        childProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        parentProblem:
          id: '43'
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
          '@type': ServiceProblemRef
        '@type': ProblemGroup
      description: Here's an example of a request for creating a ProblemGroup task
    ProblemGroup_create_example_response:
      value:
        id: pg_00001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemGroup/pg_00001'
        state: acknowledged
        childProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        parentProblem:
          id: '43'
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
          '@type': ServiceProblemRef
        '@type': ProblemGroup
    ProblemUngroup_create_example_request:
      value:
        childProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        parentProblem:
          id: '43'
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
          '@type': ServiceProblemRef
        '@type': ProblemUngroup
      description: Here's an example of a request for creating a ProblemUngroup task
    ProblemUngroup_create_example_response:
      value:
        id: pu_00001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUngroup/pu_00001'
        state: acknowledged
        childProblem:
          - id: '41'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
            '@type': ServiceProblemRef
          - id: '42'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
            '@type': ServiceProblemRef
          - id: '43'
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
            '@type': ServiceProblemRef
        parentProblem:
          id: '43'
          href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
          '@type': ServiceProblemRef
        '@type': ProblemUngroup
    ServiceProblem_partialupdate_example_01_request:
      value:
        description: 'connection failure between Tokyo and Osaka at 5:00'
        '@type': ServiceProblem
      description: >-
        Here's an example of a request for patching a service problem. In this example, a new
        description is set.
    ServiceProblem_partialupdate_example_01_response:
      value:
        id: sp_001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
        category: serviceProvider.declared
        priority: 1
        description: 'connection failure between Tokyo and Osaka at 5:00'
        statusChangeDate: '2017-10-29T12:00:00.361Z'
        reason: unknown
        status: acknowledged
        originatorParty:
          role: ServiceProvider
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            id: SP_00001
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
            name: ABCompany
            '@type': PartyRef
            '@referredType': Organization
        affectedService:
          - id: SP00001_Service_001
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
            '@type': ServiceRef
        '@type': ServiceProblem
      description: Response message
    ServiceProblem_partialupdate_example_02_request:
      value:
        description: 'connection failure between Tokyo and Osaka at 5:00'
        '@type': ServiceProblem
      description: >-
        Here's an example of a request for patching a service problem. In this example, a new
        description is set.
    ServiceProblem_partialupdate_example_02_response:
      value:
        id: sp_001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
        category: serviceProvider.declared
        priority: 1
        description: 'connection failure between Tokyo and Osaka at 5:00'
        statusChangeDate: '2017-10-29T12:00:00.361Z'
        reason: unknown
        status: acknowledged
        originatorParty:
          role: ServiceProvider
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            id: SP_00001
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
            name: ABCompany
            '@type': PartyRef
            '@referredType': Organization
        affectedService:
          - id: SP00001_Service_001
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
            '@type': ServiceRef
        '@type': ServiceProblem
      description: Response message
    ServiceProblem_partialupdate_example_11_request:
      value:
        op: add
        path: /affectedService
        value:
          id: '44'
          href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/44'
          '@type': ServiceRef
      description: >-
        Here's an example of a request for patching a service problem. In this example, an affected
        service is added.
    ServiceProblem_partialupdate_example_11_response:
      value:
        id: sp_001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
        category: serviceProvider.declared
        priority: 1
        description: 'connection failure between Tokyo and Osaka at 5:00'
        statusChangeDate: '2017-10-29T12:00:00.361Z'
        reason: unknown
        status: acknowledged
        originatorParty:
          role: ServiceProvider
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            id: SP_00001
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
            name: ABCompany
            '@type': PartyRef
            '@referredType': Organization
        affectedService:
          - id: SP00001_Service_001
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
            '@type': ServiceRef
          - id: '44'
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/44'
            '@type': ServiceRef
        '@type': ServiceProblem
      description: Response message
    ServiceProblem_partialupdate_example_22_request:
      value:
        op: replace
        path: /characteristic/value?characteristic.name=isIsolated
        value: false
      description: >-
        Here's an example of a request for patching a service problem. In this example, a
        characteristic is added.
    ServiceProblem_partialupdate_example_22_response:
      value:
        id: sp_001
        href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
        category: serviceProvider.declared
        priority: 1
        description: 'connection failure between Tokyo and Osaka at 5:00'
        statusChangeDate: '2017-10-29T12:00:00.361Z'
        reason: unknown
        status: acknowledged
        characteristic:
          - name: isIsolated
            value: false
            valueType: boolean
            '@type': BooleanCharacteristic
        originatorParty:
          role: ServiceProvider
          '@type': RelatedPartyRefOrPartyRoleRef
          partyOrPartyRole:
            id: SP_00001
            href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/organization/SP_00001'
            name: ABCompany
            '@type': PartyRef
            '@referredType': Organization
        affectedService:
          - id: SP00001_Service_001
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
            '@type': ServiceRef
          - id: '44'
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/44'
            '@type': ServiceRef
        '@type': ServiceProblem
      description: Response message
    Create_request:
      value:
        correlationId: 2cdbfa6e-6756
        description: ServiceProblemCreateEvent illustration
        domain: Commercial
        eventId: 41af-bb8d-b056f61b8696
        eventTime: '2022-08-25T12:22:14.903Z'
        eventType: ServiceProblemCreateEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:22:12.953Z'
        title: ServiceProblemCreateEvent
        event:
          serviceProblem:
            id: sp_001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
            category: serviceProvider.declared
            priority: 1
            description: Internet connection error
            statusChangeDate: '2017-10-29T12:00:00.361Z'
            reason: unknown
            status: acknowledged
            originatorParty:
              role: ServiceProvider
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: SP_00001
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/party/SP_00001'
                name: ABCompany
                '@type': PartyRef
                '@referredType': Organization
            affectedService:
              - id: SP00001_Service_001
                href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
                '@type': ServiceRef
            '@type': ServiceProblem
        reportingSystem:
          id: '819'
          name: APP-913
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '152'
          name: APP-335
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceProblemCreateEvent
      description: Message example for ServiceProblemCreateEvent event
    StateChange_request:
      value:
        correlationId: db69b15f-0b23
        description: ServiceProblemStateChangeEvent illustration
        domain: Commercial
        eventId: 4e07-aca3-682fd107b18f
        eventTime: '2022-08-25T12:22:14.913Z'
        eventType: ServiceProblemStateChangeEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:22:07.094Z'
        title: ServiceProblemStateChangeEvent
        event:
          serviceProblem:
            id: sp_001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
            status: resolved
            '@type': ServiceProblem
        reportingSystem:
          id: '819'
          name: APP-913
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '152'
          name: APP-335
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceProblemStateChangeEvent
      description: Message example for ServiceProblemStateChangeEvent event
    AttributeValueChange_request:
      value:
        correlationId: b1995ca7-9d12
        description: ServiceProblemAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4f3f-849c-c2ad0d10fbe1
        eventTime: '2022-08-25T12:22:14.924Z'
        eventType: ServiceProblemAttributeValueChangeEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:22:05.372Z'
        title: ServiceProblemAttributeValueChangeEvent
        event:
          serviceProblem:
            category: serviceProvider.declared
            priority: 1
            description: Internet connection error
            reason: unknown
            status: pending
            originatorParty:
              role: ServiceProvider
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: SP_00001
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/party/SP_00001'
                name: ABCompany
                '@type': PartyRef
                '@referredType': Organization
            affectedService:
              - id: SP00001_Service_001
                href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/SP00001_Service_001'
                '@type': ServiceRef
            '@type': ServiceProblem
        reportingSystem:
          id: '819'
          name: APP-913
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '152'
          name: APP-335
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceProblemAttributeValueChangeEvent
      description: Message example for ServiceProblemAttributeValueChangeEvent event
    InformationRequired_request:
      value:
        correlationId: 67b04b18-acdf
        description: ServiceProblemInformationRequiredEvent illustration
        domain: Commercial
        eventId: 4584-8713-56b25db8715f
        eventTime: '2022-08-25T12:22:14.935Z'
        eventType: ServiceProblemInformationRequiredEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:22:09.809Z'
        title: ServiceProblemInformationRequiredEvent
        event:
          serviceProblem:
            id: sp_001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
            '@type': ServiceProblem
            '@referredType': ServiceProblemRef
          informationRequired:
            - op: add
              path: priority
        reportingSystem:
          id: '819'
          name: APP-913
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '152'
          name: APP-335
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceProblemInformationRequiredEvent
      description: Message example for ServiceProblemInformationRequiredEvent event
    Delete_request:
      value:
        correlationId: 36af9e61-4a51
        description: ServiceProblemDeleteEvent illustration
        domain: Commercial
        eventId: 4154-a76e-bf08c4bccb2e
        eventTime: '2022-08-25T12:19:28.549Z'
        eventType: ServiceProblemDeleteEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:19:24.023Z'
        title: ServiceProblemDeleteEvent
        event:
          serviceProblem:
            id: sp_001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/sp_001'
            '@type': ServiceProblemDeleteEvent
        reportingSystem:
          id: '819'
          name: APP-913
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '152'
          name: APP-335
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceProblemDeleteEvent
      description: Message example for ServiceProblemDeleteEvent event
    ProblemAcknowledgementCreateEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemAcknowledgementCreateEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemAcknowledgementCreateEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemAcknowledgementCreateEvent
        event:
          problemAcknowledgement:
            id: pa_00001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemAcknowledgement/pa_00001
            state: acknowledged
            problem:
              - id: '41'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
                '@type': ServiceProblemRef
              - id: '42'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
                '@type': ServiceProblemRef
              - id: '43'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
                '@type': ServiceProblemRef
            trackingRecord:
              description: yyy ack the problem
              systemId: xxxx
              time: '2014-12-20T17:00:00Z'
              user: NP1
              '@type': TrackingRecord
            '@type': ProblemAcknowledgement
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemAcknowledgementCreateEvent
      description: Message example for ProblemAcknowledgementCreateEvent event
    ProblemAcknowledgementStateChangeEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemAcknowledgementStateChangeEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemAcknowledgementStateChangeEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemAcknowledgementStateChangeEvent
        event:
          problemAcknowledgement:
            id: pa_00001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemAcknowledgement/pa_00001
            state: done
            '@type': ProblemAcknowledgement
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemAcknowledgementCreateEvent
      description: Message example for ProblemAcknowledgementStateChange event
    ProblemAcknowledgementDeleteEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemAcknowledgementDeleteEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemAcknowledgementDeleteEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemAcknowledgementDeleteEvent
        event:
          problemAcknowledgement:
            id: pa_00001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemAcknowledgement/pa_00001
            '@type': ProblemAcknowledgement
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemAcknowledgementDeleteEvent
      description: Message example for ProblemAcknowledgementDelete event
    ProblemUnacknowledgementCreateEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemUnacknowledgementCreateEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemUnacknowledgementCreateEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemUnacknowledgementCreateEvent
        event:
          problemUnacknowledgement:
            id: pu_00001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUnacknowledgement/pu_00001
            state: acknowledged
            problem:
              - id: '41'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
                '@type': ServiceProblemRef
              - id: '42'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
                '@type': ServiceProblemRef
              - id: '43'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
                '@type': ServiceProblemRef
            trackingRecord:
              description: yyy unack the problem
              systemId: xxxx
              time: '2014-12-20T17:00:00Z'
              user: NP1
              '@type': TrackingRecord
            '@type': ProblemUnacknowledgement
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemUnacknowledgementCreateEvent
      description: Message example for ProblemUnacknowledgementCreateEvent event
    ProblemUnacknowledgementStateChangeEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemUnacknowledgementStateChangeEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemUnacknowledgementStateChangeEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemUnacknowledgementStateChangeEvent
        event:
          problemUnacknowledgement:
            id: pu_00001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUnacknowledgement/pu_00001
            state: acknowledged
            problem:
              - id: '41'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
                '@type': ServiceProblemRef
              - id: '42'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
                '@type': ServiceProblemRef
              - id: '43'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
                '@type': ServiceProblemRef
            trackingRecord:
              description: yyy unack the problem
              systemId: xxxx
              time: '2014-12-20T17:00:00Z'
              user: NP1
              '@type': TrackingRecord
            '@type': ProblemUnacknowledgement
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemUnacknowledgementStateChangeEvent
      description: Message example for ProblemUnacknowledgementStateChange event
    ProblemUnacknowledgementDeleteEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemUnacknowledgementDeleteEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemUnacknowledgementDeleteEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemUnacknowledgementDeleteEvent
        event:
          problemUnacknowledgement:
            id: pu_00001
            href: >-
              https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUnacknowledgement/pu_00001
            state: acknowledged
            problem:
              - id: '41'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
                '@type': ServiceProblemRef
              - id: '42'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
                '@type': ServiceProblemRef
              - id: '43'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
                '@type': ServiceProblemRef
            trackingRecord:
              description: yyy unack the problem
              systemId: xxxx
              time: '2014-12-20T17:00:00Z'
              user: NP1
              '@type': TrackingRecord
            '@type': ProblemUnacknowledgement
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemUnacknowledgementDeleteEvent
      description: Message example for ProblemUnacknowledgementDeleteEvent event
    ProblemGroupCreateEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemGroupCreateEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemGroupCreateEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemGroupCreateEvent
        event:
          problemGroup:
            id: pg_00001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemGroup/pg_00001'
            state: acknowledged
            childProblem:
              - id: '41'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
                '@type': ServiceProblemRef
              - id: '42'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
                '@type': ServiceProblemRef
              - id: '43'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
                '@type': ServiceProblemRef
            parentProblem:
              id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
            '@type': ProblemGroup
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemGroupCreateEvent
      description: Message example for ProblemGroupCreateEvent event
    ProblemGroupStateChangeEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemGroupStateChangeEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemGroupStateChangeEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemGroupStateChangeEvent
        event:
          problemGroup:
            id: pg_00001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemGroup/pg_00001'
            '@type': ProblemGroup
            state: done
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemGroupStateChangeEvent
      description: Message example for ProblemGroupStateChangeEvent event
    ProblemGroupDeleteEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemGroupDeleteEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemGroupDeleteEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemGroupDeleteEvent
        event:
          problemGroup:
            id: pg_00001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemGroup/pg_00001'
            '@type': ProblemGroup
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemGroupDeleteEvent
      description: Message example for ProblemGroupDeleteEvent event
    ProblemUngroupCreateEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemUngroupCreateEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemUngroupCreateEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemUngroupCreateEvent
        event:
          problemUngroup:
            id: pu_00001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUngroup/pu_00001'
            state: acknowledged
            childProblem:
              - id: '41'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/41'
                '@type': ServiceProblemRef
              - id: '42'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/42'
                '@type': ServiceProblemRef
              - id: '43'
                href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
                '@type': ServiceProblemRef
            parentProblem:
              id: '43'
              href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/serviceProblem/43'
              '@type': ServiceProblemRef
            '@type': ProblemUngroup
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemUngroupCreateEvent
      description: Message example for ProblemUngroupCreateEvent event
    ProblemUngroupStateChangeEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemUngroupStateChangeEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemUngroupStateChangeEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemUngroupStateChangeEvent
        event:
          problemUngroup:
            id: pu_00001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUngroup/pu_00001'
            state: done
            '@type': ProblemUngroup
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemUngroupStateChangeEvent
      description: Message example for ProblemUngroupStateChangeEvent event
    ProblemUngroupDeleteEvent_request:
      value:
        correlationId: b122fa39-7242
        description: ProblemUngroupDeleteEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: ProblemUngroupDeleteEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: ProblemUngroupDeleteEvent
        event:
          problemUngroup:
            id: pu_00001
            href: 'https://mycsp.com:8080/tmf-api/serviceProblemManagement/v5/problemUngroup/pu_00001'
            '@type': ProblemUngroup
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ProblemUngroupDeleteEvent
      description: Message example for ProblemUngroupDeleteEvent event
