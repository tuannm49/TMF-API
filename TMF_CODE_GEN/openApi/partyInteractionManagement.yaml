openapi: 3.0.1
info:
  title: Party Interaction
  description: >-
    **TMF API Reference : TMF - 683 Party Interaction**

    The Party Interaction Management API provides a mechanism to manage party interactions.
    Creation, update and retrieval. Including creation, update, retrieval, deletion and notification
    of event. 

    A Party Interaction captures information about past interactions in order to re-use it in future
    ones. 

    his allows agents to serve users better by knowing the steps they went through. 

    It also allows customers to see better the actions they have performed and how they interacted
    with the service provider.
  version: 5.0.0
servers:
  - url: 'https://serverRoot'
tags:
  - name: partyInteraction
    description: Operations for PartyInteraction Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/partyInteractionAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyInteractionAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        PartyInteractionAttributeValueChangeEvent
      operationId: partyInteractionAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyInteractionAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyInteractionCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyInteractionCreateEvent
      description: Example of a client listener for receiving the notification PartyInteractionCreateEvent
      operationId: partyInteractionCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyInteractionCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyInteractionDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyInteractionDeleteEvent
      description: Example of a client listener for receiving the notification PartyInteractionDeleteEvent
      operationId: partyInteractionDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyInteractionDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyInteractionStatusChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyInteractionStatusChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        PartyInteractionStatusChangeEvent
      operationId: partyInteractionStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyInteractionStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /partyInteraction:
    get:
      tags:
        - partyInteraction
      summary: List or find PartyInteraction objects
      description: List or find PartyInteraction objects
      operationId: listPartyInteraction
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200PartyInteractionArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - partyInteraction
      summary: Creates a PartyInteraction
      description: This operation creates a PartyInteraction entity.
      operationId: createPartyInteraction
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/PartyInteraction_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201PartyInteraction'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/partyInteraction/{id}':
    get:
      tags:
        - partyInteraction
      summary: Retrieves a PartyInteraction by ID
      description: >-
        This operation retrieves a PartyInteraction entity. Attribute selection enabled for all
        first level attributes.
      operationId: retrievePartyInteraction
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200PartyInteraction_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - partyInteraction
      summary: Updates partially a PartyInteraction
      description: This operation updates partially a PartyInteraction entity.
      operationId: patchPartyInteraction
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/PartyInteraction_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200PartyInteraction_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - partyInteraction
      summary: Deletes a PartyInteraction
      description: This operation deletes a PartyInteraction entity.
      operationId: deletePartyInteraction
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_FVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
    AccountRef_MVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_FVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BaseEvent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_FVO'
    BaseEvent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_MVO'
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    BusinessPartner_MVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ChannelRef:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef'
    ChannelRef_FVO:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef_FVO'
    ChannelRef_MVO:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Consumer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_FVO'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRefOrValue:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity'
          EntityRef: '#/components/schemas/EntityRef'
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    EntityRefOrValue_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity_FVO'
          EntityRef: '#/components/schemas/EntityRef_FVO'
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          PartyRef: '#/components/schemas/PartyRef_FVO'
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
          InteractionRelationship: '#/components/schemas/InteractionRelationship_FVO'
          ChannelRef: '#/components/schemas/ChannelRef_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
          AccountRef: '#/components/schemas/AccountRef_FVO'
    EntityRefOrValue_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity_MVO'
          EntityRef: '#/components/schemas/EntityRef'
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Event_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef_FVO'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Event_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_MVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    InteractionItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            id:
              type: string
              description: Unique identifier of the interaction item
            itemDate:
              $ref: '#/components/schemas/TimePeriod'
            reason:
              type: string
              description: Reason why this item is referred
            resolution:
              type: string
              description: Resolution of the interaction item
            creationDate:
              type: string
              format: date-time
              description: Date when the interaction item was created in the system
            lastUpdate:
              type: string
              format: date-time
              description: Date when the interaction item was last updateed in the system
            item:
              $ref: '#/components/schemas/RelatedEntityRefOrValue'
            relatedChannel:
              type: array
              items:
                $ref: '#/components/schemas/RelatedChannel'
              description: 'Where the interaction item took place (e.g.: web, mobile app, store, kiosk, etc.)'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            interactionItemRelationship:
              type: array
              items:
                $ref: '#/components/schemas/InteractionItemRelationship'
            interactionItemType:
              type: string
              description: 'Classification and sub-classification. E.g. Case (type) (subtype/s) Ticket, Incident'
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionItem: '#/components/schemas/InteractionItem'
    InteractionItemRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Used to describe relationship between interaction items.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the referenced to interaction item (must be in the same
                PartyInteraction
            relationshipType:
              type: string
              description: Type of the interaction item relationship
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionItemRelationship: '#/components/schemas/InteractionItemRelationship'
    InteractionItemRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Used to describe relationship between interaction items.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the referenced to interaction item (must be in the same
                PartyInteraction
            relationshipType:
              type: string
              description: Type of the interaction item relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionItemRelationship: '#/components/schemas/InteractionItemRelationship_FVO'
    InteractionItemRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Used to describe relationship between interaction items.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the referenced to interaction item (must be in the same
                PartyInteraction
            relationshipType:
              type: string
              description: Type of the interaction item relationship
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionItemRelationship: '#/components/schemas/InteractionItemRelationship_MVO'
    InteractionItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            id:
              type: string
              description: Unique identifier of the interaction item
            itemDate:
              $ref: '#/components/schemas/TimePeriod'
            reason:
              type: string
              description: Reason why this item is referred
            resolution:
              type: string
              description: Resolution of the interaction item
            creationDate:
              type: string
              format: date-time
              description: Date when the interaction item was created in the system
            lastUpdate:
              type: string
              format: date-time
              description: Date when the interaction item was last updateed in the system
            item:
              $ref: '#/components/schemas/RelatedEntityRefOrValue_FVO'
            relatedChannel:
              type: array
              items:
                $ref: '#/components/schemas/RelatedChannel_FVO'
              description: 'Where the interaction item took place (e.g.: web, mobile app, store, kiosk, etc.)'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note_FVO'
            interactionItemRelationship:
              type: array
              items:
                $ref: '#/components/schemas/InteractionItemRelationship_FVO'
            interactionItemType:
              type: string
              description: 'Classification and sub-classification. E.g. Case (type) (subtype/s) Ticket, Incident'
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionItem: '#/components/schemas/InteractionItem_FVO'
    InteractionItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            id:
              type: string
              description: Unique identifier of the interaction item
            itemDate:
              $ref: '#/components/schemas/TimePeriod'
            reason:
              type: string
              description: Reason why this item is referred
            resolution:
              type: string
              description: Resolution of the interaction item
            creationDate:
              type: string
              format: date-time
              description: Date when the interaction item was created in the system
            lastUpdate:
              type: string
              format: date-time
              description: Date when the interaction item was last updateed in the system
            item:
              $ref: '#/components/schemas/RelatedEntityRefOrValue_MVO'
            relatedChannel:
              type: array
              items:
                $ref: '#/components/schemas/RelatedChannel_MVO'
              description: 'Where the interaction item took place (e.g.: web, mobile app, store, kiosk, etc.)'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note_MVO'
            interactionItemRelationship:
              type: array
              items:
                $ref: '#/components/schemas/InteractionItemRelationship_MVO'
            interactionItemType:
              type: string
              description: 'Classification and sub-classification. E.g. Case (type) (subtype/s) Ticket, Incident'
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionItem: '#/components/schemas/InteractionItem_MVO'
    InteractionRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          properties:
            id:
              type: string
              description: 'Id of the related party interaction '
            relationshipType:
              type: string
              description: 'Relationship type such as parent, handover, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionRelationship: '#/components/schemas/InteractionRelationship'
    InteractionRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          properties:
            id:
              type: string
              description: 'Id of the related party interaction '
            relationshipType:
              type: string
              description: 'Relationship type such as parent, handover, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionRelationship: '#/components/schemas/InteractionRelationship_FVO'
    InteractionRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          properties:
            id:
              type: string
              description: 'Id of the related party interaction '
            relationshipType:
              type: string
              description: 'Relationship type such as parent, handover, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          InteractionRelationship: '#/components/schemas/InteractionRelationship_MVO'
    LanguageAbility:
      type: object
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: >-
            A “true” value specifies whether the language is considered by the individual as his
            favourite one
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_FVO'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
    OrganizationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
    OrganizationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_FVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_MVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_MVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OtherNameIndividual:
      type: object
      description: >-
        Keeps track of other names, for example the old name of a woman before marriage or an artist
        name.
      properties:
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl, etc.'
        generation:
          type: string
          description: 'e.g. Sr, Jr, etc.'
        givenName:
          type: string
          description: First name
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the person prefers to be addressed. Note: This name
            may be a name other than a given name, such as a nickname
        familyNamePrefix:
          type: string
          description: Family name prefix
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        fullName:
          type: string
          description: 'Full name flatten (first, middle, and last names)'
        formattedName:
          type: string
          description: >-
            . A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese,
            Korean, etc.)
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
    OtherNameOrganization_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_FVO'
    OtherNameOrganization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party'
          Organization: '#/components/schemas/Organization'
          Individual: '#/components/schemas/Individual'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
    PartyCreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_FVO'
    PartyCreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
    PartyInteraction:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            relatedChannel:
              type: array
              items:
                $ref: '#/components/schemas/RelatedChannel'
              description: 'Where the interaction took place (e.g. web, mobile app, store, kiosk, etc.)'
            direction:
              type: string
              description: >-
                Specifies who started the interaction. It might be the party or the enterprise
                exposing this API. Possible values are “inbound” and “outbound”
            reason:
              type: string
              description: Reason why the interaction happened
            interactionDate:
              $ref: '#/components/schemas/TimePeriod'
            description:
              type: string
              description: Description of the interaction
            status:
              type: string
              description: 'Status of the interaction (opened, inProgress, completed)'
            statusChangeDate:
              type: string
              format: date-time
              description: Last time the status changed
            creationDate:
              type: string
              format: date-time
              description: Date when the interaction was created in the system
            lastUpdate:
              type: string
              format: date-time
              description: Date when the interaction last updated in the system
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            interactionItem:
              type: array
              items:
                $ref: '#/components/schemas/InteractionItem'
            interactionRelationship:
              type: array
              items:
                $ref: '#/components/schemas/InteractionRelationship'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyInteraction: '#/components/schemas/PartyInteraction'
    PartyInteractionAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyInteractionAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyInteractionAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyInteractionAttributeValueChangeEvent: '#/components/schemas/PartyInteractionAttributeValueChangeEvent'
    PartyInteractionAttributeValueChangeEventPayload:
      type: object
      description: PartyInteractionAttributeValueChangeEventPayload generic structure
      properties:
        partyInteraction:
          $ref: '#/components/schemas/PartyInteraction'
    PartyInteractionCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyInteractionCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyInteractionCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyInteractionCreateEvent: '#/components/schemas/PartyInteractionCreateEvent'
    PartyInteractionCreateEventPayload:
      type: object
      description: PartyInteractionCreateEventPayload generic structure
      properties:
        partyInteraction:
          $ref: '#/components/schemas/PartyInteraction'
    PartyInteractionDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyInteractionDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyInteractionDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyInteractionDeleteEvent: '#/components/schemas/PartyInteractionDeleteEvent'
    PartyInteractionDeleteEventPayload:
      type: object
      description: PartyInteractionDeleteEventPayload generic structure
      properties:
        partyInteraction:
          $ref: '#/components/schemas/PartyInteraction'
    PartyInteractionStatusChange:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyInteractionStatusChange generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyInteractionStatusChangePayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyInteractionStatusChange: '#/components/schemas/PartyInteractionStatusChange'
    PartyInteractionStatusChangePayload:
      type: object
      description: PartyInteractionStatusChangePayload generic structure
      properties:
        partyInteraction:
          $ref: '#/components/schemas/PartyInteraction'
    PartyInteractionStatusExampleType:
      enum:
        - open
        - inProgress
        - completed
      type: string
      description: 'Possible values for the status of party interaction (for example: open,inProgress,completed)'
    PartyInteraction_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          properties:
            relatedChannel:
              type: array
              items:
                $ref: '#/components/schemas/RelatedChannel_FVO'
              description: 'Where the interaction took place (e.g. web, mobile app, store, kiosk, etc.)'
            direction:
              type: string
              description: >-
                Specifies who started the interaction. It might be the party or the enterprise
                exposing this API. Possible values are “inbound” and “outbound”
            reason:
              type: string
              description: Reason why the interaction happened
            interactionDate:
              $ref: '#/components/schemas/TimePeriod'
            description:
              type: string
              description: Description of the interaction
            status:
              type: string
              description: 'Status of the interaction (opened, inProgress, completed)'
            lastUpdate:
              type: string
              format: date-time
              description: Date when the interaction last updated in the system
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note_FVO'
            interactionItem:
              type: array
              items:
                $ref: '#/components/schemas/InteractionItem_FVO'
            interactionRelationship:
              type: array
              items:
                $ref: '#/components/schemas/InteractionRelationship_FVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
          required:
            - reason
            - direction
            - relatedChannel
      discriminator:
        propertyName: '@type'
        mapping:
          PartyInteraction: '#/components/schemas/PartyInteraction_FVO'
    PartyInteraction_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          properties:
            relatedChannel:
              type: array
              items:
                $ref: '#/components/schemas/RelatedChannel_MVO'
              description: 'Where the interaction took place (e.g. web, mobile app, store, kiosk, etc.)'
            reason:
              type: string
              description: Reason why the interaction happened
            interactionDate:
              $ref: '#/components/schemas/TimePeriod'
            description:
              type: string
              description: Description of the interaction
            status:
              type: string
              description: 'Status of the interaction (opened, inProgress, completed)'
            lastUpdate:
              type: string
              format: date-time
              description: Date when the interaction last updated in the system
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note_MVO'
            interactionItem:
              type: array
              items:
                $ref: '#/components/schemas/InteractionItem_MVO'
            interactionRelationship:
              type: array
              items:
                $ref: '#/components/schemas/InteractionRelationship_MVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyInteraction: '#/components/schemas/PartyInteraction_MVO'
    PartyOrPartyRole:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyOrPartyRole_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyOrPartyRole_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/Individual_MVO'
        - $ref: '#/components/schemas/Organization_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO'
        - $ref: '#/components/schemas/Supplier_MVO'
        - $ref: '#/components/schemas/BusinessPartner_MVO'
        - $ref: '#/components/schemas/Consumer_MVO'
        - $ref: '#/components/schemas/Producer_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          Producer: '#/components/schemas/Producer'
          Consumer: '#/components/schemas/Consumer'
          BusinessPartner: '#/components/schemas/BusinessPartner'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRoleSpecificationRef:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
    PartyRoleSpecificationRef_FVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
    PartyRoleSpecificationRef_MVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_FVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_FVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_FVO'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef_FVO'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_FVO'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          Producer: '#/components/schemas/Producer_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_MVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_MVO'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef_MVO'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_MVO'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          Producer: '#/components/schemas/Producer_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_FVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          Individual: '#/components/schemas/Individual_FVO'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_MVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          Individual: '#/components/schemas/Individual_MVO'
    PaymentMethodRef:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRef_FVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
    PaymentMethodRef_MVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
    Producer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Producer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Producer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedChannel:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Related channel to another entity. May be online web, mobile app, social ,etc.'
          properties:
            role:
              type: string
            channel:
              $ref: '#/components/schemas/ChannelRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedChannel: '#/components/schemas/RelatedChannel'
    RelatedChannel_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: 'Related channel to another entity. May be online web, mobile app, social ,etc.'
          properties:
            role:
              type: string
            channel:
              $ref: '#/components/schemas/ChannelRef_FVO'
          required:
            - role
            - channel
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedChannel: '#/components/schemas/RelatedChannel_FVO'
    RelatedChannel_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Related channel to another entity. May be online web, mobile app, social ,etc.'
          properties:
            role:
              type: string
            channel:
              $ref: '#/components/schemas/ChannelRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedChannel: '#/components/schemas/RelatedChannel_MVO'
    RelatedEntityRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue'
    RelatedEntityRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue_FVO'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_FVO'
    RelatedEntityRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_MVO'
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
    RelatedPartyOrPartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    Skill:
      type: object
      description: >-
        Skills evaluated for an individual with a level and possibly with a limited validity when an
        obsolescence is defined (Ex: the first-aid certificate first level is limited to one year
        and an update training is required each year to keep the level).
      properties:
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: 'Name of the skill, such as Java language'
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Supplier:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Supplier_MVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
    TaxDefinition_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_FVO'
    TaxDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_FVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
    TaxExemptionCertificate_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_MVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    PartyInteraction_FVO:
      description: The PartyInteraction to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteraction_FVO'
          examples:
            Party_Interaction_create_example:
              $ref: '#/components/examples/Party_Interaction_create_example_request'
      required: true
    PartyInteraction_MVO:
      description: The PartyInteraction to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteraction_MVO'
          examples:
            Party_Interaction_partialupdate_example_application_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_application_json_request
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/PartyInteraction_MVO'
          examples:
            Party_Interaction_partialupdate_example_merge_patch_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_merge_patch_json_request
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Party_Interaction_partialupdate_example_json_patch_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_json_patch_json_request
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            Party_Interaction_partialupdate_example_json_patch_query_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_json_patch_query_json_request
      required: true
    PartyInteractionCreateEvent:
      description: PartyInteraction create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteractionCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    PartyInteractionAttributeValueChangeEvent:
      description: PartyInteraction attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteractionAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    PartyInteractionDeleteEvent:
      description: PartyInteraction delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteractionDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    PartyInteractionStatusChangeEvent:
      description: PartyInteraction statusChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteractionStatusChange'
          examples:
            StatusChange:
              $ref: '#/components/examples/StatusChange_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200PartyInteractionArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartyInteraction'
          examples:
            PartyInteraction_list_example:
              $ref: '#/components/examples/PartyInteraction_list_example_response'
    200PartyInteraction_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteraction'
          examples:
            PartyInteraction_retrieve_example:
              $ref: '#/components/examples/PartyInteraction_retrieve_example_response'
    200PartyInteraction_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteraction'
          examples:
            Party_Interaction_partialupdate_example_application_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_application_json_response
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/PartyInteraction'
          examples:
            Party_Interaction_partialupdate_example_merge_patch_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_merge_patch_json_response
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/PartyInteraction'
              - type: array
                items:
                  $ref: '#/components/schemas/PartyInteraction'
              - type: string
                nullable: true
          examples:
            Party_Interaction_partialupdate_example_json_patch_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_json_patch_json_response
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/PartyInteraction'
              - type: array
                items:
                  $ref: '#/components/schemas/PartyInteraction'
              - type: string
                nullable: true
          examples:
            Party_Interaction_partialupdate_example_json_patch_query_json:
              $ref: >-
                #/components/examples/Party_Interaction_partialupdate_example_json_patch_query_json_response
    201PartyInteraction:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyInteraction'
          examples:
            Party_Interaction_create_example:
              $ref: '#/components/examples/Party_Interaction_create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    PartyInteraction_list_example_response:
      value:
        - id: '123'
          href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
          '@type': PartyInteraction
          relatedParty:
            - role: user
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: '999'
                href: 'https://host:port/partyManagement/v5/individual/999'
                name: John Doe
                '@type': PartyRef
                '@referredType': Individual
            - role: customer
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: '3434'
                href: 'https://host:port/partyManagement/v5/individual/3434'
                name: Malik Doe
                '@type': PartyRoleRef
                '@referredType': Customer
            - role: agent
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: '36666'
                href: 'https://host:port/partyManagement/v5/individual/36666'
                name: Rian Muray
                '@type': PartyRef
                '@referredType': Individual
        - id: '555'
          href: 'https://host:port/partyInteraction/v5/partyInteraction/555'
          '@type': PartyInteraction
          relatedParty:
            - role: user
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: '999'
                href: 'https://host:port/partyManagement/v5/individual/999'
                name: John Doe
                '@type': PartyRef
                '@referredType': Individual
      description: >-
        Here's an example of a request for retrieving a list of party interaction(s). The given
        criteria is the individual (id,@referredType)
    PartyInteraction_retrieve_example_response:
      value:
        id: '123'
        href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
        '@type': PartyInteraction
        interactionDate:
          startDateTime: '2020-10-02T11:36:18.758Z'
          endDateTime: '2020-10-02T11:53:21.789Z'
        description: Visit to store
        reason: The user wanted to buy TV and internet plan
        status: ongoing
        statusChangeDate: '2020-10-02T11:53:21.789Z'
        direction: inbounds
        creationDate: '2020-10-02T11:37:08.013Z'
        lastUpdateDate: '2020-11-02T11:37:08.013Z'
        relatedParty:
          - role: user
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '999'
              href: 'https://host:port/partyManagement/v5/individual/999'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
          - role: agent
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '888'
              href: 'https://host:port/partyManagement/v5/individual/888'
              name: Rian Muray
              '@type': PartyRef
              '@referredType': Individual
        interactionItem:
          - id: '5678'
            reason: The user signed up to new TV bundle and paid the decoder
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            lastUpdateDate: '2020-11-02T11:37:08.013Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '30001'
                href: 'https://host:port/productOrderingManagement/5/productOrder/30001'
                name: Product Order illustration sample by reference
                '@referredType': ProductOrder
                '@type': EntityRef
          - id: '1212'
            reason: The user is purchasing unlimited internet plan
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:59:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '88'
                href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                '@type': ProductOrder
                productOrderItem:
                  - id: '13219'
                    action: add
                    productOffering:
                      id: '2445'
                      name: Unlimited Internet Plus
                      '@type': ProductOfferingRef
                      '@referredType': ProductOrder
          - id: '9999'
            reason: The user paid the decoder in the store with credit card
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: TODO
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '666'
                href: 'https://host:port/paymentManagement/5/payment/666'
                name: TV bundle plus decoder payment
                '@type': EntityRef
                '@referredType': Payment
        relatedChannel:
          - role: interaction creation
            '@type': RelatedChannel
            channel:
              id: '555'
              name: Madrid Gran Store
              '@type': ChannelRef
        attachment:
          - id: '111222444'
            href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
            name: Some cool attachment
            '@type': AttachmentRef
            description: blahblahblah
            attachmentType: receipt
            mimeType: application/pdf
            size:
              amount: 321321
              units: KB
            URL: 'https://whereverthpdfis.com'
        note:
          - id: '121'
            text: loren ipsum ...
            author: John Doe
            date: '2020-10-02T11:36:18.758Z'
            '@type': Note
        interactionRelationship:
          - id: '1034'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
            '@type': InteractionRelationship
            relationshipType: parentInteraction
      description: Here's an example of a request for retrieving a specific party interaction.
    Party_Interaction_create_example_request:
      value:
        '@type': PartyInteraction
        interactionDate:
          startDateTime: '2020-10-02T11:36:18.758Z'
          endDateTime: '2020-10-02T11:53:21.789Z'
        description: Visit to store
        reason: The user wanted to buy TV and internet plan
        direction: inbounds
        relatedParty:
          - role: user
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '999'
              href: 'https://host:port/partyManagement/v5/individual/999'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
          - role: agent
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '888'
              href: 'https://host:port/partyManagement/v5/individual/888'
              name: Rian Muray
              '@type': PartyRef
              '@referredType': Individual
        interactionItem:
          - id: '5678'
            reason: The user signed up to new TV bundle and paid the decoder
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            lastUpdateDate: '2020-11-02T11:37:08.013Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '30001'
                href: 'https://host:port/productOrderingManagement/5/productOrder/30001'
                name: Product Order illustration sample by reference
                '@referredType': ProductOrder
                '@type': EntityRef
          - id: '1212'
            reason: The user is purchasing unlimited internet plan
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:59:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '88'
                href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                '@type': ProductOrder
                '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ProductOrder.schema.json'
                productOrderItem:
                  - id: '13219'
                    action: add
                    productOffering:
                      id: '2445'
                      name: Unlimited Internet Plus
                      '@type': ProductOfferingRef
                      '@referredType': ProductOrder
          - id: '9999'
            reason: The user paid the decoder in the store with credit card
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: TODO
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '666'
                href: 'https://host:port/paymentManagement/5/payment/666'
                name: TV bundle plus decoder payment
                '@type': EntityRef
                '@referredType': Payment
        relatedChannel:
          - role: interaction creation
            '@type': RelatedChannel
            channel:
              id: '555'
              name: Madrid Gran Store
              '@type': ChannelRef
        attachment:
          - id: '111222444'
            href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
            name: Some cool attachment
            '@type': AttachmentRef
            description: blahblahblah
            attachmentType: receipt
            mimeType: application/pdf
            size:
              amount: 321321
              units: KB
            URL: 'https://whereverthpdfis.com'
        note:
          - id: '121'
            text: loren ipsum ...
            author: John Doe
            date: '2020-10-02T11:36:18.758Z'
            '@type': 'Note '
        interactionRelationship:
          - id: '1034'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
            '@type': InteractionRelationship
            relationshipType: parentInteraction
      description: >-
        POST PartyInteraction request example - only a subset of party interaction attributes are
        used in this example
    Party_Interaction_create_example_response:
      value:
        id: '123'
        href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
        '@type': PartyInteraction
        interactionDate:
          startDateTime: '2020-10-02T11:36:18.758Z'
          endDateTime: '2020-10-02T11:53:21.789Z'
        description: Visit to store
        reason: The user wanted to buy TV and internet plan
        status: ongoing
        statusChangeDate: '2020-10-02T11:53:21.789Z'
        direction: inbounds
        creationDate: '2020-10-02T11:37:08.013Z'
        lastUpdateDate: '2020-11-02T11:37:08.013Z'
        relatedParty:
          - role: user
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '999'
              href: 'https://host:port/partyManagement/v5/individual/999'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
          - role: agent
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '888'
              href: 'https://host:port/partyManagement/v5/individual/888'
              name: Rian Muray
              '@type': PartyRef
              '@referredType': Individual
        interactionItem:
          - id: '5678'
            reason: The user signed up to new TV bundle and paid the decoder
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            lastUpdateDate: '2020-11-02T11:37:08.013Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '30001'
                href: 'https://host:port/productOrderingManagement/5/productOrder/30001'
                name: Product Order illustration sample by reference
                '@referredType': ProductOrder
                '@type': EntityRef
          - id: '1212'
            reason: The user is purchasing unlimited internet plan
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:59:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '88'
                href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                '@type': ProductOrder
                '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ProductOrder.schema.json'
                productOrderItem:
                  - id: '13219'
                    action: add
                    productOffering:
                      id: '2445'
                      name: Unlimited Internet Plus
                      '@type': ProductOfferingRef
                      '@referredType': ProductOrder
          - id: '9999'
            reason: The user paid the decoder in the store with credit card
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: TODO
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '666'
                href: 'https://host:port/paymentManagement/5/payment/666'
                name: TV bundle plus decoder payment
                '@type': EntityRef
                '@referredType': Payment
        relatedChannel:
          - role: interaction creation
            '@type': RelatedChannel
            channel:
              id: '555'
              name: Madrid Gran Store
              '@type': ChannelRef
        attachment:
          - id: '111222444'
            href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
            name: Some cool attachment
            '@type': AttachmentRef
            description: blahblahblah
            attachmentType: receipt
            mimeType: application/pdf
            size:
              amount: 321321
              units: KB
            URL: 'https://whereverthpdfis.com'
        note:
          - id: '121'
            text: loren ipsum ...
            author: John Doe
            date: '2020-10-02T11:36:18.758Z'
            '@type': Note
        interactionRelationship:
          - id: '1034'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
            '@type': InteractionRelationship
            relationshipType: parentInteraction
      description: PartyInteraction representation.
    Party_Interaction_partialupdate_example_application_json_request:
      value:
        '@type': PartyInteraction
        description: Visit to store and buy TV
      description: >-
        Update a party interaction description-  updated party interaction is 123.This example
        illustrating patch application json. When PATCH is implemeted merge syntaxt is mandatory
    Party_Interaction_partialupdate_example_application_json_response:
      value:
        id: '123'
        href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
        '@type': PartyInteraction
        interactionDate:
          startDateTime: '2020-10-02T11:36:18.758Z'
          endDateTime: '2020-10-02T11:53:21.789Z'
        description: Visit to store and buy TV
        reason: The user wanted to buy TV and internet plan
        status: ongoing
        statusChangeDate: '2020-10-02T11:53:21.789Z'
        direction: inbounds
        creationDate: '2020-10-02T11:37:08.013Z'
        lastUpdateDate: '2020-11-02T11:37:08.013Z'
        relatedParty:
          - role: user
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '999'
              href: 'https://host:port/partyManagement/v5/individual/999'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
          - role: agent
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '888'
              href: 'https://host:port/partyManagement/v5/individual/888'
              name: Rian Muray
              '@type': PArtyRef
              '@referredType': Individual
        interactionItem:
          - id: '5678'
            reason: The user signed up to new TV bundle and paid the decoder
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            lastUpdateDate: '2020-11-02T11:37:08.013Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '30001'
                href: 'https://host:port/productOrderingManagement/5/productOrder/30001'
                name: Product Order illustration sample by reference
                '@referredType': ProductOrder
                '@type': EntityRef
          - id: '1212'
            reason: The user is purchasing unlimited internet plan
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:59:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '88'
                href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                '@type': ProductOrder
                '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ProductOrder.schema.json'
                productOrderItem:
                  - id: '13219'
                    action: add
                    productOffering:
                      id: '2445'
                      name: Unlimited Internet Plus
                      '@type': ProductOfferingRef
                      '@referredType': ProductOrder
          - id: '9999'
            reason: The user paid the decoder in the store with credit card
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: TODO
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '666'
                href: 'https://host:port/paymentManagement/5/payment/666'
                name: TV bundle plus decoder payment
                '@type': EntityRef
                '@referredType': Payment
        relatedChannel:
          - role: interaction creation
            '@type': RelatedChannel
            channel:
              id: '555'
              name: Madrid Gran Store
              '@type': ChannelRef
        attachment:
          - id: '111222444'
            href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
            name: Some cool attachment
            '@type': AttachmentRef
            description: blahblahblah
            attachmentType: receipt
            mimeType: application/pdf
            size:
              amount: 321321
              units: KB
            URL: 'https://whereverthpdfis.com'
        note:
          - id: '121'
            text: loren ipsum ...
            author: John Doe
            date: '2020-10-02T11:36:18.758Z'
            '@type': Note
        interactionRelationship:
          - id: '1034'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
            '@type': InteractionRelationship
            relationshipType: parentInteraction
      description: PartyInteraction representation.
    Party_Interaction_partialupdate_example_merge_patch_json_request:
      value:
        '@type': PartyInteraction
        description: Visit to store and buy TV
      description: >-
        Update a party interaction description-  updated party interaction is 123.This example
        illustrating patch patch merge. When PATCH is implemeted merge syntaxt is mandatory
    Party_Interaction_partialupdate_example_merge_patch_json_response:
      value:
        id: '123'
        href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
        '@type': PartyInteraction
        interactionDate:
          startDateTime: '2020-10-02T11:36:18.758Z'
          endDateTime: '2020-10-02T11:53:21.789Z'
        description: Visit to store and buy TV
        reason: The user wanted to buy TV and internet plan
        status: ongoing
        statusChangeDate: '2020-10-02T11:53:21.789Z'
        direction: inbounds
        creationDate: '2020-10-02T11:37:08.013Z'
        lastUpdateDate: '2020-11-02T11:37:08.013Z'
        relatedParty:
          - role: user
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '999'
              href: 'https://host:port/partyManagement/v5/individual/999'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
          - role: agent
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '888'
              href: 'https://host:port/partyManagement/v5/individual/888'
              name: Rian Muray
              '@type': PArtyRef
              '@referredType': Individual
        interactionItem:
          - id: '5678'
            reason: The user signed up to new TV bundle and paid the decoder
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            lastUpdateDate: '2020-11-02T11:37:08.013Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '30001'
                href: 'https://host:port/productOrderingManagement/5/productOrder/30001'
                name: Product Order illustration sample by reference
                '@referredType': ProductOrder
                '@type': EntityRef
          - id: '1212'
            reason: The user is purchasing unlimited internet plan
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:59:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '88'
                href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                '@type': ProductOrder
                '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ProductOrder.schema.json'
                productOrderItem:
                  - id: '13219'
                    action: add
                    productOffering:
                      id: '2445'
                      name: Unlimited Internet Plus
                      '@type': ProductOfferingRef
                      '@referredType': ProductOrder
          - id: '9999'
            reason: The user paid the decoder in the store with credit card
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: TODO
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '666'
                href: 'https://host:port/paymentManagement/5/payment/666'
                name: TV bundle plus decoder payment
                '@type': EntityRef
                '@referredType': Payment
        relatedChannel:
          - role: interaction creation
            '@type': RelatedChannel
            channel:
              id: '555'
              name: Madrid Gran Store
              '@type': ChannelRef
        attachment:
          - id: '111222444'
            href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
            name: Some cool attachment
            '@type': AttachmentRef
            description: blahblahblah
            attachmentType: receipt
            mimeType: application/pdf
            size:
              amount: 321321
              units: KB
            URL: 'https://whereverthpdfis.com'
        note:
          - id: '121'
            text: loren ipsum ...
            author: John Doe
            date: '2020-10-02T11:36:18.758Z'
            '@type': Note
        interactionRelationship:
          - id: '1034'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
            '@type': InteractionRelationship
            relationshipType: parentInteraction
      description: PartyInteraction representation.
    Party_Interaction_partialupdate_example_json_patch_json_request:
      value:
        - op: replace
          path: /description
          value: Visit to store and buy TV
      description: >-
        Update a party interaction description-  updated party interaction is 123.This example
        illustrating patch json
    Party_Interaction_partialupdate_example_json_patch_json_response:
      value:
        id: '123'
        href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
        '@type': PartyInteraction
        interactionDate:
          startDateTime: '2020-10-02T11:36:18.758Z'
          endDateTime: '2020-10-02T11:53:21.789Z'
        description: Visit to store and buy TV
        reason: The user wanted to buy TV and internet plan
        status: ongoing
        statusChangeDate: '2020-10-02T11:53:21.789Z'
        direction: inbounds
        creationDate: '2020-10-02T11:37:08.013Z'
        lastUpdateDate: '2020-11-02T11:37:08.013Z'
        relatedParty:
          - role: user
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '999'
              href: 'https://host:port/partyManagement/v5/individual/999'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
          - role: agent
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '888'
              href: 'https://host:port/partyManagement/v5/individual/888'
              name: Rian Muray
              '@type': PArtyRef
              '@referredType': Individual
        interactionItem:
          - id: '5678'
            reason: The user signed up to new TV bundle and paid the decoder
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            lastUpdateDate: '2020-11-02T11:37:08.013Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '30001'
                href: 'https://host:port/productOrderingManagement/5/productOrder/30001'
                name: Product Order illustration sample by reference
                '@referredType': ProductOrder
                '@type': EntityRef
          - id: '1212'
            reason: The user is purchasing unlimited internet plan
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:59:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '88'
                href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                '@type': ProductOrder
                '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ProductOrder.schema.json'
                productOrderItem:
                  - id: '13219'
                    action: add
                    productOffering:
                      id: '2445'
                      name: Unlimited Internet Plus
                      '@type': ProductOfferingRef
                      '@referredType': ProductOrder
          - id: '9999'
            reason: The user paid the decoder in the store with credit card
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: TODO
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '666'
                href: 'https://host:port/paymentManagement/5/payment/666'
                name: TV bundle plus decoder payment
                '@type': EntityRef
                '@referredType': Payment
        relatedChannel:
          - role: interaction creation
            '@type': RelatedChannel
            channel:
              id: '555'
              name: Madrid Gran Store
              '@type': ChannelRef
        attachment:
          - id: '111222444'
            href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
            name: Some cool attachment
            '@type': AttachmentRef
            description: blahblahblah
            attachmentType: receipt
            mimeType: application/pdf
            size:
              amount: 321321
              units: KB
            URL: 'https://whereverthpdfis.com'
        note:
          - id: '121'
            text: loren ipsum ...
            author: John Doe
            date: '2020-10-02T11:36:18.758Z'
            '@type': Note
        interactionRelationship:
          - id: '1034'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
            '@type': InteractionRelationship
            relationshipType: parentInteraction
      description: PartyInteraction representation.
    Party_Interaction_partialupdate_example_json_patch_query_json_request:
      value:
        - op: delete
          path: /interactionItem?id=5678
      description: >-
        Request for remove a party interaction item (id=5678) from party interaction is 123. This
        example illustrating patch query json
    Party_Interaction_partialupdate_example_json_patch_query_json_response:
      value:
        id: '123'
        href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
        '@type': PartyInteraction
        interactionDate:
          startDateTime: '2020-10-02T11:36:18.758Z'
          endDateTime: '2020-10-02T11:53:21.789Z'
        description: Visit to store and buy TV
        reason: The user wanted to buy TV and internet plan
        status: ongoing
        statusChangeDate: '2020-10-02T11:53:21.789Z'
        direction: inbounds
        creationDate: '2020-10-02T11:37:08.013Z'
        lastUpdateDate: '2020-11-02T11:37:08.013Z'
        relatedParty:
          - role: user
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '999'
              href: 'https://host:port/partyManagement/v5/individual/999'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
          - role: agent
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '888'
              href: 'https://host:port/partyManagement/v5/individual/888'
              name: Rian Muray
              '@type': PArtyRef
              '@referredType': Individual
        interactionItem:
          - id: '1212'
            reason: The user is purchasing unlimited internet plan
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:59:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: Product order is created
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '88'
                href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                '@type': ProductOrder
                '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ProductOrder.schema.json'
                productOrderItem:
                  - id: '13219'
                    action: add
                    productOffering:
                      id: '2445'
                      name: Unlimited Internet Plus
                      '@type': ProductOfferingRef
                      '@referredType': ProductOrder
          - id: '9999'
            reason: The user paid the decoder in the store with credit card
            '@type': InteractionItem
            itemDate:
              endDateTime: '2020-10-02T11:56:01.895Z'
              startDateTime: '2020-10-02T11:50:01.895Z'
            resolution: TODO
            creationDate: '2020-10-02T11:50:01.895Z'
            item:
              role: interaction
              '@type': RelatedEntityRefOrValue
              entity:
                id: '666'
                href: 'https://host:port/paymentManagement/5/payment/666'
                name: TV bundle plus decoder payment
                '@type': EntityRef
                '@referredType': Payment
        relatedChannel:
          - role: interaction creation
            '@type': RelatedChannel
            channel:
              id: '555'
              name: Madrid Gran Store
              '@type': ChannelRef
        attachment:
          - id: '111222444'
            href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
            name: Some cool attachment
            '@type': AttachmentRef
            description: blahblahblah
            attachmentType: receipt
            mimeType: application/pdf
            size:
              amount: 321321
              units: KB
            URL: 'https://whereverthpdfis.com'
        note:
          - id: '121'
            text: loren ipsum ...
            author: John Doe
            date: '2020-10-02T11:36:18.758Z'
            '@type': Note
        interactionRelationship:
          - id: '1034'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
            '@type': InteractionRelationship
            relationshipType: parentInteraction
      description: PartyInteraction representation.
    Create_request:
      value:
        correlationId: 20c77f4b-3c76
        description: PartyInteractionCreateEvent illustration
        domain: Commercial
        eventId: 4103-b23b-d57302dead62
        eventTime: '2022-11-28T13:28:06.780Z'
        eventType: PartyInteractionCreateEvent
        priority: '3'
        timeOcurred: '2022-11-28T13:28:01.547Z'
        title: PartyInteractionCreateEvent
        event:
          partyInteraction:
            id: '123'
            href: 'https://host:port/partyInteraction/v5/partyInteraction/123'
            '@type': PartyInteraction
            interactionDate:
              startDateTime: '2020-10-02T11:36:18.758Z'
              endDateTime: '2020-10-02T11:53:21.789Z'
            description: Visit to store
            reason: The user wanted to buy TV and internet plan
            status: ongoing
            statusChangeDate: '2020-10-02T11:53:21.789Z'
            direction: inbounds
            creationDate: '2020-10-02T11:37:08.013Z'
            lastUpdateDate: '2020-11-02T11:37:08.013Z'
            relatedParty:
              - role: user
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: '999'
                  href: 'https://host:port/partyManagement/v5/individual/999'
                  name: John Doe
                  '@type': PartyRef
                  '@referredType': Individual
              - role: agent
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: '888'
                  href: 'https://host:port/partyManagement/v5/individual/888'
                  name: Rian Muray
                  '@type': PartyRef
                  '@referredType': Individual
            interactionItem:
              - id: '5678'
                reason: The user signed up to new TV bundle and paid the decoder
                '@type': InteractionItem
                itemDate:
                  endDateTime: '2020-10-02T11:56:01.895Z'
                  startDateTime: '2020-10-02T11:50:01.895Z'
                resolution: Product order is created
                creationDate: '2020-10-02T11:50:01.895Z'
                lastUpdateDate: '2020-11-02T11:37:08.013Z'
                item:
                  role: interaction
                  '@type': RelatedEntityRefOrValue
                  entity:
                    id: '30001'
                    href: 'https://host:port/productOrderingManagement/5/productOrder/30001'
                    name: Product Order illustration sample by reference
                    '@referredType': ProductOrder
                    '@type': EntityRef
              - id: '1212'
                reason: The user is purchasing unlimited internet plan
                '@type': InteractionItem
                itemDate:
                  endDateTime: '2020-10-02T11:59:01.895Z'
                  startDateTime: '2020-10-02T11:50:01.895Z'
                resolution: Product order is created
                creationDate: '2020-10-02T11:50:01.895Z'
                item:
                  role: interaction
                  '@type': RelatedEntityRefOrValue
                  entity:
                    id: '88'
                    href: 'https://host:port/productOrderingManagement/v5/productOrder/88'
                    '@type': ProductOrder
                    '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Resource/ProductOrder.schema.json'
                    productOrderItem:
                      - id: '13219'
                        action: add
                        productOffering:
                          id: '2445'
                          name: Unlimited Internet Plus
                          '@type': ProductOfferingRef
                          '@referredType': ProductOrder
              - id: '9999'
                reason: The user paid the decoder in the store with credit card
                '@type': InteractionItem
                itemDate:
                  endDateTime: '2020-10-02T11:56:01.895Z'
                  startDateTime: '2020-10-02T11:50:01.895Z'
                resolution: TODO
                creationDate: '2020-10-02T11:50:01.895Z'
                item:
                  role: interaction
                  '@type': RelatedEntityRefOrValue
                  entity:
                    id: '666'
                    href: 'https://host:port/paymentManagement/5/payment/666'
                    name: TV bundle plus decoder payment
                    '@type': EntityRef
                    '@referredType': Payment
            relatedChannel:
              - role: interaction creation
                '@type': RelatedChannel
                channel:
                  id: '555'
                  name: Madrid Gran Store
                  '@type': ChannelRef
            attachment:
              - id: '111222444'
                href: 'https://host:port/partyInteraction/5/partyInteraction/123/attachment/111222444'
                name: Some cool attachment
                '@type': AttachmentRef
                description: blahblahblah
                attachmentType: receipt
                mimeType: application/pdf
                size:
                  amount: 321321
                  units: KB
                URL: 'https://whereverthpdfis.com'
            note:
              - id: '121'
                text: loren ipsum ...
                author: John Doe
                date: '2020-10-02T11:36:18.758Z'
                '@type': Note
            interactionRelationship:
              - id: '1034'
                href: 'https://host:port/partyInteraction/v5/partyInteraction/1034'
                '@type': InteractionRelationship
                relationshipType: parentInteraction
        reportingSystem:
          id: '661'
          name: APP-835
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '616'
          name: APP-817
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PartyInteractionCreateEvent
      description: Message example for PartyInteractionCreateEvent event
    AttributeValueChange_request:
      value:
        correlationId: 8b161265-fc15
        description: PartyInteractionAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4dff-81c5-b308c95373fa
        eventTime: '2022-11-28T13:28:06.795Z'
        eventType: PartyInteractionAttributeValueChangeEvent
        priority: '4'
        timeOcurred: '2022-11-28T13:27:57.646Z'
        title: PartyInteractionAttributeValueChangeEvent
        event:
          partyInteraction:
            href: 'http://servername/partyInteraction/123'
            id: '123'
            '@type': PartyInteraction
            interactionDate:
              startDateTime: '2019-10-02T11:36:18.758Z'
              endDateTime: '2019-10-02T11:53:21.789Z'
        reportingSystem:
          id: '661'
          name: APP-835
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '616'
          name: APP-817
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PartyInteractionAttributeValueChangeEvent
      description: Message example for PartyInteractionAttributeValueChangeEvent event
    Delete_request:
      value:
        correlationId: 0be43a9f-6b43
        description: PartyInteractionDeleteEvent illustration
        domain: Commercial
        eventId: 4aa5-a8ce-d1162247afaf
        eventTime: '2022-11-28T13:28:06.805Z'
        eventType: PartyInteractionDeleteEvent
        priority: '3'
        timeOcurred: '2022-11-28T13:28:01.622Z'
        title: PartyInteractionDeleteEvent
        event:
          partyInteraction:
            id: '123'
            href: 'http://servername/partyInteraction/123'
            '@type': PartyInteraction
        reportingSystem:
          id: '661'
          name: APP-835
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '616'
          name: APP-817
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PartyInteractionDeleteEvent
      description: Message example for PartyInteractionDeleteEvent event
    StatusChange_request:
      value:
        correlationId: 35f7891f-e893
        description: PartyInteractionStatusChangeEvent illustration
        domain: Commercial
        eventId: 4975-80c8-6a2143c1038d
        eventTime: '2022-11-28T13:28:06.819Z'
        eventType: PartyInteractionStatusChangeEvent
        priority: '3'
        timeOcurred: '2022-11-28T13:28:00.198Z'
        title: PartyInteractionStatusChangeEvent
        event:
          partyInteraction:
            id: '123'
            href: 'http://servername/partyInteraction/123'
            '@type': PartyInteraction
            status: ongoing
            statusChangeDate: '2019-10-02T11:53:21.789Z'
        reportingSystem:
          id: '661'
          name: APP-835
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '616'
          name: APP-817
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': PartyInteractionStatusChangeEvent
      description: Message example for PartyInteractionStatusChangeEvent event