openapi: 3.0.1
info:
  title: Quote
  description: >+
    **TMF API Reference : TMF 648 - Quote **


    ** September 2023**


    The Quote API provides a standardized mechanism for placing a quote with all of the necessary
    parameters. The API consists of a simple set of operations that interact with CRM/Quote/Pricing
    Negotiation systems in a consistent manner. A Quote is created based on product offering(s) that
    is(are) defined in a catalog. The quote identifies the product or set of products that are
    available to a customer for pricing request, and includes product characteristics.


    The Quote references the product offer(s) which (future) customer request pricing.

    Quote resource features authorization subclass to manage special pricing UC requiring
    authorization tracking management


    **Quote resource**

    A Quote can be used to request pricing between a customer and a service provider or between a
    service provider and a partner and vice versa. Main quote attributes are its identifier, state,
    priority, related dates (requested, expected, valid, completion, etc.), related parties and
    quote items. Main Quote Items attributes are the discribed offering and product characteristics
    with the related action to be performed (e.g. add, change or delete the products), location
    information, and product characteristics.


    Quote API performs the following operations on Quote :


    - Retrieval of a quote or a collection of quotes depending on filter criteria

    - Partial update of a quote (including updating rules)

    - Creation of a quote (including default values and creation rules)

    - Deletion of quote (for administration purposes)

    - Notification of events on quote.


    Copyright Â© TM Forum 2022. All Rights Reserved

  version: 5.0.0
servers:
  - url: '{apiRoot}/tmf-api/quoteManagement/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot/quoteManagement/v5'
        enum:
          - 'https://serverRoot/quoteManagement/v5'
tags:
  - name: quote
    description: Operations for Quote Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    get:
      operationId: hubGet
      summary: Retrieve a subscription (hub)
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/quoteAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QuoteAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification QuoteAttributeValueChangeEvent
      operationId: quoteAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/QuoteAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/quoteCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QuoteCreateEvent
      description: Example of a client listener for receiving the notification QuoteCreateEvent
      operationId: quoteCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/QuoteCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/quoteDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QuoteDeleteEvent
      description: Example of a client listener for receiving the notification QuoteDeleteEvent
      operationId: quoteDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/QuoteDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/quoteInformationRequiredEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QuoteInformationRequiredEvent
      description: Example of a client listener for receiving the notification QuoteInformationRequiredEvent
      operationId: quoteInformationRequiredEvent
      requestBody:
        $ref: '#/components/requestBodies/QuoteInformationRequiredEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/quoteStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QuoteStateChangeEvent
      description: Example of a client listener for receiving the notification QuoteStateChangeEvent
      operationId: quoteStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/QuoteStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /quote:
    get:
      tags:
        - quote
      summary: List or find Quote objects
      description: List or find Quote objects
      operationId: listQuote
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200QuoteArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - quote
      summary: Creates a Quote
      description: This operation creates a Quote entity.
      operationId: createQuote
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Quote_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201Quote'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/quote/{id}':
    get:
      tags:
        - quote
      summary: Retrieves a Quote by ID
      description: >-
        This operation retrieves a Quote entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrieveQuote
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200Quote_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - quote
      summary: Deletes a Quote
      description: This operation deletes a Quote entity.
      operationId: deleteQuote
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - quote
      summary: Updates partially a Quote
      description: This operation updates partially a Quote entity.
      operationId: patchQuote
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/Quote_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200Quote_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_MVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
    Addressable:
      type: object
      description: Base schema for addressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    AgreementItemRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef'
    AgreementItemRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
          required:
            - agreementId
            - agreementItemId
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_FVO'
    AgreementItemRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_MVO'
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    AppointmentRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: 'Refers an appointment, such as a Customer presentation or internal meeting or site visit'
          properties:
            description:
              type: string
              description: An explanatory text regarding the appointment made with a party
      discriminator:
        propertyName: '@type'
        mapping:
          AppointmentRef: '#/components/schemas/AppointmentRef'
    AppointmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: 'Refers an appointment, such as a Customer presentation or internal meeting or site visit'
          properties:
            description:
              type: string
              description: An explanatory text regarding the appointment made with a party
      discriminator:
        propertyName: '@type'
        mapping:
          AppointmentRef: '#/components/schemas/AppointmentRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    Authorization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            If special discount or special product offering price or specific condition need an
            approval for ISP sale representative it is described here.
          properties:
            givenDate:
              type: string
              format: date-time
              description: Date when the authorization (approved or declined) was done
            name:
              type: string
              description: Name of the required authorization
            requestedDate:
              type: string
              format: date-time
              description: Date when the authorization is requested for
            signatureRepresentation:
              type: string
              description: To describe a digital or manual signature
            state:
              type: string
              description: 'State of the authorization, such as: approved or declined'
            approver:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          Authorization: '#/components/schemas/Authorization'
    Authorization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            If special discount or special product offering price or specific condition need an
            approval for ISP sale representative it is described here.
          properties:
            givenDate:
              type: string
              format: date-time
              description: Date when the authorization (approved or declined) was done
            name:
              type: string
              description: Name of the required authorization
            requestedDate:
              type: string
              format: date-time
              description: Date when the authorization is requested for
            signatureRepresentation:
              type: string
              description: To describe a digital or manual signature
            state:
              type: string
              description: 'State of the authorization, such as: approved or declined'
            approver:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Authorization: '#/components/schemas/Authorization_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
              description: The event linked to the involved resource object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occurred.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BillingAccountRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef'
    BillingAccountRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef_MVO'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Boolean(s).
              items:
                type: boolean
                description: Characteristic item boolean value
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    BusinessPartner_MVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    CalendarPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod'
    CalendarPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
          required:
            - status
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_FVO'
    CalendarPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            The CalendarPeriod schema represents a period of time within a calendar, defining
            various attributes such as the applicable day, timezone, hour period, and status. It is
            designed to capture information about the availability or status of a calendar period,
            which can be used in scheduling, booking, or resource allocation applications.
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              description: Collection of hour intervals
              items:
                $ref: '#/components/schemas/HourPeriod_MVO'
            status:
              type: string
              description: >-
                Indication of the availability of the calendar period (e.g.: available, booked,
                etc.)
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Describes a given characteristic of an object or entity through a name/value pair. This
            is an abstract base class, the actual value is in one of the strongly-typed subclasses :
            StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic,
            NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic,
            ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic,
            IntegerArrayCharacteristic...
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              description: Collection of characteristic relationships
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Consumer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
          EmailContactMedium: '#/components/schemas/EmailContactMedium'
          FaxContactMedium: '#/components/schemas/FaxContactMedium'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium'
          SocialContactMedium: '#/components/schemas/SocialContactMedium'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Indicates the contact medium that could be used to contact the party. This is an
            abstract base class, the actual value is in one of the strongly-typed subclasses :
            EmailContactMedium, FaxContactMedium, PhoneContactMedium,
            GeographicAddressContactMedium, SocialMediaContactMedium...
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualify it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_MVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_MVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_MVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_MVO'
          SocialContactMedium: '#/components/schemas/SocialContactMedium_MVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    Duration:
      type: object
      description: A time interval in a given unit of time
      properties:
        amount:
          type: integer
          description: 'Time interval (number of seconds, minutes, hours, etc.)'
        units:
          type: string
          description: 'Unit of time (seconds, minutes, hours, etc.)'
    EmailContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    EmailContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRelationship:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    EntityRelationship_FVO:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
      required:
        - relationshipType
        - id
        - '@referredType'
        - '@type'
    EntityRelationship_MVO:
      type: object
      description: A uni-directional relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanation of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              description: Collection of analytic characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    FaxContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FaxContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    Feature:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature'
    FeatureRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship'
    FeatureRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_FVO'
    FeatureRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_MVO'
    Feature_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship_FVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_FVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_FVO'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature_FVO'
    Feature_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              description: Collection of feature relationships
              items:
                $ref: '#/components/schemas/FeatureRelationship_MVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            policyConstraint:
              description: Reference to manage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_MVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_MVO'
          GeographicSiteFeature: '#/components/schemas/GeographicSiteFeature_MVO'
    GeographicAddress:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicAddressContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef'
    GeographicAddressContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef_MVO'
    GeographicAddressRef:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
    GeographicAddressRef_MVO:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_MVO'
    GeographicAddressRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the related geographic address. This identifier serves as a
                reference to uniquely identify the associated geographic address within the system.
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship'
    GeographicAddressRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the related geographic address. This identifier serves as a
                reference to uniquely identify the associated geographic address within the system.
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship_FVO'
    GeographicAddressRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The GeographicAddressRelationship schema represents a relationship between geographic
            addresses. It defines the structure for storing information about how two geographic
            addresses are related to each other within a system.
          properties:
            id:
              type: string
              description: >-
                Unique identifier of the related geographic address. This identifier serves as a
                reference to uniquely identify the associated geographic address within the system.
            name:
              type: string
              description: >-
                Name of the geographic address. This attribute provides a human-readable name or
                label for the related geographic address, which can help users identify and
                differentiate between different addresses.
            relationshipType:
              type: string
              description: >-
                Type of relationship between the geographic addresses. This attribute specifies the
                nature of the relationship between the related addresses. It provides context for
                understanding how the addresses are related to each other.
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRelationship: '#/components/schemas/GeographicAddressRelationship_MVO'
    GeographicAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_FVO'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress_FVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue_FVO'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship_FVO'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_MVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_MVO'
            geographicSubAddress:
              type: array
              description: Collection of sub addresses
              items:
                $ref: '#/components/schemas/GeographicSubAddress_MVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
            geographicSite:
              $ref: '#/components/schemas/GeographicSiteRefOrValue_MVO'
            geographicAddressRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicAddressRelationship_MVO'
              description: >-
                A list of geographic addresses relationships. Represents a relationship between
                geographic addresses
    GeographicLocation:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicLocationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicLocationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocation_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicLocation_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              $ref: '#/components/schemas/bbox'
    GeographicSite:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature'
    GeographicSiteFeature:
      allOf:
        - $ref: '#/components/schemas/Feature'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features.
                example: Access Information
    GeographicSiteFeature_FVO:
      allOf:
        - $ref: '#/components/schemas/Feature_FVO'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features.
                example: Access Information
    GeographicSiteFeature_MVO:
      allOf:
        - $ref: '#/components/schemas/Feature_MVO'
        - type: object
          description: >-
            Geographic Site Feature captures  various site information, ranging from survey data to
            safety guidelines and hazard information
          properties:
            validFor:
              type: array
              description: Collection of validity information
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            note:
              type: array
              description: Collection of notes
              items:
                $ref: '#/components/schemas/Note_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
              description: The associated party or partyRole
              minItems: 1
            featureCategory:
              type: array
              description: Collection of feature category
              items:
                type: string
                description: >-
                  This parameter represents a feature category which may be assigned to certain
                  groups of features.
                example: Access Information
    GeographicSiteRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicSiteRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicSiteRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'
    GeographicSiteRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicSite entity and not the GeographicSiteRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicSiteRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_MVO'
    GeographicSiteRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRef: '#/components/schemas/GeographicSiteRef_MVO'
    GeographicSiteRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSiteRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Details of geographic site relationship
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSite_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_FVO'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_FVO'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature_FVO'
    GeographicSite_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            It defines a Site as a convenience class that allows to easily refer to places important
            to other entities
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
              example: BTS
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
              example: '2024-09-23T00:00:00Z'
            description:
              type: string
              description: Text describing additional information regarding the site
              example: GeographiSite for the base station BS-9283
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
              example: planned
            relatedParty:
              type: array
              description: Related parties collection
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            calendar:
              type: array
              description: Collection of calendar items
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            place:
              type: array
              description: Collection of place objects
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_MVO'
            siteRelationship:
              type: array
              description: Collection of site siteRelationships
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_MVO'
            siteCategory:
              type: string
              description: Site classification/category.
              example: ShoppingUnit
            contactMedium:
              type: array
              description: Collection of contact information
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            siteFeature:
              type: array
              description: Collection of site features
              items:
                $ref: '#/components/schemas/GeographicSiteFeature_MVO'
    GeographicSubAddress:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
          required:
            - subUnitNumber
            - subUnitType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
    GeographicSubAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_FVO'
    GeographicSubAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_MVO'
    HourPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Hour interval
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod'
    HourPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Hour interval
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_MVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_MVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Integer(s).
              items:
                type: integer
                description: Characteristic value
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    Intent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent'
    IntentExpression:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: An Intent expression
          properties:
            iri:
              type: string
              description: Internationalized Resource Identifier of the intent Expression
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression'
    IntentExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: An Intent expression
          properties:
            iri:
              type: string
              description: Internationalized Resource Identifier of the intent Expression
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_MVO'
    IntentRef:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
    IntentRefOrValue:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent'
    IntentRefOrValue_FVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent_FVO'
    IntentRefOrValue_MVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef_MVO'
        - $ref: '#/components/schemas/Intent_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
          Intent: '#/components/schemas/Intent_MVO'
    IntentRef_MVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
    Intent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_FVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_FVO'
    Intent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_MVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              description: Collection of characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_MVO'
    ItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the entity managed by the item
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    LanguageAbility:
      type: object
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: >-
            A âtrueâ value specifies whether the language is considered by the individual as his
            favourite one
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    LineString:
      type: object
      description: 'GeoJSON: A collection of Points forming a connected line'
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          $ref: '#/components/schemas/lineString'
    Money:
      type: object
      description: A base / value business entity used to represent money
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: >-
            A signed floating point number, the meaning of the sign is according to the context of
            the API that uses this Data type
    MultiLineString:
      type: object
      description: 'GeoJSON: A collection of distinct LineStrings'
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          $ref: '#/components/schemas/lineString'
    MultiPoint:
      type: object
      description: 'GeoJSON: A collection of Points'
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          $ref: '#/components/schemas/positionArray'
    MultiPolygon:
      type: object
      description: 'GeoJSON: A collection of Polygons'
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          $ref: '#/components/schemas/multiPolygon'
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              description: A characteristic which value is an array of Number(s).
              items:
                type: number
                description: Characteristic value
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              description: Collection of characteristic values
              items:
                type: object
                description: Characteristic value
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
    OrganizationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_MVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_MVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OtherNameIndividual:
      type: object
      description: >-
        Keeps track of other names, for example the old name of a woman before marriage or an artist
        name.
      properties:
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl, etc.'
        generation:
          type: string
          description: 'e.g. Sr, Jr, etc.'
        givenName:
          type: string
          description: First name
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the person prefers to be addressed. Note: This name
            may be a name other than a given name, such as a nickname
        familyNamePrefix:
          type: string
          description: Family name prefix
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        fullName:
          type: string
          description: 'Full name flatten (first, middle, and last names)'
        formattedName:
          type: string
          description: >-
            . A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese,
            Korean, etc.)
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
    OtherNameOrganization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
    PartyCreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
    PartyOrPartyRole:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyOrPartyRole_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyOrPartyRole_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/Individual_MVO'
        - $ref: '#/components/schemas/Organization_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO'
        - $ref: '#/components/schemas/Supplier_MVO'
        - $ref: '#/components/schemas/BusinessPartner_MVO'
        - $ref: '#/components/schemas/Consumer_MVO'
        - $ref: '#/components/schemas/Producer_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRoleSpecificationRef:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
    PartyRoleSpecificationRef_MVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_MVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              description: Collection of accounts
              items:
                $ref: '#/components/schemas/AccountRef_MVO'
            agreement:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementRef_MVO'
            contactMedium:
              type: array
              description: Collection of contact mediums
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            paymentMethod:
              type: array
              description: Collection of payment methods
              items:
                $ref: '#/components/schemas/PaymentMethodRef_MVO'
            creditProfile:
              type: array
              description: Collection of credit profiles
              items:
                $ref: '#/components/schemas/CreditProfile_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_MVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
    PaymentMethodRef:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRef_MVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
    PhoneContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    PhoneContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    Place:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place'
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
    PlaceRef:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicAddress'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO'
        - $ref: '#/components/schemas/PlaceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    PlaceRef_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    Place_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
    Place_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Place reference.
          properties:
            externalIdentifier:
              type: array
              description: Collection of external identifiers
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
    Point:
      type: object
      description: 'GeoJSON: A single position'
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/position'
    PolicyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef'
    PolicyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
    PolicyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_MVO'
    Polygon:
      type: object
      description: 'GeoJSON: An array of linear rings'
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          $ref: '#/components/schemas/polygon'
    Price:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price'
    PriceAlteration:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price'
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration'
    PriceAlteration_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price'
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_FVO'
    PriceAlteration_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_MVO'
    Price_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price_MVO'
    Producer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Producer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Producer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Product:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product'
    ProductOfferingPriceRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductPriceOffering reference. An amount, usually of money, that is asked for or
            allowed when a ProductOffering is bought, rented, or leased
          properties:
            version:
              type: string
              description: Version of the product offering price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef'
    ProductOfferingPriceRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductPriceOffering reference. An amount, usually of money, that is asked for or
            allowed when a ProductOffering is bought, rented, or leased
          properties:
            version:
              type: string
              description: Version of the product offering price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef_MVO'
    ProductOfferingQualificationItemRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a productOfferingQualification item that has been executed previously.
          properties:
            productOfferingQualificationName:
              type: string
              description: Name of the related entity.
            productOfferingQualificationHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            productOfferingQualificationId:
              type: string
              description: Unique identifier of a related entity.
            itemId:
              type: string
              description: Id of an item of a product offering qualification
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationItemRef: '#/components/schemas/ProductOfferingQualificationItemRef'
    ProductOfferingQualificationItemRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a productOfferingQualification item that has been executed previously.
          properties:
            productOfferingQualificationName:
              type: string
              description: Name of the related entity.
            productOfferingQualificationHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            productOfferingQualificationId:
              type: string
              description: Unique identifier of a related entity.
            itemId:
              type: string
              description: Id of an item of a product offering qualification
          required:
            - productOfferingQualificationId
            - itemId
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationItemRef: '#/components/schemas/ProductOfferingQualificationItemRef_FVO'
    ProductOfferingQualificationItemRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a productOfferingQualification item that has been executed previously.
          properties:
            productOfferingQualificationName:
              type: string
              description: Name of the related entity.
            productOfferingQualificationHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            productOfferingQualificationId:
              type: string
              description: Unique identifier of a related entity.
            itemId:
              type: string
              description: Id of an item of a product offering qualification
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationItemRef: '#/components/schemas/ProductOfferingQualificationItemRef_MVO'
    ProductOfferingQualificationRef:
      type: object
      description: A productOfferingQualification that has been executed previously
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationRef: '#/components/schemas/ProductOfferingQualificationRef'
    ProductOfferingQualificationRef_MVO:
      type: object
      description: A productOfferingQualification that has been executed previously
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingQualificationRef: '#/components/schemas/ProductOfferingQualificationRef_MVO'
    ProductOfferingRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef'
    ProductOfferingRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductOffering reference. A product offering represents entities that are orderable
            from the provider of the catalog, this resource includes pricing information.
          properties:
            version:
              type: string
              description: Version of the product offering
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef_MVO'
    ProductPrice:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice'
    ProductPrice_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration_FVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_FVO'
    ProductPrice_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price_MVO'
            priceAlteration:
              type: array
              description: Collection of price changes
              items:
                $ref: '#/components/schemas/PriceAlteration_MVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_MVO'
    ProductRef:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product'
        - $ref: '#/components/schemas/ProductRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product'
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product_FVO'
        - $ref: '#/components/schemas/ProductRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_FVO'
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Product
        entity and not the ProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Product_MVO'
        - $ref: '#/components/schemas/ProductRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_MVO'
          ProductRef: '#/components/schemas/ProductRef_MVO'
    ProductRef_MVO:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_MVO'
    ProductRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship'
    ProductRelationshipType:
      enum:
        - migratesTo
        - bundles
        - bundledBy
        - reliesOn
        - enables
        - requires
        - dependsOn
        - brings
      type: string
      description: >-
        Possible values for product relationship - This is informative information and
        implementation are free to use distinct.
    ProductRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_FVO'
    ProductRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_MVO'
    ProductSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef'
    ProductSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_FVO'
    ProductSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_MVO'
    ProductStatusType:
      enum:
        - created
        - pendingActive
        - cancelled
        - active
        - pendingTerminate
        - terminated
        - suspended
        - 'aborted '
      type: string
      description: Possible values for the status of the product
    ProductTerm:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm'
    ProductTerm_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm_MVO'
    Product_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef_FVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem_FVO'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue_FVO'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice_FVO'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship_FVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_FVO'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_FVO'
    Product_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            agreementItem:
              type: array
              description: Collection of agreements
              items:
                $ref: '#/components/schemas/AgreementItemRef_MVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              description: Collection of product characteristics
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            productOrderItem:
              type: array
              description: Collection of product order items
              items:
                $ref: '#/components/schemas/RelatedOrderItem_MVO'
            product:
              type: array
              description: Collection of products
              items:
                $ref: '#/components/schemas/ProductRefOrValue_MVO'
            productPrice:
              type: array
              description: Collection of product prices
              items:
                $ref: '#/components/schemas/ProductPrice_MVO'
            productRelationship:
              type: array
              description: Collection of product relationships
              items:
                $ref: '#/components/schemas/ProductRelationship_MVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_MVO'
            productTerm:
              type: array
              description: Collection of product terms
              items:
                $ref: '#/components/schemas/ProductTerm_MVO'
            realizingResource:
              type: array
              description: Collection of realizing resources
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            realizingService:
              type: array
              description: Collection of realizing services
              items:
                $ref: '#/components/schemas/ServiceRef_MVO'
            relatedParty:
              type: array
              description: Collection of related parties
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            place:
              type: array
              description: Collection of places
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/Product_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    Quote:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Quote can be used to negotiate service and product acquisition or modification between a
            customer and a service provider. Quote contain list of quote items, a reference to
            customer (partyRole), a list of productOffering and attached prices and conditions.
          properties:
            agreement:
              type: array
              description: A reference to an agreement defining the context of the quote
              items:
                $ref: '#/components/schemas/AgreementRef'
            billingAccount:
              type: array
              description: 'A reference to a billing account to provide quote context information '
              items:
                $ref: '#/components/schemas/BillingAccountRef'
            category:
              type: string
              description: >-
                Used to categorize the quote from a business perspective that can be useful for the
                CRM system (e.g. "enterprise", "residential", ...)
            contactMedium:
              type: array
              description: Information contact related to the quote requester
              items:
                $ref: '#/components/schemas/ContactMedium'
            description:
              type: string
              description: Description of the quote
            expectedFulfillmentStartDate:
              type: string
              format: date-time
              description: This is the date wished by the requester to have the requested quote item delivered
            expectedQuoteCompletionDate:
              type: string
              format: date-time
              description: >-
                This is expected date - from quote supplier - to be able to send back  a response
                for this quote
            externalId:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            instantSyncQuote:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that requester expects to get
                quoting result immediately in the response. If the indicator is true then the
                response code of 200 indicates the operation is successful otherwise a task is
                created with a response 201.
            note:
              type: array
              description: Free form text associated with the quote
              items:
                $ref: '#/components/schemas/Note'
            authorization:
              type: array
              description: An authorization provided for the quote
              items:
                $ref: '#/components/schemas/Authorization'
            quoteTotalPrice:
              type: array
              description: Quote total price
              items:
                $ref: '#/components/schemas/QuotePrice'
            relatedParty:
              type: array
              description: >-
                A reference to a party playing a role in this quote (customer, seller, requester,
                etc.)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            productOfferingQualification:
              type: array
              description: A reference to a previously done product offering qualification
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationRef'
            requestedQuoteCompletionDate:
              type: string
              format: date-time
              description: >-
                This is requested date - from quote requester - to get a complete response for this
                quote
            state:
              $ref: '#/components/schemas/QuoteStateType'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: >-
                Quote version - if the customer rejected the quote but  negotiations still open a
                new version of the quote is managed
            quoteItem:
              type: array
              description: >-
                A quote items describe an action to be performed on a productOffering or a product
                in order to get pricing elements and condition.
              items:
                $ref: '#/components/schemas/QuoteItem'
              minItems: 1
            creationDate:
              type: string
              format: date-time
              description: Date and time when the quote was created
            effectiveQuoteCompletionDate:
              type: string
              format: date-time
              description: Date when the quote has been completed
      discriminator:
        propertyName: '@type'
        mapping:
          Quote: '#/components/schemas/Quote'
    QuoteAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QuoteAttributeValueChange structure
          properties:
            event:
              $ref: '#/components/schemas/QuoteAttributeValueChangePayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteAttributeValueChangeEvent: '#/components/schemas/QuoteAttributeValueChangeEvent'
    QuoteAttributeValueChangePayload:
      type: object
      description: QuoteAttributeValueChangePayload generic structure
      properties:
        quote:
          $ref: '#/components/schemas/Quote'
    QuoteCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QuoteCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QuoteCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteCreateEvent: '#/components/schemas/QuoteCreateEvent'
    QuoteCreateEventPayload:
      type: object
      description: QuoteCreateEventPayload
      properties:
        quote:
          $ref: '#/components/schemas/Quote'
    QuoteDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QuoteDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QuoteDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteDeleteEvent: '#/components/schemas/QuoteDeleteEvent'
    QuoteDeleteEventPayload:
      type: object
      description: Quote Delete
      properties:
        quote:
          $ref: '#/components/schemas/Quote'
    QuoteInformationRequiredEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QuoteInformationRequiredEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QuoteInformationRequiredEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteInformationRequiredEvent: '#/components/schemas/QuoteInformationRequiredEvent'
    QuoteInformationRequiredEventPayload:
      type: object
      description: QuoteInformationRequiredEventPayload generic structure
      properties:
        quote:
          $ref: '#/components/schemas/QuoteRef'
        informationRequired:
          $ref: '#/components/schemas/JsonPatch'
    QuoteItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A quote items describe an action to be performed on a productOffering or a product in
            order to get pricing elements and condition.
          properties:
            action:
              $ref: '#/components/schemas/ItemActionType'
            appointment:
              type: array
              description: A reference to appointment(s) associated with this quote item
              items:
                $ref: '#/components/schemas/AppointmentRef'
            attachment:
              type: array
              description: A reference to attachment(s) associated with this quote item
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            note:
              type: array
              description: Free form text associated with the quote item
              items:
                $ref: '#/components/schemas/Note'
            product:
              $ref: '#/components/schemas/ProductRefOrValue'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            quantity:
              type: integer
              description: Quantity asked for this quote item
            quoteItem:
              type: array
              description: A structure to embedded quote item within quote item
              items:
                $ref: '#/components/schemas/QuoteItem'
            quoteItemAuthorization:
              type: array
              description: Authorization related to this quote item
              items:
                $ref: '#/components/schemas/Authorization'
            quoteItemPrice:
              type: array
              description: Price for this quote item
              items:
                $ref: '#/components/schemas/QuotePrice'
            quoteItemRelationship:
              type: array
              description: A relationship from item within a quote
              items:
                $ref: '#/components/schemas/QuoteItemRelationship'
            productOfferingQualificationItem:
              $ref: '#/components/schemas/ProductOfferingQualificationItemRef'
            state:
              $ref: '#/components/schemas/QuoteStateType'
            relatedParty:
              type: array
              description: A reference to a party playing a role in this quote item
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            id:
              type: string
              description: 'Identifier of the quote item (generally it is a sequence number 01, 02, 03, ...)'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteItem: '#/components/schemas/QuoteItem'
    QuoteItemRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Used to describe relationship between quote item. These relationship could have an
            impact on pricing and conditions
          properties:
            id:
              type: string
              description: Id of the related quote item (must be in the same quote)
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteItemRelationship: '#/components/schemas/QuoteItemRelationship'
    QuoteItemRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Used to describe relationship between quote item. These relationship could have an
            impact on pricing and conditions
          properties:
            id:
              type: string
              description: Id of the related quote item (must be in the same quote)
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteItemRelationship: '#/components/schemas/QuoteItemRelationship_FVO'
    QuoteItemRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Used to describe relationship between quote item. These relationship could have an
            impact on pricing and conditions
          properties:
            id:
              type: string
              description: Id of the related quote item (must be in the same quote)
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteItemRelationship: '#/components/schemas/QuoteItemRelationship_MVO'
    QuoteItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A quote items describe an action to be performed on a productOffering or a product in
            order to get pricing elements and condition.
          properties:
            action:
              $ref: '#/components/schemas/ItemActionType'
            appointment:
              type: array
              description: A reference to appointment(s) associated with this quote item
              items:
                $ref: '#/components/schemas/AppointmentRef'
            attachment:
              type: array
              description: A reference to attachment(s) associated with this quote item
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            note:
              type: array
              description: Free form text associated with the quote item
              items:
                $ref: '#/components/schemas/Note'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_FVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            quantity:
              type: integer
              description: Quantity asked for this quote item
            quoteItem:
              type: array
              description: A structure to embedded quote item within quote item
              items:
                $ref: '#/components/schemas/QuoteItem_FVO'
            quoteItemRelationship:
              type: array
              description: A relationship from item within a quote
              items:
                $ref: '#/components/schemas/QuoteItemRelationship_FVO'
            productOfferingQualificationItem:
              $ref: '#/components/schemas/ProductOfferingQualificationItemRef_FVO'
            relatedParty:
              type: array
              description: A reference to a party playing a role in this quote item
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            id:
              type: string
              description: 'Identifier of the quote item (generally it is a sequence number 01, 02, 03, ...)'
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteItem: '#/components/schemas/QuoteItem_FVO'
    QuoteItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A quote items describe an action to be performed on a productOffering or a product in
            order to get pricing elements and condition.
          properties:
            action:
              $ref: '#/components/schemas/ItemActionType'
            appointment:
              type: array
              description: A reference to appointment(s) associated with this quote item
              items:
                $ref: '#/components/schemas/AppointmentRef_MVO'
            attachment:
              type: array
              description: A reference to attachment(s) associated with this quote item
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            note:
              type: array
              description: Free form text associated with the quote item
              items:
                $ref: '#/components/schemas/Note_MVO'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_MVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            quantity:
              type: integer
              description: Quantity asked for this quote item
            quoteItem:
              type: array
              description: A structure to embedded quote item within quote item
              items:
                $ref: '#/components/schemas/QuoteItem_MVO'
            quoteItemAuthorization:
              type: array
              description: Authorization related to this quote item
              items:
                $ref: '#/components/schemas/Authorization_MVO'
            quoteItemPrice:
              type: array
              description: Price for this quote item
              items:
                $ref: '#/components/schemas/QuotePrice_MVO'
            quoteItemRelationship:
              type: array
              description: A relationship from item within a quote
              items:
                $ref: '#/components/schemas/QuoteItemRelationship_MVO'
            productOfferingQualificationItem:
              $ref: '#/components/schemas/ProductOfferingQualificationItemRef_MVO'
            state:
              $ref: '#/components/schemas/QuoteStateType'
            relatedParty:
              type: array
              description: A reference to a party playing a role in this quote item
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            id:
              type: string
              description: 'Identifier of the quote item (generally it is a sequence number 01, 02, 03, ...)'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteItem: '#/components/schemas/QuoteItem_MVO'
    QuotePrice:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the quote/quote item price
            name:
              type: string
              description: Name of the quote /quote item price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..)'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              items:
                $ref: '#/components/schemas/PriceAlteration'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          QuotePrice: '#/components/schemas/QuotePrice'
    QuotePrice_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the quote/quote item price
            name:
              type: string
              description: Name of the quote /quote item price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..)'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price_MVO'
            priceAlteration:
              type: array
              items:
                $ref: '#/components/schemas/PriceAlteration_MVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          QuotePrice: '#/components/schemas/QuotePrice_MVO'
    QuoteRef:
      type: object
      description: Quote reference. It's a Quote that has been executed previously.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteRef: '#/components/schemas/QuoteRef'
    QuoteStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QuoteStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QuoteStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QuoteStateChangeEvent: '#/components/schemas/QuoteStateChangeEvent'
    QuoteStateChangeEventPayload:
      type: object
      description: QuoteStateChangeEventPayload generic structure
      properties:
        quote:
          $ref: '#/components/schemas/Quote'
    QuoteStateType:
      enum:
        - acknowledged
        - rejected
        - pending
        - inProgress
        - cancelled
        - approved
        - accepted
        - declined
      type: string
      description: Possible values for the state of the quote
    Quote_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Quote can be used to negotiate service and product acquisition or modification between a
            customer and a service provider. Quote contain list of quote items, a reference to
            customer (partyRole), a list of productOffering and attached prices and conditions.
          properties:
            agreement:
              type: array
              description: A reference to an agreement defining the context of the quote
              items:
                $ref: '#/components/schemas/AgreementRef'
            billingAccount:
              type: array
              description: 'A reference to a billing account to provide quote context information '
              items:
                $ref: '#/components/schemas/BillingAccountRef'
            category:
              type: string
              description: >-
                Used to categorize the quote from a business perspective that can be useful for the
                CRM system (e.g. "enterprise", "residential", ...)
            contactMedium:
              type: array
              description: Information contact related to the quote requester
              items:
                $ref: '#/components/schemas/ContactMedium'
            description:
              type: string
              description: Description of the quote
            expectedFulfillmentStartDate:
              type: string
              format: date-time
              description: This is the date wished by the requester to have the requested quote item delivered
            externalId:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            instantSyncQuote:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that requester expects to get
                quoting result immediately in the response. If the indicator is true then the
                response code of 200 indicates the operation is successful otherwise a task is
                created with a response 201.
            note:
              type: array
              description: Free form text associated with the quote
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              description: >-
                A reference to a party playing a role in this quote (customer, seller, requester,
                etc.)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            productOfferingQualification:
              type: array
              description: A reference to a previously done product offering qualification
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationRef'
            requestedQuoteCompletionDate:
              type: string
              format: date-time
              description: >-
                This is requested date - from quote requester - to get a complete response for this
                quote
            version:
              type: string
              description: >-
                Quote version - if the customer rejected the quote but  negotiations still open a
                new version of the quote is managed
            quoteItem:
              type: array
              description: >-
                A quote items describe an action to be performed on a productOffering or a product
                in order to get pricing elements and condition.
              items:
                $ref: '#/components/schemas/QuoteItem_FVO'
              minItems: 1
          required:
            - quoteItem
            - instantSyncQuote
      discriminator:
        propertyName: '@type'
        mapping:
          Quote: '#/components/schemas/Quote_FVO'
    Quote_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Quote can be used to negotiate service and product acquisition or modification between a
            customer and a service provider. Quote contain list of quote items, a reference to
            customer (partyRole), a list of productOffering and attached prices and conditions.
          properties:
            agreement:
              type: array
              description: A reference to an agreement defining the context of the quote
              items:
                $ref: '#/components/schemas/AgreementRef_MVO'
            billingAccount:
              type: array
              description: 'A reference to a billing account to provide quote context information '
              items:
                $ref: '#/components/schemas/BillingAccountRef_MVO'
            category:
              type: string
              description: >-
                Used to categorize the quote from a business perspective that can be useful for the
                CRM system (e.g. "enterprise", "residential", ...)
            contactMedium:
              type: array
              description: Information contact related to the quote requester
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            description:
              type: string
              description: Description of the quote
            expectedFulfillmentStartDate:
              type: string
              format: date-time
              description: This is the date wished by the requester to have the requested quote item delivered
            expectedQuoteCompletionDate:
              type: string
              format: date-time
              description: >-
                This is expected date - from quote supplier - to be able to send back  a response
                for this quote
            externalId:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            note:
              type: array
              description: Free form text associated with the quote
              items:
                $ref: '#/components/schemas/Note_MVO'
            authorization:
              type: array
              description: An authorization provided for the quote
              items:
                $ref: '#/components/schemas/Authorization_MVO'
            quoteTotalPrice:
              type: array
              description: Quote total price
              items:
                $ref: '#/components/schemas/QuotePrice_MVO'
            relatedParty:
              type: array
              description: >-
                A reference to a party playing a role in this quote (customer, seller, requester,
                etc.)
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            productOfferingQualification:
              type: array
              description: A reference to a previously done product offering qualification
              items:
                $ref: '#/components/schemas/ProductOfferingQualificationRef_MVO'
            requestedQuoteCompletionDate:
              type: string
              format: date-time
              description: >-
                This is requested date - from quote requester - to get a complete response for this
                quote
            state:
              $ref: '#/components/schemas/QuoteStateType'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: >-
                Quote version - if the customer rejected the quote but  negotiations still open a
                new version of the quote is managed
            quoteItem:
              type: array
              description: >-
                A quote items describe an action to be performed on a productOffering or a product
                in order to get pricing elements and condition.
              items:
                $ref: '#/components/schemas/QuoteItem_MVO'
              minItems: 1
            effectiveQuoteCompletionDate:
              type: string
              format: date-time
              description: Date when the quote has been completed
      discriminator:
        propertyName: '@type'
        mapping:
          Quote: '#/components/schemas/Quote_MVO'
    RelatedOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem'
    RelatedOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
          required:
            - role
            - orderId
            - orderItemId
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_FVO'
    RelatedOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a product order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_MVO'
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
    RelatedPartyOrPartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    RelatedPlaceRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
    RelatedPlaceRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_FVO'
          required:
            - role
            - place
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
    RelatedPlaceRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
    ResourceRef:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
    ResourceRef_MVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    Skill:
      type: object
      description: >-
        Skills evaluated for an individual with a level and possibly with a limited validity when an
        obsolescence is defined (Ex: the first-aid certificate first level is limited to one year
        and an update training is required each year to keep the level).
      properties:
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: 'Name of the skill, such as Java language'
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    SocialContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    SocialContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    StandardIdentifier:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier'
    StandardIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_MVO'
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              description: Collection of string characteristics
              items:
                type: string
                description: Characteristic value
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    Supplier:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Supplier_MVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    TargetProductSchema:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
    TargetProductSchema_FVO:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
      required:
        - '@type'
        - '@schemaLocation'
    TargetProductSchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
    TaxDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
    TaxExemptionCertificate_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_MVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    bbox:
      items:
        type: number
      minItems: 4
      type: array
      description: >-
        A bounding box array that contains the geometry. The axes order follows the axes order of
        the geometry
    lineString:
      items:
        $ref: '#/components/schemas/position'
      minItems: 2
      type: array
      description: 'GeoJSON: An array of two or more positions'
    linearRing:
      items:
        $ref: '#/components/schemas/position'
      minItems: 4
      type: array
      description: 'GeoJSON: An array of four or more positions where the first equals the last'
    multiLineString:
      items:
        $ref: '#/components/schemas/lineString'
      minItems: 1
      type: array
      description: 'GeoJSON: One or more lines'
    multiPolygon:
      items:
        $ref: '#/components/schemas/polygon'
      minItems: 1
      type: array
      description: 'GeoJSON: An array of polygons'
    polygon:
      items:
        $ref: '#/components/schemas/linearRing'
      minItems: 1
      type: array
      description: 'GeoJSON: An array of linear rings'
    position:
      items:
        type: number
      minItems: 2
      type: array
      description: 'GeoJSON: A single position'
    positionArray:
      items:
        $ref: '#/components/schemas/position'
      type: array
      description: 'GeoJSON: An array of positions'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    Quote_FVO:
      description: The Quote to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quote_FVO'
          examples:
            CreateQuote:
              $ref: '#/components/examples/CreateQuote_request'
      required: true
    Quote_MVO:
      description: The Quote to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quote_MVO'
          examples:
            updateQuote_using_json:
              $ref: '#/components/examples/updateQuote_using_json_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/Quote_MVO'
          examples:
            updateQuote_using_merge-patch_json:
              $ref: '#/components/examples/updateQuote_using_merge-patch_json_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            updateQuote_using_json-patch_json:
              $ref: '#/components/examples/updateQuote_using_json-patch_json_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            updateQuote_using_json-patch-query_json:
              $ref: '#/components/examples/updateQuote_using_json-patch-query_json_request'
      required: true
    QuoteCreateEvent:
      description: Quote create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteCreateEvent'
          examples:
            QuoteCreateEvent:
              $ref: '#/components/examples/QuoteCreateEvent_request'
      required: true
    QuoteAttributeValueChangeEvent:
      description: Quote attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteAttributeValueChangeEvent'
          examples:
            QuoteAttributeValueChangeEvent:
              $ref: '#/components/examples/QuoteAttributeValueChangeEvent_request'
      required: true
    QuoteStateChangeEvent:
      description: Quote stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteStateChangeEvent'
          examples:
            QuoteStateChangeEvent:
              $ref: '#/components/examples/QuoteStateChangeEvent_request'
      required: true
    QuoteDeleteEvent:
      description: Quote delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteDeleteEvent'
          examples:
            QuoteDeleteEvent:
              $ref: '#/components/examples/QuoteDeleteEvent_request'
      required: true
    QuoteInformationRequiredEvent:
      description: Quote informationRequired Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteInformationRequiredEvent'
          examples:
            QuoteInformationRequiredEvent:
              $ref: '#/components/examples/QuoteInformationRequiredEvent_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
          examples:
            Basic Hub Example Request:
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
                query: data
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Bad Request Error
              value:
                '@type': Error
                code: ERR400
                reason: Bad Request
                message: >-
                  The server could not understand the request due to invalid syntax. Please correct
                  the syntax and try again.
                referenceError: 'https://host/errors'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Unauthorized Error
              value:
                '@type': Error
                code: ERR401
                reason: Unauthorized
                message: >-
                  You are not authorized to access the requested resource. Please provide the
                  correct credentials.
                referenceError: 'https://host/errors'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Forbidden Error
              value:
                '@type': Error
                code: ERR403
                reason: Forbidden
                message: >-
                  You don't have the permission to access the requested resource. It is either
                  read-protected or not readable by the server.
                referenceError: 'https://host/errors'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Found Error
              value:
                '@type': Error
                code: ERR404
                reason: Not Found
                message: The requested URL was not found on the server.
                referenceError: 'https://host/errors'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Method Not allowed Error
              value:
                '@type': Error
                code: ERR405
                reason: Method Not allowed
                message: The method is not allowed for the requested URL.
                referenceError: 'https://host/errors'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Conflict Error
              value:
                '@type': Error
                code: ERR409
                reason: Conflict
                message: >-
                  The request could not be completed due to a conflict with the current state of the
                  target resource.
                referenceError: 'https://host/errors'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Internal Server Error example
              value:
                '@type': Error
                code: ERR500
                reason: Internal Server Error
                message: The server encountered an internal error. Please contact the system administrator.
                referenceError: 'https://host/errors'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Not Implemented Error
              value:
                '@type': Error
                code: ERR501
                reason: The requested operation is not implemented
                message: >-
                  The requested operation is not implemented. Please contact the system
                  administrator.
                referenceError: 'https://host/errors'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Service Unavailable Error
              value:
                '@type': Error
                code: ERR503
                reason: Service Unavailable
                message: The service is currently unavailable. Please try again later.
                referenceError: 'https://host/errors'
    200QuoteArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Quote'
          examples:
            RetrieveQuoteByList:
              $ref: '#/components/examples/RetrieveQuoteByList_response'
            RetrieveQuoteByListwithFieldsSelection:
              $ref: '#/components/examples/RetrieveQuoteByListwithFieldsSelection_response'
    200Quote_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quote'
          examples:
            retrieveById:
              $ref: '#/components/examples/retrieveById_response'
    200Quote_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quote'
          examples:
            updateQuote_using_json:
              $ref: '#/components/examples/updateQuote_using_json_response'
    201Quote:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quote'
          examples:
            CreateQuote:
              $ref: '#/components/examples/CreateQuote_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            basic:
              summary: Error example
              value:
                '@type': Error
                code: ERR001
                reason: Missing information
                message: Please provide the additional example information
                referenceError: 'https://host/errors'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
          examples:
            basic:
              summary: Hub example
              value:
                '@type': Hub
                callback: 'https://host/tmf-api/specificAPIName/v5/listener/specificEventListener'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    retrieveById_response:
      value:
        id: 12dd-78hg
        href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
        '@type': Quote
        category: BSBS Quote
        description: Quote illustration
        effectiveQuoteCompletionDate: '2021-05-13T12:45:12.028Z'
        expectedFulfillmentStartDate: '2021-05-21T12:45:12.028Z'
        expectedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
        externalId:
          - '@type': ExternalIdentifier
            owner: TMF
            externalIdentifierType: Quotenumber
            id: AK1
        instantSyncQuote: false
        quoteDate: '2021-05-06T12:45:12.028Z'
        requestedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
        version: '1'
        agreement:
          - id: 7778-jj56
            href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
            name: Global Agreement
            '@type': AgreementRef
            '@referredType': MassAgreement
        billingAccount:
          - id: BA4569
            href: 'https://host:port/accountManagement/v5/billingAccount/BA4569'
            '@type': BillingAccountRef
        contactMedium:
          - '@type': EmailContactMedium
            id: '1'
            preferred: true
            emailAddress: jean.pontus@PerfectCustomer.com
            validFor:
              startDateTime: '2019-05-06T12:45:12.028Z'
        note:
          - id: '1'
            author: Jean Pontus
            date: '2021-05-06T12:45:12.031Z'
            text: This is a quote request following today call
            '@type': Note
        productOfferingQualification:
          - id: 22ds-ty55
            '@type': ProductOfferingQualificationRef
            href: >-
              https://host:port/productOfferingQualificationManagement/v5/productOfferingQualification/22ds-ty55
        authorization:
          - givenDate: '2021-05-08T12:45:12.031Z'
            name: Discount validation
            '@type': Authorization
            requestedDate: '2021-05-09T12:45:12.031Z'
            signatureRepresentation: Manager approval
            state: validated
            approver:
              - role: B2B Discount approver
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: 45gh-gh89
                  name: Joe Doe
                  '@referredType': Individual
                  '@type': PartyRef
        quoteItem:
          - id: '1'
            '@type': QuoteItem
            action: add
            quantity: 1
            state: approved
            product:
              '@type': Product
              productCharacteristic:
                - '@type': StringCharacteristic
                  id: Char1
                  name: Voice Bundle
                  value: unlimited
                - '@type': ObjectCharacteristic
                  id: Char5
                  name: Data Bundle
                  value:
                    volume: 50
                    unit: Gb/month
              productSpecification:
                id: ssp7-ty89
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/ssp7-ty89'
                name: TMF Tariff Plan
                '@type': ProductSpecificationRef
            productOffering:
              id: 54gg-zza1
              href: 'https://host:port/productCatalogManagement/v5/productSpecification/54gg-zza1'
              name: TMF Tarif Plan 25
              '@type': ProductOfferingRef
            quoteItemPrice:
              - description: Tariff plan 25 fee
                name: Tariff Plan 25 tariff
                priceType: recurring
                recurringChargePeriod: month
                '@type': QuotePrice
                price:
                  '@type': Price
                  taxRate: 16
                  dutyFreeAmount:
                    unit: EUR
                    value: 30
                    '@type': Money
                  taxIncludedAmount:
                    unit: EUR
                    value: 34.8
                    '@type': Money
                priceAlteration:
                  - applicationDuration: 0
                    description: Specific Discount for PerfectCustomer company
                    name: 10% off
                    priceType: recurring
                    priority: 1
                    recurringChargePeriod: month
                    '@type': PriceAlteration
                    price:
                      percentage: 10
                      '@type': Price
          - id: '2'
            '@type': QuoteItem
            action: add
            quantity: 10
            state: approved
            attachment:
              - '@type': Attachment
                attachmentType: brochure
                description: handset brochure
                mimeType: pdf
                name: Handset commercial brochure.pdf
                url: www.tmf_hanset/contentMangement/brochure.pdf
                size:
                  amount: 3.7
                  units: Mb
                validFor:
                  startDateTime: '2021-05-06T12:45:12.031Z'
            product:
              '@type': Product
              productSpecification:
                id: qq45-ytr7
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/qq45-ytr7'
                name: Handset
                '@type': ProductSpecificationRef
                version: '1'
            productOffering:
              id: z789-78ga
              href: 'https://host:port/productCatalogManagement/v5/productOffering/z789-78ga'
              name: TMF handset T9+
              '@type': ProductOfferingRef
            quoteItemPrice:
              - description: Handset
                name: Handset Fee
                priceType: nonRecurring
                '@type': QuotePrice
                price:
                  '@type': Price
                  taxRate: 16
                  dutyFreeAmount:
                    unit: EUR
                    value: 350
                    '@type': Money
                  taxIncludedAmount:
                    unit: EUR
                    value: 406
                    '@type': Money
        relatedParty:
          - role: Buyer Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: qsdd-9888
              name: Jean Pontus
              '@referredType': Individual
              '@type': PartyRef
          - role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '55'
              name: PerfectCustomer
              '@referredType': Organization
              '@type': PartyRef
          - role: Seller Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 45gh-gh89
              name: Joe Doe
              '@referredType': Individual
              '@type': PartyRef
        state: approved
        validFor:
          endDateTime: '2021-05-06T12:45:12.033Z'
          startDateTime: '2021-05-06T12:45:12.033Z'
      description: >-
        Retrieve a quote from its identifier - only a subset of quote attributes (as defined in the
        API) are used in this example.
    RetrieveQuoteByList_response:
      value:
        - href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
          id: 12dd-78hg
          '@type': Quote
          category: BSBS Quote
          description: Quote illustration
          expectedFulfillmentStartDate: '2021-05-21T12:45:12.028Z'
          expectedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
          externalId:
            - '@type': ExternalIdentifier
              owner: TMF
              externalIdentifierType: Quotenumber
              id: AK1
          instantSyncQuote: false
          requestedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
          version: '1'
          agreement:
            - id: 7778-jj56
              href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
              name: Global Agreement
              '@type': AgreementRef
          billingAccount:
            - id: BA4569
              '@type': BillingAccountRef
          contactMedium:
            - '@type': EmailContactMedium
              id: '1'
              preferred: true
              emailAddress: jean.pontus@PerfectCustomer.com
              validFor:
                startDateTime: '2019-05-06T12:45:12.028Z'
          note:
            - id: '1'
              author: Jean Pontus
              date: '2021-05-06T12:45:12.031Z'
              text: This is a quote request following today call
              '@type': Note
          productOfferingQualification:
            - id: 22ds-ty55
              '@type': ProductOfferingQualificationRef
          quoteItem:
            - id: '1'
              '@type': QuoteItem
              action: add
              quantity: 1
              product:
                '@type': Product
                productCharacteristic:
                  - '@type': StringCharacteristic
                    id: Char1
                    name: Voice Bundle
                    value: unlimited
                  - '@type': ObjectCharacteristic
                    id: Char5
                    name: Data Bundle
                    value:
                      volume: 50
                      unit: Gb/month
                productSpecification:
                  id: ssp7-ty89
                  name: TMF Tariff Plan
                  '@type': ProductSpecificationRef
              productOffering:
                id: 54gg-zza1
                name: TMF Tarif Plan 25
                '@type': ProductOfferingRef
            - id: '2'
              '@type': QuoteItem
              action: add
              quantity: 10
              product:
                '@type': Product
                productSpecification:
                  id: qq45-ytr7
                  name: Handset
                  version: '1'
                  '@type': ProductSpecificationRef
              productOffering:
                id: z789-78ga
                name: TMF handset T9+
                '@type': ProductOfferingRef
          relatedParty:
            - role: Buyer Contact
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: qsdd-9888
                name: Jean Pontus
                '@referredType': Individual
                '@type': PartyRef
            - role: Buyer organization
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: '55'
                name: PerfectCustomer
                '@referredType': Organization
                '@type': PartyRef
            - role: Seller Contact
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: 45gh-gh89
                name: Joe Doe
                '@referredType': Individual
                '@type': PartyRef
      description: Retrieve a list of quote(s) - Complete quote representation are sent back.
    RetrieveQuoteByListwithFieldsSelection_response:
      value:
        - id: 9ffg5
          href: .../QuoteManagement/v5/quote/9ffg5
          state: completed
          '@type': Quote
          expectedQuoteCompletionDate: '2019-04-11T14:52:21.823Z'
        - id: 7e41f
          href: .../QuoteManagement/v5/quote/7e41f
          state: completed
          '@type': Quote
          expectedQuoteCompletionDate: '2019-04-18T14:21:31.325Z'
        - id: 32gdd
          href: .../QuoteManagement/v5/quote/32gdd
          state: completed
          '@type': Quote
          expectedQuoteCompletionDate: '2019-04-21T18:08:31.325Z'
        - id: 65k4i
          href: .../QuoteManagement/v5/quote/65k4i
          state: completed
          '@type': Quote
          expectedQuoteCompletionDate: '2019-04-29T10:48:28.325Z'
      description: >-
        Retrieve a list of quote(s) with filter selection - only few attributes are retrieved for
        each quote.
    CreateQuote_request:
      value:
        '@type': Quote
        category: BSBS Quote
        description: Quote illustration
        expectedFulfillmentStartDate: '2021-05-21T12:45:12.028Z'
        externalId:
          - '@type': ExternalIdentifier
            owner: TMF
            externalIdentifierType: Quotenumber
            id: AK1
        instantSyncQuote: false
        requestedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
        version: '1'
        agreement:
          - id: 7778-jj56
            href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
            name: Global Agreement
            '@type': AgreementRef
        billingAccount:
          - id: BA4569
            '@type': BillingAccountRef
        contactMedium:
          - '@type': EmailContactMedium
            contactMediumIdentifier: '11'
            preferred: true
            emailAddress: jean.pontus@PerfectCustomer.com
        note:
          - id: '1'
            author: Jean Pontus
            date: '2021-05-06T12:45:12.031Z'
            text: This is a quote request following today call
            '@type': Note
        productOfferingQualification:
          - id: 22ds-ty55
            '@type': ProductOfferingQualificationRef
        quoteItem:
          - id: '1'
            '@type': QuoteItem
            action: add
            quantity: 1
            product:
              '@type': Product
              productCharacteristic:
                - '@type': StringCharacteristic
                  id: Char1
                  name: Voice Bundle
                  value: unlimited
                - '@type': ObjectCharacteristic
                  id: Char5
                  name: Data Bundle
                  value:
                    volume: 50
                    unit: Gb/month
              productSpecification:
                id: ssp7-ty89
                name: TMF Tariff Plan
                '@type': ProductSpecificationRef
            productOffering:
              id: 54gg-zza1
              name: TMF Tarif Plan 25
              '@type': ProductOfferingRef
          - id: '2'
            '@type': QuoteItem
            action: add
            quantity: 10
            product:
              '@type': Product
              productSpecification:
                id: qq45-ytr7
                name: Handset
                version: '1'
                '@type': ProductSpecificationRef
            productOffering:
              id: z789-78ga
              name: TMF handset T9+
              '@type': ProductOfferingRef
        relatedParty:
          - role: Buyer Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: qsdd-9888
              name: Jean Pontus
              '@referredType': Individual
              '@type': PartyRef
          - role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '55'
              name: PerfectCustomer
              '@referredType': Organization
              '@type': PartyRef
          - role: Seller Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 45gh-gh89
              name: Joe Doe
              '@referredType': Individual
              '@type': PartyRef
      description: POST Quote request example - only a subset of quote attributes are used in this example
    CreateQuote_response:
      value:
        id: 12dd-78hg
        href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
        '@type': Quote
        category: BSBS Quote
        description: Quote illustration
        effectiveQuoteCompletionDate: '2021-05-13T12:45:12.028Z'
        expectedFulfillmentStartDate: '2021-05-21T12:45:12.028Z'
        expectedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
        externalId:
          - '@type': ExternalIdentifier
            owner: TMF
            externalIdentifierType: Quotenumber
            id: AK1
        instantSyncQuote: false
        quoteDate: '2021-05-06T12:45:12.028Z'
        requestedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
        version: '1'
        agreement:
          - id: 7778-jj56
            href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
            name: Global Agreement
            '@type': AgreementRef
        billingAccount:
          - id: BA4569
            href: 'https://host:port/accountManagement/v5/billingAccount/BA4569'
            '@type': BillingAccountRef
        contactMedium:
          - '@type': EmailContactMedium
            contactMediumIdentifier: '11'
            preferred: true
            emailAddress: jean.pontus@PerfectCustomer.com
        note:
          - id: '1'
            author: Jean Pontus
            date: '2021-05-06T12:45:12.031Z'
            text: This is a quote request following today call
            '@type': Note
        productOfferingQualification:
          - id: 22ds-ty55
            '@type': ProductOfferingQualificationRef
            href: >-
              https://host:port/productOfferingQualificationManagement/v5/productOfferingQualification/22ds-ty55
        authorization:
          - givenDate: '2019-05-08T12:45:12.031Z'
            name: Discount validation
            '@type': Authorization
            requestedDate: '2021-05-09T12:45:12.031Z'
            signatureRepresentation: Manager approval
            state: validated
            approver:
              - role: B2B Discount approver
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: 45gh-gh89
                  name: Joe Doe
                  '@referredType': Individual
                  '@type': PartyRef
        quoteItem:
          - id: '1'
            '@type': QuoteItem
            action: add
            quantity: 1
            state: approved
            product:
              '@type': Product
              productCharacteristic:
                - '@type': StringCharacteristic
                  id: Char1
                  name: Voice Bundle
                  value: unlimited
                - '@type': ObjectCharacteristic
                  id: Char5
                  name: Data Bundle
                  value:
                    volume: 50
                    unit: Gb/month
              productSpecification:
                id: ssp7-ty89
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/ssp7-ty89'
                name: TMF Tariff Plan
                '@type': ProductSpecificationRef
            productOffering:
              id: 54gg-zza1
              href: 'https://host:port/productCatalogManagement/v5/productSpecification/54gg-zza1'
              name: TMF Tarif Plan 25
              '@type': ProductOfferingRef
            quoteItemPrice:
              - description: Tariff plan 25 fee
                name: Tariff Plan 25 tariff
                priceType: recurring
                recurringChargePeriod: month
                '@type': QuotePrice
                price:
                  '@type': Price
                  taxRate: 16
                  dutyFreeAmount:
                    unit: EUR
                    value: 30
                    '@type': Money
                  taxIncludedAmount:
                    unit: EUR
                    value: 34.8
                    '@type': Money
                priceAlteration:
                  - applicationDuration: 0
                    description: Specific Discount for PerfectCustomer company
                    name: 10% off
                    priceType: recurring
                    priority: 1
                    recurringChargePeriod: month
                    '@type': PriceAlteration
                    price:
                      percentage: 10
                      '@type': Price
          - id: '2'
            '@type': QuoteItem
            action: add
            quantity: 10
            state: approved
            attachment:
              - '@type': Attachment
                attachmentType: brochure
                description: handset brochure
                mimeType: pdf
                name: Handset commercial brochure.pdf
                url: www.tmf_hanset/contentMangement/brochure.pdf
                size:
                  amount: 3.7
                  units: Mb
                validFor:
                  startDateTime: '2021-05-06T12:45:12.031Z'
            product:
              '@type': Product
              productSpecification:
                id: qq45-ytr7
                href: 'https://host:port/productCatalogManagement/v5/productSpecification/qq45-ytr7'
                name: Handset
                '@type': ProductSpecificationRef
                version: '1'
            productOffering:
              id: z789-78ga
              href: 'https://host:port/productCatalogManagement/v5/productOffering/z789-78ga'
              name: TMF handset T9+
              '@type': ProductOfferingRef
            quoteItemPrice:
              - description: Handset
                name: Handset Fee
                priceType: nonRecurring
                '@type': QuotePrice
                price:
                  '@type': Price
                  taxRate: 16
                  dutyFreeAmount:
                    unit: EUR
                    value: 350
                    '@type': Money
                  taxIncludedAmount:
                    unit: EUR
                    value: 406
                    '@type': Money
        relatedParty:
          - role: Buyer Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: qsdd-9888
              name: Jean Pontus
              '@referredType': Individual
              '@type': PartyRef
          - role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '55'
              name: PerfectCustomer
              '@referredType': Organization
              '@type': PartyRef
          - role: Seller Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 45gh-gh89
              name: Joe Doe
              '@referredType': Individual
              '@type': PartyRef
        state: approved
        validFor:
          endDateTime: '2021-05-06T12:45:12.033Z'
          startDateTime: '2021-05-06T12:45:12.033Z'
      description: POST Quote response description.
    updateQuote_using_json_request:
      value:
        validFor:
          endDateTime: '2019-07-20T12:45:12.033Z'
          startDateTime: '2019-05-20T12:45:12.028Z'
      description: PATCH Quote request leveraging json application example
    updateQuote_using_json_response:
      value:
        id: 12dd-78hg
        href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
        category: BSBS Quote
        description: Quote illustration
        expectedFulfillmentStartDate: '2019-05-16T12:45:12.028Z'
        expectedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        externalId:
          - '@type': ExternalIdentifier
            owner: TMF
            externalIdentifierType: Quotenumber
            id: AK1
        instantSyncQuote: false
        quoteDate: '2019-05-06T12:45:12.028Z'
        requestedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        version: '1'
        agreement:
          - id: 7778-jj56
            href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
            name: Global Agrrement
            '@type': AgreementRef
        billingAccount:
          - id: BA4569
            href: 'https://host:port/accountManagement/v5/billingAccount/BA4569'
            '@type': BillingAccountRef
        contactMedium:
          - '@type': EmailContactMedium
            contactMediumIdentifier: '11'
            preferred: true
            emailAddress: jean.pontus@PerfectCustomer.com
        note:
          - id: '1'
            author: Jean Pontus
            date: '2019-05-06T12:45:12.031Z'
            text: This is a quote request following today call
            '@type': Note
        productOfferingQualification:
          - id: 22ds-ty55
            '@type': ProductOfferingQualificationRef
            href: >-
              https://host:port/productOfferingQualificationManagement/v5/productOfferingQualification/22ds-ty55
        quoteItem:
          - id: '1'
            '@type': QuoteItem
            action: add
            quantity: 1
            product:
              '@type': Product
              productCharacteristic:
                - '@type': StringCharacteristic
                  id: Char1
                  name: Voice Bundle
                  value: unlimited
                - '@type': ObjectCharacteristic
                  id: Char5
                  name: Data Bundle
                  value:
                    volume: 50
                    unit: Gb/month
              productSpecification:
                id: ssp7-ty89
                name: TMF Tariff Plan
                '@type': ProductSpecificationRef
            productOffering:
              id: 54gg-zza1
              name: TMF Tarif Plan 25
              '@type': ProductOfferingRef
          - id: '2'
            '@type': QuoteItem
            action: add
            quantity: 12
            product:
              '@type': Product
              productSpecification:
                id: qq45-ytr7
                name: Handset
                version: '1'
                '@type': ProductSpecificationRef
            productOffering:
              id: z789-78ga
              name: TMF handset T9+
              '@type': ProductOfferingRef
        relatedParty:
          - role: Buyer Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: qsdd-9888
              name: Louise Pontus
              '@referredType': Individual
              '@type': PartyRef
          - role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '55'
              name: PerfectCustomer
              '@referredType': Organization
              '@type': PartyRef
          - role: Seller Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 45gh-gh89
              name: Joe Doe
              '@referredType': Individual
              '@type': PartyRef
        state: inProgress
        '@type': Quote
        validFor:
          endDateTime: '2019-07-20T12:45:12.033Z'
          startDateTime: '2019-05-20T12:45:12.028Z'
      description: Quote representation.
    updateQuote_using_merge-patch_json_request:
      value:
        validFor:
          endDateTime: '2019-07-20T12:45:12.033Z'
          startDateTime: '2019-05-20T12:45:12.028Z'
      description: PATCH Quote request leveraging merge-patch+json application example
    updateQuote_using_merge-patch_json_response:
      value:
        id: 12dd-78hg
        href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
        category: BSBS Quote
        description: Quote illustration
        expectedFulfillmentStartDate: '2019-05-16T12:45:12.028Z'
        expectedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        externalId:
          - '@type': ExternalIdentifier
            owner: TMF
            externalIdentifierType: Quotenumber
            id: AK1
        instantSyncQuote: false
        quoteDate: '2019-05-06T12:45:12.028Z'
        requestedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        version: '1'
        agreement:
          - id: 7778-jj56
            href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
            name: Global Agrrement
            '@type': AgreementRef
        billingAccount:
          - id: BA4569
            href: 'https://host:port/accountManagement/v5/billingAccount/BA4569'
            '@type': BillingAccountRef
        contactMedium:
          - '@type': EmailContactMedium
            contactMediumIdentifier: '11'
            preferred: true
            emailAddress: jean.pontus@PerfectCustomer.com
        note:
          - id: '1'
            author: Jean Pontus
            date: '2019-05-06T12:45:12.031Z'
            text: This is a quote request following today call
            '@type': Note
        productOfferingQualification:
          - id: 22ds-ty55
            '@type': ProductOfferingQualificationRef
            href: >-
              https://host:port/productOfferingQualificationManagement/v5/productOfferingQualification/22ds-ty55
        quoteItem:
          - id: '1'
            '@type': QuoteItem
            action: add
            quantity: 1
            product:
              '@type': Product
              productCharacteristic:
                - '@type': StringCharacteristic
                  id: Char1
                  name: Voice Bundle
                  value: unlimited
                - '@type': ObjectCharacteristic
                  id: Char5
                  name: Data Bundle
                  value:
                    volume: 50
                    unit: Gb/month
              productSpecification:
                id: ssp7-ty89
                name: TMF Tariff Plan
                '@type': ProductSpecificationRef
            productOffering:
              id: 54gg-zza1
              name: TMF Tarif Plan 25
              '@type': ProductOfferingRef
          - id: '2'
            '@type': QuoteItem
            action: add
            quantity: 12
            product:
              '@type': Product
              productSpecification:
                id: qq45-ytr7
                name: Handset
                version: '1'
                '@type': ProductSpecificationRef
            productOffering:
              id: z789-78ga
              name: TMF handset T9+
              '@type': ProductOfferingRef
        relatedParty:
          - role: Buyer Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: qsdd-9888
              name: Louise Pontus
              '@referredType': Individual
              '@type': PartyRef
          - role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '55'
              name: PerfectCustomer
              '@referredType': Organization
              '@type': PartyRef
          - role: Seller Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 45gh-gh89
              name: Joe Doe
              '@referredType': Individual
              '@type': PartyRef
        state: inProgress
        '@type': Quote
        validFor:
          endDateTime: '2019-07-20T12:45:12.033Z'
          startDateTime: '2019-05-20T12:45:12.028Z'
      description: Quote representation.
    updateQuote_using_json-patch_json_request:
      value:
        - op: add
          path: /relatedParty
          value:
            role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '99'
              name: AnotherCustomer
              '@referredType': Organization
              '@type': PartyRef
      description: PATCH Quote request leveraging json-patch+json application example
    updateQuote_using_json-patch_json_response:
      value:
        id: 12dd-78hg
        href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
        category: BSBS Quote
        description: Quote illustration
        expectedFulfillmentStartDate: '2019-05-16T12:45:12.028Z'
        expectedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        externalId:
          - '@type': ExternalIdentifier
            owner: TMF
            externalIdentifierType: Quotenumber
            id: AK1
        instantSyncQuote: false
        quoteDate: '2019-05-06T12:45:12.028Z'
        requestedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        version: '1'
        agreement:
          - id: 7778-jj56
            href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
            name: Global Agrrement
            '@type': AgreementRef
        billingAccount:
          - id: BA4569
            href: 'https://host:port/accountManagement/v5/billingAccount/BA4569'
            '@type': BillingAccountRef
        contactMedium:
          - '@type': EmailContactMedium
            contactMediumIdentifier: '11'
            preferred: true
            emailAddress: jean.pontus@PerfectCustomer.com
        note:
          - id: '1'
            author: Jean Pontus
            date: '2019-05-06T12:45:12.031Z'
            text: This is a quote request following today call
        productOfferingQualification:
          - id: 22ds-ty55
            '@type': ProductOfferingQualificationRef
            href: >-
              https://host:port/productOfferingQualificationManagement/v5/productOfferingQualification/22ds-ty55
        quoteItem:
          - id: '1'
            '@type': QuoteItem
            action: add
            quantity: 1
            product:
              '@type': Product
              productCharacteristic:
                - '@type': StringCharacteristic
                  id: Char1
                  name: Voice Bundle
                  value: unlimited
                - '@type': ObjectCharacteristic
                  id: Char5
                  name: Data Bundle
                  value:
                    volume: 50
                    unit: Gb/month
              productSpecification:
                id: ssp7-ty89
                name: TMF Tariff Plan
                '@type': ProductSpecificationRef
            productOffering:
              id: 54gg-zza1
              name: TMF Tarif Plan 25
              '@type': ProductOfferingRef
          - id: '2'
            '@type': QuoteItem
            action: add
            quantity: 12
            product:
              '@type': Product
              productSpecification:
                id: qq45-ytr7
                name: Handset
                version: '1'
                '@type': ProductSpecificationRef
            productOffering:
              id: z789-78ga
              name: TMF handset T9+
              '@type': ProductOfferingRef
        relatedParty:
          - role: Buyer Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: qsdd-9888
              name: Jean Pontus
              '@referredType': Individual
              '@type': PartyRef
          - role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '99'
              name: AnotherCustomer
              '@referredType': Organization
              '@type': PartyRef
          - role: Seller Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 45gh-gh89
              name: Joe Doe
              '@referredType': Individual
              '@type': PartyRef
        state: inProgress
        '@type': Quote
        validFor:
          endDateTime: '2019-05-06T12:45:12.033Z'
          startDateTime: '2019-05-06T12:45:12.033Z'
      description: Quote representation.
    updateQuote_using_json-patch-query_json_request:
      value:
        - op: replace
          path: /relatedParty/partyOrPartyRole/name?relatedParty.role=Buyer Contact
          value: Louise Pontus
        - op: replace
          path: /quoteItem/quantity?id=2
          value: 12
      description: PATCH Quote request leveraging json-patch-query+json application example
    updateQuote_using_json-patch-query_json_response:
      value:
        id: 12dd-78hg
        href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
        category: BSBS Quote
        description: Quote illustration
        expectedFulfillmentStartDate: '2019-05-16T12:45:12.028Z'
        expectedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        externalId:
          - '@type': ExternalIdentifier
            owner: TMF
            externalIdentifierType: Quotenumber
            id: AK1
        instantSyncQuote: false
        quoteDate: '2019-05-06T12:45:12.028Z'
        requestedQuoteCompletionDate: '2019-05-14T12:45:12.028Z'
        version: '1'
        agreement:
          - id: 7778-jj56
            href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
            name: Global Agrrement
            '@type': AgreementRef
        billingAccount:
          - id: BA4569
            href: 'https://host:port/accountManagement/v5/billingAccount/BA4569'
            '@type': BillingAccountRef
        contactMedium:
          - '@type': EmailContactMedium
            contactMediumIdentifier: '11'
            preferred: true
            emailAddress: jean.pontus@PerfectCustomer.com
        note:
          - id: '1'
            author: Jean Pontus
            date: '2019-05-06T12:45:12.031Z'
            text: This is a quote request following today call
            '@type': Note
        productOfferingQualification:
          - id: 22ds-ty55
            '@type': ProductOfferingQualificationRef
            href: >-
              https://host:port/productOfferingQualificationManagement/v5/productOfferingQualification/22ds-ty55
        quoteItem:
          - id: '1'
            '@type': QuoteItem
            action: add
            quantity: 1
            product:
              '@type': Product
              productCharacteristic:
                - '@type': StringCharacteristic
                  id: Char1
                  name: Voice Bundle
                  value: unlimited
                - '@type': ObjectCharacteristic
                  id: Char5
                  name: Data Bundle
                  value:
                    volume: 50
                    unit: Gb/month
              productSpecification:
                id: ssp7-ty89
                name: TMF Tariff Plan
                '@type': ProductSpecificationRef
            productOffering:
              id: 54gg-zza1
              name: TMF Tarif Plan 25
              '@type': ProductOfferingRef
          - id: '2'
            '@type': QuoteItem
            action: add
            quantity: 12
            product:
              '@type': Product
              productSpecification:
                id: qq45-ytr7
                name: Handset
                version: '1'
                '@type': ProductSpecificationRef
            productOffering:
              id: z789-78ga
              name: TMF handset T9+
              '@type': ProductOfferingRef
        relatedParty:
          - role: Buyer Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: qsdd-9888
              name: Louise Pontus
              '@referredType': Individual
              '@type': PartyRef
          - role: Buyer organization
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '55'
              name: PerfectCustomer
              '@referredType': Organization
              '@type': PartyRef
          - role: Seller Contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 45gh-gh89
              name: Joe Doe
              '@referredType': Individual
              '@type': PartyRef
        state: inProgress
        '@type': Quote
      description: Quote representation.
    QuoteCreateEvent_request:
      value:
        correlationId: 126-54f
        description: QuoteCreateEvent illustration
        domain: Commercial
        eventId: '125'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QuoteCreateEvent
        priority: '1'
        timeOccurred: '2021-09-27T07:43:59.059Z'
        title: QuoteCreateEvent
        event:
          quote:
            id: 12dd-78hg
            href: 'https://host:port/quoteManagement/v5/quote/12dd-78hg'
            '@type': Quote
            category: BSBS Quote
            description: Quote illustration
            effectiveQuoteCompletionDate: '2021-05-13T12:45:12.028Z'
            expectedFulfillmentStartDate: '2021-05-21T12:45:12.028Z'
            expectedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
            externalId:
              - '@type': ExternalIdentifier
                owner: TMF
                externalIdentifierType: Quotenumber
                id: AK1
            instantSyncQuote: false
            quoteDate: '2021-05-06T12:45:12.028Z'
            requestedQuoteCompletionDate: '2021-05-14T12:45:12.028Z'
            version: '1'
            agreement:
              - id: 7778-jj56
                href: 'https://host:port/agreementManagement/v5/agreement/7778-jj56'
                name: Global Agrrement
                '@type': AgreementRef
                '@referredType': MassAgreement
            billingAccount:
              - id: BA4569
                href: 'https://host:port/accountManagement/v5/billingAccount/BA4569'
                '@type': BillingAccountRef
            contactMedium:
              - '@type': EmailContactMedium
                contactMediumIdentifier: '11'
                preferred: true
                emailAddress: jean.pontus@PerfectCustomer.com
            note:
              - id: '1'
                author: Jean Pontus
                date: '2021-05-06T12:45:12.031Z'
                text: This is a quote request following today call
                '@type': Note
            productOfferingQualification:
              - id: 22ds-ty55
                '@type': ProductOfferingQualificationRef
                href: >-
                  https://host:port/productOfferingQualificationManagement/v5/productOfferingQualification/22ds-ty55
            authorization:
              - givenDate: '2021-05-08T12:45:12.031Z'
                name: Discount validation
                '@type': Authorization
                requestedDate: '2021-05-09T12:45:12.031Z'
                signatureRepresentation: Manager approval
                state: validated
                approver:
                  - role: B2B Discount approver
                    '@type': RelatedPartyOrPartyRole
                    partyOrPartyRole:
                      id: 45gh-gh89
                      name: Joe Doe
                      '@referredType': Individual
                      '@type': PartyRef
            quoteItem:
              - id: '1'
                '@type': QuoteItem
                action: add
                quantity: 1
                state: approved
                product:
                  '@type': product
                  productCharacteristic:
                    - '@type': StringCharacteristic
                      id: Char1
                      name: Voice Bundle
                      value: unlimited
                    - '@type': ObjectCharacteristic
                      id: Char5
                      name: Data Bundle
                      value:
                        volume: 50
                        unit: Gb/month
                  productSpecification:
                    id: ssp7-ty89
                    href: 'https://host:port/productCatalogManagement/v5/productSpecification/ssp7-ty89'
                    name: TMF Tariff Plan
                    '@type': ProductSpecificationRef
                productOffering:
                  id: 54gg-zza1
                  href: 'https://host:port/productCatalogManagement/v5/productSpecification/54gg-zza1'
                  name: TMF Tarif Plan 25
                  '@type': ProductOfferingRef
                quoteItemPrice:
                  - description: Tariff plan 25 fee
                    name: Tariff Plan 25 tariff
                    priceType: recurring
                    recurringChargePeriod: month
                    '@type': QuotePrice
                    price:
                      '@type': Price
                      taxRate: 16
                      dutyFreeAmount:
                        unit: EUR
                        value: 30
                        '@type': Money
                      taxIncludedAmount:
                        unit: EUR
                        value: 34.8
                        '@type': Money
                    priceAlteration:
                      - applicationDuration: 0
                        description: Specific Discount for PerfectCustomer company
                        name: 10% off
                        priceType: recurring
                        priority: 1
                        recurringChargePeriod: month
                        '@type': PriceAlteration
                        price:
                          percentage: 10
                          '@type': Price
              - id: '2'
                '@type': QuoteItem
                action: add
                quantity: 10
                state: approved
                attachment:
                  - '@type': Attachment
                    attachmentType: brochure
                    description: handset brochure
                    mimeType: pdf
                    name: Handset commercial brochure.pdf
                    url: www.tmf_hanset/contentMangement/brochure.pdf
                    size:
                      amount: 3.7
                      units: Mb
                    validFor:
                      startDateTime: '2021-05-06T12:45:12.031Z'
                product:
                  '@type': Product
                  productSpecification:
                    id: qq45-ytr7
                    href: 'https://host:port/productCatalogManagement/v5/productSpecification/qq45-ytr7'
                    name: Handset
                    '@type': ProductSpecificationRef
                    version: '1'
                productOffering:
                  id: z789-78ga
                  href: 'https://host:port/productCatalogManagement/v5/productOffering/z789-78ga'
                  name: TMF handset T9+
                  '@type': ProductOfferingRef
                quoteItemPrice:
                  - description: Handset
                    name: Handset Fee
                    priceType: nonRecurring
                    '@type': QuotePrice
                    price:
                      '@type': Price
                      taxRate: 16
                      dutyFreeAmount:
                        unit: EUR
                        value: 350
                        '@type': Money
                      taxIncludedAmount:
                        unit: EUR
                        value: 406
                        '@type': Money
            relatedParty:
              - role: Buyer Contact
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: qsdd-9888
                  name: Jean Pontus
                  '@referredType': Individual
                  '@type': PartyRef
              - role: Buyer organization
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: '55'
                  name: PerfectCustomer
                  '@referredType': Organization
                  '@type': PartyRef
              - role: Seller Contact
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: 45gh-gh89
                  name: Joe Doe
                  '@referredType': Individual
                  '@type': PartyRef
            state: approved
            validFor:
              endDateTime: '2021-05-06T12:45:12.033Z'
              startDateTime: '2021-05-06T12:45:12.033Z'
        relatedParty:
          - role: Issuer
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: 56d
              '@referredType': Organization
              '@type': PartyRef
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QuoteCreateEvent
      description: Message example for QuoteCreateEvent event
    QuoteAttributeValueChangeEvent_request:
      value:
        correlationId: akj-566
        description: QuoteAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: '741'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QuoteAttributeValueChangeEvent
        priority: '1'
        timeOccurred: '2021-09-27T07:43:59.059Z'
        title: QuoteAttributeValueChangeEvent
        event:
          quote:
            id: 12dd-78hg
            quoteItem:
              - id: '2'
                '@type': QuoteItem
                quantity: 12
            relatedParty:
              - role: Buyer Contact
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: qsdd-9888
                  name: Louise Pontus
                  '@referredType': Individual
                  '@type': PartyRef
            '@type': Quote
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QuoteAttributeValueChangeEvent
      description: Message example for QuoteAttributeValueChangeEvent event
    QuoteStateChangeEvent_request:
      value:
        correlationId: 333-fd6
        description: QuoteStateChangeEvent illustration
        domain: Commercial
        eventId: '569'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QuoteStateChangeEvent
        priority: '1'
        timeOccurred: '2021-09-27T07:43:59.059Z'
        title: QuoteStateChangeEvent
        event:
          quote:
            id: '9693'
            href: 'https://host:port/quoteManagement/v5/quote/9693'
            '@type': Quote
            state: approved
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QuoteStateChangeEvent
      description: Message example for QuoteStateChangeEvent event
    QuoteDeleteEvent_request:
      value:
        correlationId: 145d-8hh
        description: QuoteDeleteEvent illustration
        domain: Commercial
        eventId: '523'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QuoteDeleteEvent
        priority: '3'
        timeOccurred: '2021-09-27T07:43:59.059Z'
        title: QuoteDeleteEvent
        event:
          quote:
            id: '9693'
            href: 'https://host:port/quoteManagement/v5/quote/9693'
            '@type': Quote
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QuoteDeleteEvent
      description: Message example for QuoteDeleteEvent event
    QuoteInformationRequiredEvent_request:
      value:
        correlationId: qs1-k33
        description: QuoteInformationRequiredEvent illustration
        domain: Commercial
        eventId: '966'
        eventTime: '2021-09-27T07:43:59.059Z'
        eventType: QuoteInformationRequiredEvent
        priority: '1'
        timeOccurred: '2021-09-27T07:43:59.059Z'
        title: QuoteInformationRequiredEvent
        event:
          quote:
            id: '5252'
            href: 'https://host:port/quoteManagement/v5/quote/5252'
            '@type': Quote
            informationRequired:
              - op: add
                path: /agreement
              - op: add
                path: /contactMedium
        reportingSystem:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '123'
          name: CRM app
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QuoteInformationRequiredEvent
      description: Message example for QuoteInformationRequiredEvent event
