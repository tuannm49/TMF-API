openapi: 3.0.1
info:
  title: VNPT API Application
  description: |-
    ## VNPT API Reference : VNPT 002 - Application 

    ### Release : 1.0 

    Desciption about Application

    ### Resources
    - Application

    Application API performs the following operations :
    - Retrieve an application
    - Retrieve a collection of applications according to given criteria
    - Create a new application
    - Update an existing application
    - Delete an existing application
  version: 1.0.0
servers:
  - url: https://serverRoot/vnpt-api/app/v1/
tags:
  - name: application
paths:
  /app:
    get:
      tags:
        - application
      summary: List or find Application objects
      description: This operation list or find Application entities
      operationId: listApplication
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - application
      summary: Creates a Application
      description: This operation creates a Application entity.
      operationId: createApplication
      requestBody:
        description: The Application to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /app/{id}:
    get:
      tags:
        - application
      summary: Retrieves a Application by ID
      description: This operation retrieves a Application entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveApplication
      parameters:
        - name: id
          in: path
          description: Identifier of the Application
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - application
      summary: Updates partially a Application
      description: This operation updates partially a Application entity.
      operationId: patchApplication
      parameters:
        - name: id
          in: path
          description: Identifier of the Application
          required: true
          schema:
            type: string
      requestBody:
        description: The Application to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - application
      summary: Delete a application
      description: This operation delete a Application entity.
      operationId: deleteApplication
      parameters:
        - name: id
          in: path
          description: Identifier of the PartyAccount
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Application:
      type: object
      properties:
        id:
          example: '128'
          type: string
          description: unique identifier
        href:
          example: 'https://serverRoot/vnpt-api/application/v4/application/128'
          type: string
          description: Hyperlink reference
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        name:
          example: 'EPC'
          type: string
          description: Name of Application. Ex (EPC)
        description:
          type: string
          description: Ex (Enterprise Product Catalog)
        logo:
          example: 'https://myapp.com/home/logo.png'
          type: string
          description: A URL display Application brand (https://myapp.com/home/logo.png)
        accessUrl:
          example: 'https://myapp.com/home'
          type: string
          description: A URL to access Application (https://myapp.com/home)
        isActive:
          type: boolean
          description: A “true” value specifies tenant active
        createdDate:
          type: string
          description: Date of create
          format: date-time
        tenant:
          $ref: '#/components/schemas/TenantRef'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleRef'

      description: Application represents a single zone independen with other.
    Application_Create:
      required:
        - name
        - accessURL
        - tenant
      type: object
      properties:
        name:
          type: string
          description: Use a application for your organization. This name should be unique.
        accessURL:
          type: string
          description: Full URL in standard format
        tenant:
          $ref: '#/components/schemas/TenantRef'
        isActive:
          type: boolean
          description: A “true” value specifies application active
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        Application represents a single zone independen with other.
        Skipped properties: id,href
    Application_Update:
      type: object
      properties:
        id:
          example: '128'
          type: string
          description: unique identifier
        href:
          example: 'https://serverRoot/vnpt-api/application/v4/application/128'
          type: string
          description: Hyperlink reference
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        name:
          example: 'EPC'
          type: string
          description: Name of Application. Ex (EPC)
        description:
          type: string
          description: Ex (Enterprise Product Catalog)
        logo:
          example: 'https://myapp.com/home/logo.png'
          type: string
          description: A URL display Application brand (https://myapp.com/home/logo.png)
        accessUrl:
          example: 'https://myapp.com/home'
          type: string
          description: A URL to access Application (https://myapp.com/home)
        isActive:
          type: boolean
          description: A “true” value specifies tenant active
        tenant:
          $ref: '#/components/schemas/TenantRef'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleRef'
      description: |-
        Individual represents a single zone independen with other.
        Skipped properties: id,href
    RoleRef:
      type: object
      description: >-
        Representation of a Role
      properties:
        id:
          example: '12'
          type: string
          description: Unique Identifier of the Role
        name:
          example: 'EPC Designer'
          type: string
          description: Name of the role to identify it with a meaningful identification
        '@type':
          example: 'RoleRef'
          type: string
          description: The name of the Role structure
        '@referredType':
          example: 'Role'
          type: string
          description: The actual type of the target instance when needed for disambiguation
    TenantRef:
      type: object
      description: >-
        Representation of a Tenant
      properties:
        id:
          example: '12'
          type: string
          description: Unique Identifier of the Tenant
        name:
          example: 'EPC Designer'
          type: string
          description: Name of the role to identify it with a meaningful identification
        '@type':
          example: 'TenantRef'
          type: string
          description: The name of the Role structure
        '@referredType':
          example: 'Tenant'
          type: string
          description: The actual type of the target instance when needed for disambiguation

    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'