openapi: 3.0.1
info:
  title: Service Qualification Management
  description: >2-
     Service Qualification API is one of Pre-Ordering Management API Family. Service Qualification API goal is to provide service technical eligibility. Since v4 the API is split in 2 resources to distinguish specific service qualification request to be performed on a described configurated service (or a list of configured services) from a retrieval of services eligible for a given context. The API allows to manage synchronous as asynchronous eligibility response (eligibility provided in POST response or later with an id and state provided ).  
    ### CheckServiceQualification Resource 
     This resource is used to check a configured service eligibility (or a list of service). A qualification result is provided in response. Requested could ask for result reason (unavailability or availability) and/or for alternate proposal 
    ### TMF645 performs the following operations on the check service qualification resource :

    - Retrieve a checkServiceQualification or a collection of checkServiceQualification depending on
    filter criteria

    - Partial update of a checkServiceQualification 

    - Create a checkServiceQualification (including default values and creation rules)

    - Delete a checkServiceQualification (for administration purposes)

    - Manage notification on checkServiceQualification

    ### Query Service Qualification resource
     Query Service Qualification is used to retrieve a list of service eligible in a given request provided by requester (via searchCriteria).
    ### TMF645 performs the following operations on a query service qualification resource:

    - Retrieval a queryServiceQualification or a list of queryServiceQualification

    - Partial update of a queryServiceQualification

    - Creation of a queryServiceQualification

    - Deletion of a queryServiceQualification

    - Notification on queryServiceQualification
  version: 5.0.0
servers:
  - url: 'https://serverRoot/serviceQualificationManagement/v5'
tags:
  - name: queryServiceQualification
    description: Operations for QueryServiceQualification Resource
  - name: checkServiceQualification
    description: Operations for CheckServiceQualification Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /checkServiceQualification:
    get:
      tags:
        - checkServiceQualification
      summary: List or find CheckServiceQualification objects
      description: List or find CheckServiceQualification objects
      operationId: listCheckServiceQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200CheckServiceQualificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - checkServiceQualification
      summary: Creates a CheckServiceQualification
      description: This operation creates a CheckServiceQualification entity.
      operationId: createCheckServiceQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/CheckServiceQualification_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201CheckServiceQualification'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/checkServiceQualification/{id}':
    get:
      tags:
        - checkServiceQualification
      summary: Retrieves a CheckServiceQualification by ID
      description: >-
        This operation retrieves a CheckServiceQualification entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveCheckServiceQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200CheckServiceQualification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - checkServiceQualification
      summary: Updates partially a CheckServiceQualification
      description: This operation updates partially a CheckServiceQualification entity.
      operationId: patchCheckServiceQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/CheckServiceQualification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200CheckServiceQualification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - checkServiceQualification
      summary: Deletes a CheckServiceQualification
      description: This operation deletes a CheckServiceQualification entity.
      operationId: deleteCheckServiceQualification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/checkServiceQualificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckServiceQualificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckServiceQualificationAttributeValueChangeEvent
      operationId: checkServiceQualificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckServiceQualificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/checkServiceQualificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckServiceQualificationCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckServiceQualificationCreateEvent
      operationId: checkServiceQualificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckServiceQualificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/checkServiceQualificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckServiceQualificationDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckServiceQualificationDeleteEvent
      operationId: checkServiceQualificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckServiceQualificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/checkServiceQualificationInformationRequiredEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckServiceQualificationInformationRequiredEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckServiceQualificationInformationRequiredEvent
      operationId: checkServiceQualificationInformationRequiredEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckServiceQualificationInformationRequiredEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/checkServiceQualificationStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity CheckServiceQualificationStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        CheckServiceQualificationStateChangeEvent
      operationId: checkServiceQualificationStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/CheckServiceQualificationStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/queryServiceQualificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QueryServiceQualificationCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        QueryServiceQualificationCreateEvent
      operationId: queryServiceQualificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/QueryServiceQualificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/queryServiceQualificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QueryServiceQualificationDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        QueryServiceQualificationDeleteEvent
      operationId: queryServiceQualificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/QueryServiceQualificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/queryServiceQualificationStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity QueryServiceQualificationStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        QueryServiceQualificationStateChangeEvent
      operationId: queryServiceQualificationStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/QueryServiceQualificationStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /queryServiceQualification:
    get:
      tags:
        - queryServiceQualification
      summary: List or find QueryServiceQualification objects
      description: List or find QueryServiceQualification objects
      operationId: listQueryServiceQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200QueryServiceQualificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - queryServiceQualification
      summary: Creates a QueryServiceQualification
      description: This operation creates a QueryServiceQualification entity.
      operationId: createQueryServiceQualification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/QueryServiceQualification_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201QueryServiceQualification'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/queryServiceQualification/{id}':
    get:
      tags:
        - queryServiceQualification
      summary: Retrieves a QueryServiceQualification by ID
      description: >-
        This operation retrieves a QueryServiceQualification entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveQueryServiceQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200QueryServiceQualification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - queryServiceQualification
      summary: Updates partially a QueryServiceQualification
      description: This operation updates partially a QueryServiceQualification entity.
      operationId: patchQueryServiceQualification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/QueryServiceQualification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200QueryServiceQualification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - queryServiceQualification
      summary: Deletes a QueryServiceQualification
      description: This operation deletes a QueryServiceQualification entity.
      operationId: deleteQueryServiceQualification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    AlternateServiceProposal:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Alternate service proposal is used when the requested service is not available with
            characteristic and date asked for. An alternate proposal could be a distinct
            serviceSpecification close to requested one or same as requested but with a different
            activation date
          properties:
            id:
              description: Identifier of a alternate service proposal
              type: string
            alternateServiceAvailabilityDate:
              description: >-
                Alternate availability date in case seller is not able to meet requested expected
                availability date for the service
              type: string
              format: date-time
            alternateService:
              $ref: '#/components/schemas/ServiceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          AlternateServiceProposal: '#/components/schemas/AlternateServiceProposal'
    AlternateServiceProposal_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Alternate service proposal is used when the requested service is not available with
            characteristic and date asked for. An alternate proposal could be a distinct
            serviceSpecification close to requested one or same as requested but with a different
            activation date
          properties:
            id:
              description: Identifier of a alternate service proposal
              type: string
            alternateServiceAvailabilityDate:
              description: >-
                Alternate availability date in case seller is not able to meet requested expected
                availability date for the service
              type: string
              format: date-time
            alternateService:
              $ref: '#/components/schemas/ServiceRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AlternateServiceProposal: '#/components/schemas/AlternateServiceProposal_FVO'
    AlternateServiceProposal_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Alternate service proposal is used when the requested service is not available with
            characteristic and date asked for. An alternate proposal could be a distinct
            serviceSpecification close to requested one or same as requested but with a different
            activation date
          properties:
            id:
              description: Identifier of a alternate service proposal
              type: string
            alternateServiceAvailabilityDate:
              description: >-
                Alternate availability date in case seller is not able to meet requested expected
                availability date for the service
              type: string
              format: date-time
            alternateService:
              $ref: '#/components/schemas/ServiceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AlternateServiceProposal: '#/components/schemas/AlternateServiceProposal_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BaseEvent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_FVO'
    BaseEvent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_MVO'
    CalendarPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod'
    CalendarPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod_FVO'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
          required:
            - status
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_FVO'
    CalendarPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            day:
              type: string
              description: >-
                Day where the calendar status applies (e.g.: monday, mon-to-fri, weekdays, weekend,
                all week, ...)
            timeZone:
              type: string
              description: >-
                Indication of the timezone applicable to the calendar information (e.g.: Paris,
                GMT+1)
            hourPeriod:
              type: array
              items:
                $ref: '#/components/schemas/HourPeriod_MVO'
            status:
              type: string
              description: 'Indication of the availability of the caledar period (e.g.: available, booked, etc.)'
      discriminator:
        propertyName: '@type'
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
    CheckServiceQualification:
      allOf:
        - $ref: '#/components/schemas/ServiceQualification'
        - type: object
          description: >-
            CheckServiceQualification is used to perform a technical eligibility on service
            configuration(s). It allows to retrieve services that are technically available in the
            context of the interaction (place, party, service characteristics, ...).
          properties:
            serviceQualificationItem:
              type: array
              description: A list of service qualification items.
              items:
                $ref: '#/components/schemas/CheckServiceQualificationItem'
            provideAlternative:
              type: boolean
              default: false
              description: When the value is TRUE means that alternative solutions should be provided
            provideResultReason:
              type: boolean
              default: false
              description: >-
                When the value is TRUE means that result reason are expected for available or not of
                product offering.
            qualificationResult:
              description: >-
                Qualification result for this serviceQualification. It could be:  qualified (all
                qualification item are qualified), alternate (At least one item alternate and no
                item with  unqualified), unqualified (At least one item unqualified)
              type: string
            checkServiceQualificationDate:
              type: string
              description: Date when the serviceQualification was submitted
              format: date-time
    CheckServiceQualificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckServiceQualificationAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckServiceQualificationAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckServiceQualificationAttributeValueChangeEvent: '#/components/schemas/CheckServiceQualificationAttributeValueChangeEvent'
    CheckServiceQualificationAttributeValueChangeEventPayload:
      type: object
      description: CheckServiceQualificationAttributeValueChangeEventPayload generic structure
      properties:
        checkServiceQualification:
          $ref: '#/components/schemas/CheckServiceQualification'
    CheckServiceQualificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckServiceQualificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckServiceQualificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckServiceQualificationCreateEvent: '#/components/schemas/CheckServiceQualificationCreateEvent'
    CheckServiceQualificationCreateEventPayload:
      type: object
      description: CheckServiceQualificationCreateEventPayload generic structure
      properties:
        checkServiceQualification:
          $ref: '#/components/schemas/CheckServiceQualification'
    CheckServiceQualificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckServiceQualificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckServiceQualificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckServiceQualificationDeleteEvent: '#/components/schemas/CheckServiceQualificationDeleteEvent'
    CheckServiceQualificationDeleteEventPayload:
      type: object
      description: CheckServiceQualificationDeleteEventPayload generic structure
      properties:
        checkServiceQualification:
          $ref: '#/components/schemas/CheckServiceQualification'
    CheckServiceQualificationInformationRequiredEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckServiceQualificationInformationRequiredEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckServiceQualificationInformationRequiredEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckServiceQualificationInformationRequiredEvent: '#/components/schemas/CheckServiceQualificationInformationRequiredEvent'
    CheckServiceQualificationInformationRequiredEventPayload:
      type: object
      description: CheckServiceQualificationInformationRequiredEventPayload generic structure
      properties:
        CheckServiceQualification:
          $ref: '#/components/schemas/CheckServiceQualification'
        informationRequired:
          $ref: '#/components/schemas/InformationRequiredEvent'
    CheckServiceQualificationItem:
      allOf:
        - $ref: '#/components/schemas/ServiceQualificationItem'
        - type: object
          description: >-
            A ServiceQualificationItem relates to a specific service being checked in a
            qualification operation.
          properties:
            qualificationResult:
              type: string
              description: >-
                Qualification result for serviceQualification item. It could be: - qualified
                (request service are available), - unqualified (requested not available and not
                alternate available), - alternate (requested not available but proposal available)
            state:
              type: string
              description: >-
                State of the serviceQualification item (acknowledged, inProgress,
                terminatedWithError, done)
            qualificationRelationship:
              type: array
              description: >-
                Structure used to describe relationship between serviceQualification item from the
                same serviceQualification.
              items:
                $ref: '#/components/schemas/ServiceQualificationRelationship'
            eligibilityResultReason:
              type: array
              description: >-
                A list of eligibility result reasons (EligibilityResultReason [*]). Reason for
                eligibility result, whatever the result is (availability or unavailability).
              items:
                $ref: '#/components/schemas/EligibilityResultReason'
            qualificationItemRelationship:
              type: array
              description: >-
                A list of qualification item relationships used to describe relationship between
                serviceQualification item from the same serviceQualification.
              items:
                $ref: '#/components/schemas/ServiceQualificationItemRelationship'
            terminationError:
              type: array
              description: >-
                If qualificationItem has not been done properly this lists the error(s) that caused
                termination of the qualification.
              items:
                $ref: '#/components/schemas/TerminationError'
            alternateServiceProposal:
              type: array
              description: >-
                Alternate service proposal is used when the requested service is not available with
                characteristic and date asked for. An alternate proposal could be a distinct service
                Spec close to requested one or same as requested but with a different availability
                date.
              items:
                $ref: '#/components/schemas/AlternateServiceProposal'
    CheckServiceQualificationItem_FVO:
      allOf:
        - $ref: '#/components/schemas/ServiceQualificationItem_FVO'
        - type: object
          description: >-
            A ServiceQualificationItem relates to a specific service being checked in a
            qualification operation.
          properties:
            qualificationRelationship:
              type: array
              description: >-
                Structure used to describe relationship between serviceQualification item from the
                same serviceQualification.
              items:
                $ref: '#/components/schemas/ServiceQualificationRelationship'
            eligibilityResultReason:
              type: array
              description: >-
                A list of eligibility result reasons (EligibilityResultReason [*]). Reason for
                eligibility result, whatever the result is (availability or unavailability).
              items:
                $ref: '#/components/schemas/EligibilityResultReason_FVO'
            qualificationItemRelationship:
              type: array
              description: >-
                A list of qualification item relationships used to describe relationship between
                serviceQualification item from the same serviceQualification.
              items:
                $ref: '#/components/schemas/ServiceQualificationItemRelationship'
            terminationError:
              type: array
              description: >-
                If qualificationItem has not been done properly this lists the error(s) that caused
                termination of the qualification.
              items:
                $ref: '#/components/schemas/TerminationError'
    CheckServiceQualificationItem_MVO:
      allOf:
        - $ref: '#/components/schemas/ServiceQualificationItem_MVO'
        - type: object
          description: >-
            A ServiceQualificationItem relates to a specific service being checked in a
            qualification operation.
          properties:
            qualificationResult:
              type: string
              description: >-
                Qualification result for serviceQualification item. It could be: - qualified
                (request service are available), - unqualified (requested not available and not
                alternate available), - alternate (requested not available but proposal available)
            state:
              type: string
              description: >-
                State of the serviceQualification item (acknowledged, inProgress,
                terminatedWithError, done)
            qualificationRelationship:
              type: array
              description: >-
                Structure used to describe relationship between serviceQualification item from the
                same serviceQualification.
              items:
                $ref: '#/components/schemas/ServiceQualificationRelationship'
            eligibilityResultReason:
              type: array
              description: >-
                A list of eligibility result reasons (EligibilityResultReason [*]). Reason for
                eligibility result, whatever the result is (availability or unavailability).
              items:
                $ref: '#/components/schemas/EligibilityResultReason_MVO'
            qualificationItemRelationship:
              type: array
              description: >-
                A list of qualification item relationships used to describe relationship between
                serviceQualification item from the same serviceQualification.
              items:
                $ref: '#/components/schemas/ServiceQualificationItemRelationship'
            terminationError:
              type: array
              description: >-
                If qualificationItem has not been done properly this lists the error(s) that caused
                termination of the qualification.
              items:
                $ref: '#/components/schemas/TerminationError'
            alternateServiceProposal:
              type: array
              description: >-
                Alternate service proposal is used when the requested service is not available with
                characteristic and date asked for. An alternate proposal could be a distinct service
                Spec close to requested one or same as requested but with a different availability
                date.
              items:
                $ref: '#/components/schemas/AlternateServiceProposal_MVO'
    CheckServiceQualificationStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: CheckServiceQualificationStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/CheckServiceQualificationStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          CheckServiceQualificationStateChangeEvent: '#/components/schemas/CheckServiceQualificationStateChangeEvent'
    CheckServiceQualificationStateChangeEventPayload:
      type: object
      description: CheckServiceQualificationStateChangeEventPayload generic structure
      properties:
        checkServiceQualification:
          $ref: '#/components/schemas/CheckServiceQualification'
    CheckServiceQualification_FVO:
      allOf:
        - $ref: '#/components/schemas/ServiceQualification_FVO'
        - type: object
          description: >-
            CheckServiceQualification is used to perform a technical eligibility on service
            configuration(s). It allows to retrieve services that are technically available in the
            context of the interaction (place, party, service characteristics, ...).
          properties:
            serviceQualificationItem:
              type: array
              description: A list of service qualification items.
              items:
                $ref: '#/components/schemas/CheckServiceQualificationItem_FVO'
            provideAlternative:
              type: boolean
              default: false
              description: When the value is TRUE means that alternative solutions should be provided
            provideResultReason:
              type: boolean
              default: false
              description: >-
                When the value is TRUE means that result reason are expected for available or not of
                product offering.
          required:
            - serviceQualificationItem
    CheckServiceQualification_MVO:
      allOf:
        - $ref: '#/components/schemas/ServiceQualification_MVO'
        - type: object
          description: >-
            CheckServiceQualification is used to perform a technical eligibility on service
            configuration(s). It allows to retrieve services that are technically available in the
            context of the interaction (place, party, service characteristics, ...).
          properties:
            serviceQualificationItem:
              type: array
              description: A list of service qualification items.
              items:
                $ref: '#/components/schemas/CheckServiceQualificationItem_MVO'
            provideAlternative:
              type: boolean
              default: false
              description: When the value is TRUE means that alternative solutions should be provided
            provideResultReason:
              type: boolean
              default: false
              description: >-
                When the value is TRUE means that result reason are expected for available or not of
                product offering.
    EligibilityResultReason:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reason for eligibility result if the ServiceQualification result is no (meaning the
            Service is not available)
          properties:
            code:
              type: string
              description: Result reason code
            label:
              type: string
              description: Human readable result reason label
      discriminator:
        propertyName: '@type'
        mapping:
          EligibilityResultReason: '#/components/schemas/EligibilityResultReason'
    EligibilityResultReason_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Reason for eligibility result if the ServiceQualification result is no (meaning the
            Service is not available)
          properties:
            code:
              type: string
              description: Result reason code
            label:
              type: string
              description: Human readable result reason label
      discriminator:
        propertyName: '@type'
        mapping:
          EligibilityResultReason: '#/components/schemas/EligibilityResultReason_FVO'
    EligibilityResultReason_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reason for eligibility result if the ServiceQualification result is no (meaning the
            Service is not available)
          properties:
            code:
              type: string
              description: Result reason code
            label:
              type: string
              description: Human readable result reason label
      discriminator:
        propertyName: '@type'
        mapping:
          EligibilityResultReason: '#/components/schemas/EligibilityResultReason_MVO'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRefOrValue:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity'
          EntityRef: '#/components/schemas/EntityRef'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    EntityRefOrValue_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity_FVO'
          EntityRef: '#/components/schemas/EntityRef_FVO'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_FVO'
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
          ServiceCategoryRef: '#/components/schemas/ServiceCategoryRef_FVO'
          ResourceRef: '#/components/schemas/ResourceRef_FVO'
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          PartyRef: '#/components/schemas/PartyRef_FVO'
          IntentRef: '#/components/schemas/IntentRef_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
    EntityRefOrValue_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Entity: '#/components/schemas/Entity_MVO'
          EntityRef: '#/components/schemas/EntityRef'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRelationship:
      type: object
      description: A uni-directionmal relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    EntityRelationship_FVO:
      type: object
      description: A uni-directionmal relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef_FVO'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
      required:
        - relationshipType
        - id
        - '@referredType'
        - '@type'
    EntityRelationship_MVO:
      type: object
      description: A uni-directionmal relationship from this entity to a target entity instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    ErrorMessage:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: represents an Error
          properties:
            code:
              type: string
              description: error code
            reason:
              type: string
              description: Explanation of the reason for the error
            message:
              type: string
              description: More details and corrective actions related to the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            referenceError:
              type: string
              description: URI of documentation describing the error
      discriminator:
        propertyName: '@type'
        mapping:
          ErrorMessage: '#/components/schemas/ErrorMessage'
    ErrorMessage_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: represents an Error
          properties:
            code:
              type: string
              description: error code
            reason:
              type: string
              description: Explanation of the reason for the error
            message:
              type: string
              description: More details and corrective actions related to the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            referenceError:
              type: string
              description: URI of documentation describing the error
      discriminator:
        propertyName: '@type'
        mapping:
          ErrorMessage: '#/components/schemas/ErrorMessage_FVO'
    ErrorMessage_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: represents an Error
          properties:
            code:
              type: string
              description: error code
            reason:
              type: string
              description: Explanation of the reason for the error
            message:
              type: string
              description: More details and corrective actions related to the error
            status:
              type: string
              description: error code extension like sys-ABC-2001
            referenceError:
              type: string
              description: URI of documentation describing the error
      discriminator:
        propertyName: '@type'
        mapping:
          ErrorMessage: '#/components/schemas/ErrorMessage_MVO'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Event_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef_FVO'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Event_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    Feature:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature'
    FeatureRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship'
    FeatureRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - relationshipType
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_FVO'
    FeatureRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Configuration feature
          properties:
            relationshipType:
              description: This is the type of the feature relationship.
              type: string
              enum:
                - excluded
                - includes
                - may include
                - requires
            name:
              description: This is the name of the target feature.
              type: string
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          FeatureRelationship: '#/components/schemas/FeatureRelationship_MVO'
    Feature_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship_FVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_FVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_FVO'
    Feature_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Configuration feature.
          properties:
            isBundle:
              description: True if this is a feature group. Default is false.
              type: boolean
            featureRelationship:
              type: array
              items:
                $ref: '#/components/schemas/FeatureRelationship_MVO'
            featureCharacteristic:
              description: This is a list of Characteristics for a particular feature.
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            policyConstraint:
              description: Reference to mangage a list of feature specification policy constraints
              type: array
              items:
                $ref: '#/components/schemas/PolicyRef_MVO'
            isEnabled:
              description: True if this feature is enabled. Default is true.
              type: boolean
            id:
              type: string
              description: unique identifier
            name:
              description: This is the name for the feature.
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          Feature: '#/components/schemas/Feature_MVO'
    GeographicAddress:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_FVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_FVO'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress_FVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            countryCode:
              type: array
              items:
                $ref: '#/components/schemas/StandardIdentifier_MVO'
              description: >-
                Country codes are short alphabetic or numeric geographical codes (geocodes)
                developed to represent countries and dependent areas, for use in data processing and
                communications. Several different systems have been developed to do this. The term
                country code frequently refers to ISO 3166-1 alpha-2 or international dialing codes,
                the E.164 country calling codes.
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            geographicLocation:
              $ref: '#/components/schemas/GeographicLocationRefOrValue_MVO'
            geographicSubAddress:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSubAddress_MVO'
            geographicAddressType:
              type: string
              description: 'Classification of the address, e.g., residential, industrial '
    GeographicLocation:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
    GeographicLocationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicLocationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
    GeographicLocationRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicLocationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
    GeographicLocationRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        GeographicLocation entity and not the GeographicLocationRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicLocationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
    GeographicLocationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
    GeographicLocation_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
          required:
            - '@type'
    GeographicLocation_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            id:
              type: string
              description: Unique identifier of the geographic location
            href:
              type: string
              description: An URI used to access to the geographic location resource
            '@type':
              type: string
              enum:
                - GeoJsonPoint
                - GeoJsonMultiPoint
                - GeoJsonLineString
                - GeoJsonMultiLineString
                - GeoJsonPolygon
              description: The name of the GeoJSON structure used in the geometry attribute
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
    GeographicSite:
      allOf:
        - $ref: '#/components/schemas/Place'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship'
    GeographicSiteRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSiteRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            href:
              type: string
              description: Reference of the related geographic site
            role:
              type: string
              description: Role of the related site in the relationship
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            id:
              type: string
              description: Unique identifier of the related site entity within the server
            relationshipType:
              type: string
              description: Type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSite_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod_FVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_FVO'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_FVO'
    GeographicSite_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - type: object
          properties:
            code:
              type: string
              description: 'A code that may be used for some addressing schemes eg: [ANSI T1.253-1999]'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the GeographicSite was created
            description:
              type: string
              description: Text describing additional information regarding the site
            status:
              type: string
              description: >-
                The condition of the GeographicSite, such as planned, underConstruction, cancelled,
                active, inactive, former
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            calendar:
              type: array
              items:
                $ref: '#/components/schemas/CalendarPeriod_MVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/PlaceRefOrValue_MVO'
            siteRelationship:
              type: array
              items:
                $ref: '#/components/schemas/GeographicSiteRelationship_MVO'
    GeographicSubAddress:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
          required:
            - subUnitNumber
            - subUnitType
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
    GeographicSubAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_FVO'
    GeographicSubAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            href:
              type: string
              description: Link to the subAddress
            id:
              type: string
              description: Unique Identifier of the subAddress
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_MVO'
    HourPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod'
    HourPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_FVO'
    HourPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            endHour:
              type: string
              description: The time when the status ends applying
            startHour:
              type: string
              description: The time when the status starts applying
      discriminator:
        propertyName: '@type'
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_MVO'
    InformationRequiredEvent:
      type: object
      description: InformationRequiredEvent generic structure
      properties:
        id:
          type: string
          description: unique identifier of the resource
        href:
          type: string
          description: hyperlink reference to the resource
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        informationRequiredPath:
          type: array
          items:
            $ref: '#/components/schemas/JsonPatch'
          minItems: 1
    Intent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent'
    IntentExpression:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression'
          TurtleExpression: '#/components/schemas/TurtleExpression'
          RdfXmlExpression: '#/components/schemas/RdfXmlExpression'
          JsonLdExpression: '#/components/schemas/JsonLdExpression'
    IntentExpression_FVO:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_FVO'
          TurtleExpression: '#/components/schemas/TurtleExpression_FVO'
          RdfXmlExpression: '#/components/schemas/RdfXmlExpression_FVO'
          JsonLdExpression: '#/components/schemas/JsonLdExpression_FVO'
    IntentExpression_MVO:
      type: object
      description: An Intent expression
      allOf:
        - $ref: '#/components/schemas/Extensible'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentExpression: '#/components/schemas/IntentExpression_MVO'
          TurtleExpression: '#/components/schemas/TurtleExpression_MVO'
          RdfXmlExpression: '#/components/schemas/RdfXmlExpression_MVO'
          JsonLdExpression: '#/components/schemas/JsonLdExpression_MVO'
    IntentRef:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
    IntentRefOrValue:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent'
    IntentRefOrValue_FVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef_FVO'
        - $ref: '#/components/schemas/Intent_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_FVO'
          Intent: '#/components/schemas/Intent_FVO'
    IntentRefOrValue_MVO:
      type: object
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or its details be
        presented)
      oneOf:
        - $ref: '#/components/schemas/IntentRef_MVO'
        - $ref: '#/components/schemas/Intent_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
          Intent: '#/components/schemas/Intent_MVO'
    IntentRef_FVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_FVO'
    IntentRef_MVO:
      type: object
      description: 'Intent reference, for when Intent is used by other entities'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
    Intent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef_FVO'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_FVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression_FVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
          required:
            - name
            - expression
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_FVO'
    Intent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            An Intent instance is the formal description of all expectations including requirements,
            goals, and constraints given to a technical system
          properties:
            description:
              type: string
              description: The description of the intent.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether an intent represents a single intent (false), or a
                bundle of intents(true).
            priority:
              type: string
              description: Can be used by intent owner to prioritize intents in an intent management system
            statusChangeDate:
              type: string
              format: date-time
              description: A date time( DateTime). The date that the entity status changed to the current one
            context:
              type: string
              description: A string used to give a context to the intent
            version:
              type: string
              description: A field that identifies the specific version of an instance of an intent.
            intentSpecification:
              $ref: '#/components/schemas/EntityRef'
            intentRelationship:
              type: array
              items:
                $ref: '#/components/schemas/EntityRelationship_MVO'
              description: A list of intents related to this intent
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
              description: >-
                Attachments that may be of relevance to this intent, such as picture, document,
                media
            name:
              type: string
              description: The name of the intent.
            expression:
              $ref: '#/components/schemas/IntentExpression_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time of the creation of this REST resource
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of this REST resource
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this intent
      discriminator:
        propertyName: '@type'
        mapping:
          Intent: '#/components/schemas/Intent_MVO'
    JsonLdExpression:
      allOf:
        - $ref: '#/components/schemas/IntentExpression'
        - type: object
          description: JsonLdExpression is the ontology-encoded form of the Intent
          properties:
            expressionValue:
              type: object
              description: >-
                JsonLdExpression is the ontology-encoded form of the Intent as JSON-LD as defined in
                https://www.w3.org/TR/json-ld/ should be validated against
                https://raw.githubusercontent.com/json-ld/json-ld.org/main/schemas/jsonld-schema.json
    JsonLdExpression_FVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_FVO'
        - type: object
          description: JsonLdExpression is the ontology-encoded form of the Intent
          properties:
            expressionValue:
              type: object
              description: >-
                JsonLdExpression is the ontology-encoded form of the Intent as JSON-LD as defined in
                https://www.w3.org/TR/json-ld/ should be validated against
                https://raw.githubusercontent.com/json-ld/json-ld.org/main/schemas/jsonld-schema.json
    JsonLdExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_MVO'
        - type: object
          description: JsonLdExpression is the ontology-encoded form of the Intent
          properties:
            expressionValue:
              type: object
              description: >-
                JsonLdExpression is the ontology-encoded form of the Intent as JSON-LD as defined in
                https://www.w3.org/TR/json-ld/ should be validated against
                https://raw.githubusercontent.com/json-ld/json-ld.org/main/schemas/jsonld-schema.json
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_FVO'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example: afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example: Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example: '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example: This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    OrderItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the product
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    Place:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicAddress: '#/components/schemas/GeographicAddress'
    PlaceRef:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicAddress'
        - $ref: '#/components/schemas/PlaceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO'
        - $ref: '#/components/schemas/PlaceRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
    PlaceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Place
        entity and not the PlaceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO'
        - $ref: '#/components/schemas/PlaceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    PlaceRef_FVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
    PlaceRef_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    Place_FVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
    Place_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Place: '#/components/schemas/Place_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
    PolicyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef'
    PolicyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_FVO'
    PolicyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Reference to managed Policy object
          properties:
            id:
              type: string
              description: unique identifier
            href:
              type: string
              description: Hyperlink reference
            version:
              type: string
            '@type':
              type: string
              description: 'When sub-classing, this defines the sub-class Extensible name'
            '@baseType':
              type: string
              description: 'When sub-classing, this defines the super-class'
            '@schemaLocation':
              type: string
              description: A URI to a JSON-Schema file that defines additional attributes and relationships
      discriminator:
        propertyName: '@type'
        mapping:
          PolicyRef: '#/components/schemas/PolicyRef_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    QueryServiceQualification:
      allOf:
        - $ref: '#/components/schemas/ServiceQualification'
        - type: object
          description: >-
            QueryServiceQualification is used to retrieve a list of services that are technically
            available in the context of the interaction (place, party, service characteristics,
            ...).
          properties:
            searchCriteria:
              $ref: '#/components/schemas/ServiceQualificationItem'
            serviceQualificationItem:
              type: array
              description: A list of service qualification items.
              items:
                $ref: '#/components/schemas/ServiceQualificationItem'
            queryServiceQualificationDate:
              type: string
              description: Date when the serviceQualification was submitted
              format: date-time
    QueryServiceQualificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QueryServiceQualificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QueryServiceQualificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryServiceQualificationCreateEvent: '#/components/schemas/QueryServiceQualificationCreateEvent'
    QueryServiceQualificationCreateEventPayload:
      type: object
      description: QueryServiceQualificationCreateEventPayload generic structure
      properties:
        queryServiceQualification:
          $ref: '#/components/schemas/QueryServiceQualification'
    QueryServiceQualificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QueryServiceQualificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QueryServiceQualificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryServiceQualificationDeleteEvent: '#/components/schemas/QueryServiceQualificationDeleteEvent'
    QueryServiceQualificationDeleteEventPayload:
      type: object
      description: QueryServiceQualificationDeleteEventPayload generic structure
      properties:
        queryServiceQualification:
          $ref: '#/components/schemas/QueryServiceQualification'
    QueryServiceQualificationStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: QueryServiceQualificationStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/QueryServiceQualificationStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          QueryServiceQualificationStateChangeEvent: '#/components/schemas/QueryServiceQualificationStateChangeEvent'
    QueryServiceQualificationStateChangeEventPayload:
      type: object
      description: QueryServiceQualificationStateChangeEventPayload generic structure
      properties:
        queryServiceQualification:
          $ref: '#/components/schemas/QueryServiceQualification'
    QueryServiceQualification_FVO:
      allOf:
        - $ref: '#/components/schemas/ServiceQualification_FVO'
        - type: object
          description: >-
            QueryServiceQualification is used to retrieve a list of services that are technically
            available in the context of the interaction (place, party, service characteristics,
            ...).
          properties:
            searchCriteria:
              $ref: '#/components/schemas/ServiceQualificationItem_FVO'
          required:
            - searchCriteria
    QueryServiceQualification_MVO:
      allOf:
        - $ref: '#/components/schemas/ServiceQualification_MVO'
        - type: object
          description: >-
            QueryServiceQualification is used to retrieve a list of services that are technically
            available in the context of the interaction (place, party, service characteristics,
            ...).
          properties:
            searchCriteria:
              $ref: '#/components/schemas/ServiceQualificationItem_MVO'
            serviceQualificationItem:
              type: array
              description: A list of service qualification items.
              items:
                $ref: '#/components/schemas/ServiceQualificationItem_MVO'
    RdfXmlExpression:
      allOf:
        - $ref: '#/components/schemas/IntentExpression'
        - type: object
          description: >-
            RdfXmlExpression is the ontology-encoded form of the Intent as RDF-XML as defined in
            https://www.w3.org/TR/rdf-syntax-grammar/
          properties:
            expressionValue:
              type: string
              description: RDF XML Expression value encoded object
    RdfXmlExpression_FVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_FVO'
        - type: object
          description: >-
            RdfXmlExpression is the ontology-encoded form of the Intent as RDF-XML as defined in
            https://www.w3.org/TR/rdf-syntax-grammar/
          properties:
            expressionValue:
              type: string
              description: RDF XML Expression value encoded object
    RdfXmlExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_MVO'
        - type: object
          description: >-
            RdfXmlExpression is the ontology-encoded form of the Intent as RDF-XML as defined in
            https://www.w3.org/TR/rdf-syntax-grammar/
          properties:
            expressionValue:
              type: string
              description: RDF XML Expression value encoded object
    RelatedEntityRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue'
    RelatedEntityRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue_FVO'
          required:
            - role
            - entity
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_FVO'
    RelatedEntityRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A reference to an entity, where the type of the entity is not known in advance. A
            related entity defines a entity described by reference or by value linked to a specific
            entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to
            the Entity and not the RelatedEntityRefOrValue class itself
          properties:
            role:
              type: string
            entity:
              $ref: '#/components/schemas/EntityRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    RelatedPlaceRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
    RelatedPlaceRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_FVO'
          required:
            - role
            - place
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
    RelatedPlaceRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Entity reference. The polymorphic attributes @type, @schemaLocation & @referredType are
            related to the RelatedPlace entity and not the RelatedPlaceRefOrValue class itself
          properties:
            role:
              type: string
            place:
              $ref: '#/components/schemas/PlaceRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
    RelatedServiceOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem'
    RelatedServiceOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem_FVO'
    RelatedServiceOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered
            service creation/change/termination.
          properties:
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            serviceOrderHref:
              type: string
              description: Reference of the related entity.
            serviceOrderId:
              type: string
              description: Unique identifier of a related entity.
            itemAction:
              $ref: '#/components/schemas/OrderItemActionType'
            itemId:
              type: string
              description: Identifier of the order item where the service was managed
            role:
              type: string
              description: role of the service order item for this service
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem_MVO'
    ResourceRef:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
    ResourceRef_FVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_FVO'
    ResourceRef_MVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
    Service:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service'
    ServiceCategoryRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The (service) category resource is used to group service candidates in logical
            containers. Categories can contain other categories.
          properties:
            version:
              type: string
              description: Category version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceCategoryRef: '#/components/schemas/ServiceCategoryRef'
    ServiceCategoryRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            The (service) category resource is used to group service candidates in logical
            containers. Categories can contain other categories.
          properties:
            version:
              type: string
              description: Category version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceCategoryRef: '#/components/schemas/ServiceCategoryRef_FVO'
    ServiceCategoryRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            The (service) category resource is used to group service candidates in logical
            containers. Categories can contain other categories.
          properties:
            version:
              type: string
              description: Category version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceCategoryRef: '#/components/schemas/ServiceCategoryRef_MVO'
    ServiceOperatingStatusType:
      enum:
        - pending
        - configured
        - starting
        - running
        - degraded
        - failed
        - limited
        - stopping
        - stopped
        - unknown
      type: string
      description: Valid values for the Operating status of the service
    ServiceQualification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            ServiceQualification is used to perform a technical eligibility. It allows to retrieve a
            list of services that are technically available in the context of the interaction
            (place, party, service characteristics, ...).
          properties:
            description:
              type: string
              description: Description of the serviceQualification
            effectiveQualificationDate:
              type: string
              description: Effective date to serviceQualification completion
              format: date-time
            instantSyncQualification:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that requester expects to get
                qualifcation result immediately in the response. If the indicator is true then the
                response code of 200 indicates the operation is successful otherwise a task is
                created with a response 201.
            estimatedResponseDate:
              type: string
              description: Date when the requester expect to provide an answer for the qualification request.
              format: date-time
            expectedQualificationDate:
              type: string
              description: A date (DateTime). Deadline date when the requester expected a qualification answer.
              format: date-time
            expirationDate:
              type: string
              description: Date when the qualification response expires
              format: date-time
            state:
              $ref: '#/components/schemas/TaskStateType'
            relatedParty:
              type: array
              description: >-
                A list of related party references, defines party or party role linked to this
                request.
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              description: A list of external identifiers associated with this resource
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            errorMessage:
              type: array
              description: >-
                A list of error message contains the error that caused the termination of
                ServiceQualification task.
              items:
                $ref: '#/components/schemas/ErrorMessage'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceQualification: '#/components/schemas/ServiceQualification'
          QueryServiceQualification: '#/components/schemas/QueryServiceQualification'
          CheckServiceQualification: '#/components/schemas/CheckServiceQualification'
    ServiceQualificationItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A ServiceQualificationItem relates to a specific service being checked in a
            qualification operation.
          properties:
            expectedActivationDate:
              type: string
              description: The date when the service is expected to be activated
              format: date-time
            id:
              type: string
              description: Id of the Service Qualification Item
            service:
              $ref: '#/components/schemas/ServiceRefOrValue'
            expectedServiceAvailabilityDate:
              description: Date when the requester looks for service availability
              type: string
              format: date-time
            expirationDate:
              description: Date when the qualification item response expires
              type: string
              format: date-time
            category:
              $ref: '#/components/schemas/ServiceCategoryRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceQualificationItem: '#/components/schemas/ServiceQualificationItem'
          CheckServiceQualificationItem: '#/components/schemas/CheckServiceQualificationItem'
    ServiceQualificationItemRelationship:
      type: object
      description: >-
        Structure used to describe relationship between serviceQualification items from the same
        serviceQualification.
      properties:
        relationshipType:
          type: string
          description: 'Type of relationship (ex: reliesOn, connectedTo, etc...)'
    ServiceQualificationItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A ServiceQualificationItem relates to a specific service being checked in a
            qualification operation.
          properties:
            expectedActivationDate:
              type: string
              description: The date when the service is expected to be activated
              format: date-time
            id:
              type: string
              description: Id of the Service Qualification Item
            service:
              $ref: '#/components/schemas/ServiceRefOrValue_FVO'
            expectedServiceAvailabilityDate:
              description: Date when the requester looks for service availability
              type: string
              format: date-time
            expirationDate:
              description: Date when the qualification item response expires
              type: string
              format: date-time
            category:
              $ref: '#/components/schemas/ServiceCategoryRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceQualificationItem: '#/components/schemas/ServiceQualificationItem_FVO'
          CheckServiceQualificationItem: '#/components/schemas/CheckServiceQualificationItem_FVO'
    ServiceQualificationItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A ServiceQualificationItem relates to a specific service being checked in a
            qualification operation.
          properties:
            expectedActivationDate:
              type: string
              description: The date when the service is expected to be activated
              format: date-time
            id:
              type: string
              description: Id of the Service Qualification Item
            service:
              $ref: '#/components/schemas/ServiceRefOrValue_MVO'
            expectedServiceAvailabilityDate:
              description: Date when the requester looks for service availability
              type: string
              format: date-time
            expirationDate:
              description: Date when the qualification item response expires
              type: string
              format: date-time
            category:
              $ref: '#/components/schemas/ServiceCategoryRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceQualificationItem: '#/components/schemas/ServiceQualificationItem_MVO'
          CheckServiceQualificationItem: '#/components/schemas/CheckServiceQualificationItem_MVO'
    ServiceQualificationRelationship:
      type: object
      properties:
        relationshipType:
          type: string
          description: The type of relationship
    ServiceQualification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            ServiceQualification is used to perform a technical eligibility. It allows to retrieve a
            list of services that are technically available in the context of the interaction
            (place, party, service characteristics, ...).
          properties:
            description:
              type: string
              description: Description of the serviceQualification
            effectiveQualificationDate:
              type: string
              description: Effective date to serviceQualification completion
              format: date-time
            instantSyncQualification:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that requester expects to get
                qualifcation result immediately in the response. If the indicator is true then the
                response code of 200 indicates the operation is successful otherwise a task is
                created with a response 201.
            estimatedResponseDate:
              type: string
              description: Date when the requester expect to provide an answer for the qualification request.
              format: date-time
            expectedQualificationDate:
              type: string
              description: A date (DateTime). Deadline date when the requester expected a qualification answer.
              format: date-time
            expirationDate:
              type: string
              description: Date when the qualification response expires
              format: date-time
            state:
              $ref: '#/components/schemas/TaskStateType'
            relatedParty:
              type: array
              description: >-
                A list of related party references, defines party or party role linked to this
                request.
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers associated with this resource
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            errorMessage:
              type: array
              description: >-
                A list of error message contains the error that caused the termination of
                ServiceQualification task.
              items:
                $ref: '#/components/schemas/ErrorMessage_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceQualification: '#/components/schemas/ServiceQualification_FVO'
          QueryServiceQualification: '#/components/schemas/QueryServiceQualification_FVO'
          CheckServiceQualification: '#/components/schemas/CheckServiceQualification_FVO'
    ServiceQualification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            ServiceQualification is used to perform a technical eligibility. It allows to retrieve a
            list of services that are technically available in the context of the interaction
            (place, party, service characteristics, ...).
          properties:
            description:
              type: string
              description: Description of the serviceQualification
            effectiveQualificationDate:
              type: string
              description: Effective date to serviceQualification completion
              format: date-time
            instantSyncQualification:
              type: boolean
              description: >-
                An indicator which when the value is "true" means that requester expects to get
                qualifcation result immediately in the response. If the indicator is true then the
                response code of 200 indicates the operation is successful otherwise a task is
                created with a response 201.
            estimatedResponseDate:
              type: string
              description: Date when the requester expect to provide an answer for the qualification request.
              format: date-time
            expectedQualificationDate:
              type: string
              description: A date (DateTime). Deadline date when the requester expected a qualification answer.
              format: date-time
            expirationDate:
              type: string
              description: Date when the qualification response expires
              format: date-time
            state:
              $ref: '#/components/schemas/TaskStateType'
            relatedParty:
              type: array
              description: >-
                A list of related party references, defines party or party role linked to this
                request.
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers associated with this resource
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            errorMessage:
              type: array
              description: >-
                A list of error message contains the error that caused the termination of
                ServiceQualification task.
              items:
                $ref: '#/components/schemas/ErrorMessage_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceQualification: '#/components/schemas/ServiceQualification_MVO'
          QueryServiceQualification: '#/components/schemas/QueryServiceQualification_MVO'
          CheckServiceQualification: '#/components/schemas/CheckServiceQualification_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service
        entity and not the ServiceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Service'
        - $ref: '#/components/schemas/ServiceRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service'
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service
        entity and not the ServiceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Service_FVO'
        - $ref: '#/components/schemas/ServiceRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_FVO'
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
    ServiceRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service
        entity and not the ServiceRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Service_MVO'
        - $ref: '#/components/schemas/ServiceRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_MVO'
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    ServiceRef_FVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    ServiceRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue'
            relationshipType:
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship'
    ServiceRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue_FVO'
            relationshipType:
              type: string
          required:
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_FVO'
    ServiceRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          properties:
            serviceRelationshipCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            service:
              $ref: '#/components/schemas/ServiceRefOrValue_MVO'
            relationshipType:
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_MVO'
    ServiceSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    ServiceSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_FVO'
    ServiceSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_MVO'
    ServiceStateType:
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - inactive
        - active
        - terminated
        - suspended
      type: string
      description: Valid values for the lifecycle state of the service
    Service_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem_FVO'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note_FVO'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature_FVO'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue_FVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship_FVO'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue_FVO'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef_FVO'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef_FVO'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_FVO'
          required:
            - state
            - serviceSpecification
            - serviceDate
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_FVO'
    Service_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Service is a base class for defining the Service hierarchy. All Services are
            characterized as either being possibly visible and usable by a Customer or not. This
            gives rise to the two subclasses of Service: CustomerFacingService and
            ResourceFacingService.
          properties:
            description:
              description: Free-text description of the service
              type: string
            isServiceEnabled:
              type: boolean
              description: >-
                If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for
                use - if FALSE and hasStarted is TRUE then the service has failed
            hasStarted:
              type: boolean
              description: 'If TRUE, this Service has already been started'
            startMode:
              type: string
              description: >-
                This attribute is an enumerated integer that indicates how the Service is started,
                such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically
                by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a
                Customer of the Provider; 5: Any of the above
            isStateful:
              type: boolean
              description: 'If TRUE, this Service can be changed without affecting any other services'
            startDate:
              type: string
              format: date-time
              description: Date when the service starts
            endDate:
              type: string
              format: date-time
              description: Date when the service ends
            serviceOrderItem:
              type: array
              description: A list of service order items related to this service
              items:
                $ref: '#/components/schemas/RelatedServiceOrderItem_MVO'
            note:
              type: array
              description: A list of notes made on this service
              items:
                $ref: '#/components/schemas/Note_MVO'
            serviceType:
              description: Business type of the service
              type: string
            isBundle:
              description: >-
                If true, the service is a ServiceBundle which regroup a service hierachy. If false,
                the service is a 'atomic' service (hierachy leaf).
              type: boolean
            name:
              description: Name of the service
              type: string
            category:
              type: string
              description: Is it a customer facing or resource facing service
            feature:
              type: array
              description: 'A list of feature associated with this service '
              items:
                $ref: '#/components/schemas/Feature_MVO'
            relatedEntity:
              type: array
              description: A list of related entities in relationship with this service
              items:
                $ref: '#/components/schemas/RelatedEntityRefOrValue_MVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            serviceCharacteristic:
              type: array
              description: >-
                A list of characteristics that characterize this service (ServiceCharacteristic
                [*])
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            serviceRelationship:
              type: array
              description: >-
                A list of service relationships (ServiceRelationship [*]). Describes links with
                other service(s) in the inventory.
              items:
                $ref: '#/components/schemas/ServiceRelationship_MVO'
            supportingService:
              type: array
              description: >-
                A list of supporting services (SupportingService [*]). A collection of services that
                support this service (bundling, link CFS to RFS)
              items:
                $ref: '#/components/schemas/ServiceRefOrValue_MVO'
            supportingResource:
              type: array
              description: >-
                A list of supporting resources (SupportingResource [*]).Note: only Service of type
                RFS can be associated with Resources
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            place:
              type: array
              description: >-
                A list of places (Place [*]). Used to define a place useful for the service (for
                example a geographical place whre the service is installed)
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            state:
              type: string
              $ref: '#/components/schemas/ServiceStateType'
            operatingStatus:
              type: string
              $ref: '#/components/schemas/ServiceOperatingStatusType'
            serviceSpecification:
              $ref: '#/components/schemas/ServiceSpecificationRef_MVO'
            serviceDate:
              description: Date when the service was created (whatever its status).
              type: string
            intent:
              $ref: '#/components/schemas/IntentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Service: '#/components/schemas/Service_MVO'
    StandardIdentifier:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier'
    StandardIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_FVO'
    StandardIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            The corresponding identification of the resource in different standard, regulatory
            definitions. The standard specification identifier (e.g., ISO 3166-1 Alpha-2) and the
            corresponding value (e.g., BE) relevant to a particular resource. It is anticipated that
            multiple standards can provide definitions for a single entity, e.g., a country
            identifier can be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
            3166-1 Alpha 3", "ISO 3166-1 Numeric")
          properties:
            format:
              type: string
              description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
              example: ISO 3166-1
            value:
              type: string
              description: 'The value of the resource in the corresponding standard.e.g., a country code value'
              example: GB
      discriminator:
        propertyName: '@type'
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_MVO'
    TaskStateType:
      enum:
        - acknowledged
        - rejected
        - inProgress
        - cancelled
        - done
        - terminatedWithError
      type: string
      description: Possible values for the state of a task
    TerminationError:
      type: object
      description: This indicates an error that caused a qualificationItem to be terminated.
      properties:
        value:
          type: string
          description: >-
            Text to describe the termination error - for example: Unable to proceed to qualification
            because incomplete information provided
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    TurtleExpression:
      allOf:
        - $ref: '#/components/schemas/IntentExpression'
        - type: object
          description: TurtleExpression is the ontology-encoded form of the Intent as Turtle RDF
          properties:
            expressionValue:
              type: string
              description: >-
                Turtle Expression value is the ontology-encoded form of the Intent as Turtle RDF as
                defined in https://www.w3.org/TR/turtle/
    TurtleExpression_FVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_FVO'
        - type: object
          description: TurtleExpression is the ontology-encoded form of the Intent as Turtle RDF
          properties:
            expressionValue:
              type: string
              description: >-
                Turtle Expression value is the ontology-encoded form of the Intent as Turtle RDF as
                defined in https://www.w3.org/TR/turtle/
    TurtleExpression_MVO:
      allOf:
        - $ref: '#/components/schemas/IntentExpression_MVO'
        - type: object
          description: TurtleExpression is the ontology-encoded form of the Intent as Turtle RDF
          properties:
            expressionValue:
              type: string
              description: >-
                Turtle Expression value is the ontology-encoded form of the Intent as Turtle RDF as
                defined in https://www.w3.org/TR/turtle/
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    QueryServiceQualification_FVO:
      description: The QueryServiceQualification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualification_FVO'
          examples:
            QueryServiceQualification_create_example:
              $ref: '#/components/examples/QueryServiceQualification_create_example_request'
      required: true
    QueryServiceQualification_MVO:
      description: The QueryServiceQualification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualification_MVO'
          examples:
            QueryServiceQualification_patch_example_4:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_4_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualification_MVO'
          examples:
            QueryServiceQualification_patch_example_1:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_1_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            QueryServiceQualification_patch_example_2:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_2_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            QueryServiceQualification_patch_example_3:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_3_request'
      required: true
    QueryServiceQualificationCreateEvent:
      description: QueryServiceQualification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualificationCreateEvent'
          examples:
            Create_1:
              $ref: '#/components/examples/Create_1_request'
      required: true
    QueryServiceQualificationStateChangeEvent:
      description: QueryServiceQualification stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualificationStateChangeEvent'
          examples:
            StateChange_1:
              $ref: '#/components/examples/StateChange_1_request'
      required: true
    QueryServiceQualificationDeleteEvent:
      description: QueryServiceQualification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualificationDeleteEvent'
          examples:
            Delete_1:
              $ref: '#/components/examples/Delete_1_request'
      required: true
    CheckServiceQualification_FVO:
      description: The CheckServiceQualification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualification_FVO'
          examples:
            CheckServiceQualification_create_example:
              $ref: '#/components/examples/CheckServiceQualification_create_example_request'
      required: true
    CheckServiceQualification_MVO:
      description: The CheckServiceQualification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualification_MVO'
          examples:
            CheckServiceQualification_patch_example_4:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_4_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualification_MVO'
          examples:
            CheckServiceQualification_patch_example_1:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_1_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            CheckServiceQualification_patch_example_2:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_2_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            CheckServiceQualification_patch_example_3:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_3_request'
      required: true
    CheckServiceQualificationCreateEvent:
      description: CheckServiceQualification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualificationCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    CheckServiceQualificationAttributeValueChangeEvent:
      description: CheckServiceQualification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualificationAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    CheckServiceQualificationStateChangeEvent:
      description: CheckServiceQualification stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualificationStateChangeEvent'
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
      required: true
    CheckServiceQualificationDeleteEvent:
      description: CheckServiceQualification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualificationDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    CheckServiceQualificationInformationRequiredEvent:
      description: CheckServiceQualification informationRequired Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualificationInformationRequiredEvent'
          examples:
            InformationRequired:
              $ref: '#/components/examples/InformationRequired_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200QueryServiceQualificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QueryServiceQualification'
          examples:
            QueryServiceQualification_list_example:
              $ref: '#/components/examples/QueryServiceQualification_list_example_response'
            QueryServiceQualification_list_example_with_field_selection:
              $ref: >-
                #/components/examples/QueryServiceQualification_list_example_with_field_selection_response
    200QueryServiceQualification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualification'
          examples:
            QueryServiceQualification_retrieve_example:
              $ref: '#/components/examples/QueryServiceQualification_retrieve_example_response'
    200QueryServiceQualification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualification'
          examples:
            QueryServiceQualification_patch_example_4:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_4_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualification'
          examples:
            QueryServiceQualification_patch_example_1:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_1_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/QueryServiceQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/QueryServiceQualification'
              - type: string
                nullable: true
          examples:
            QueryServiceQualification_patch_example_2:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_2_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/QueryServiceQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/QueryServiceQualification'
              - type: string
                nullable: true
          examples:
            QueryServiceQualification_patch_example_3:
              $ref: '#/components/examples/QueryServiceQualification_patch_example_3_response'
    201QueryServiceQualification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryServiceQualification'
          examples:
            QueryServiceQualification_create_example:
              $ref: '#/components/examples/QueryServiceQualification_create_example_response'
    200CheckServiceQualificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CheckServiceQualification'
          examples:
            CheckServiceQualification_list_example:
              $ref: '#/components/examples/CheckServiceQualification_list_example_response'
            CheckServiceQualification_list_example_with_field_selection:
              $ref: >-
                #/components/examples/CheckServiceQualification_list_example_with_field_selection_response
    200CheckServiceQualification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualification'
          examples:
            CheckServiceQualification_retrieve_example:
              $ref: '#/components/examples/CheckServiceQualification_retrieve_example_response'
    200CheckServiceQualification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualification'
          examples:
            CheckServiceQualification_patch_example_4:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_4_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualification'
          examples:
            CheckServiceQualification_patch_example_1:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_1_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CheckServiceQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/CheckServiceQualification'
              - type: string
                nullable: true
          examples:
            CheckServiceQualification_patch_example_2:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_2_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CheckServiceQualification'
              - type: array
                items:
                  $ref: '#/components/schemas/CheckServiceQualification'
              - type: string
                nullable: true
          examples:
            CheckServiceQualification_patch_example_3:
              $ref: '#/components/examples/CheckServiceQualification_patch_example_3_response'
    201CheckServiceQualification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckServiceQualification'
          examples:
            CheckServiceQualification_create_example:
              $ref: '#/components/examples/CheckServiceQualification_create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    QueryServiceQualification_list_example_response:
      value:
        - id: '54'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/queryServiceQualification/54
          description: >-
            Query Service Qualification Illustration - 2 serviceSpec available at this place for
            this category
          effectiveQualificationDate: '2023-04-13T13:51:41.218Z'
          estimatedResponseDate: '2023-04-13T14:00:00.218Z'
          expectedQualificationDate: '2023-04-13T13:51:41.218Z'
          expirationDate: '2023-04-15T13:51:41.218Z'
          externalIdentifier:
            - id: CSQ1
              '@type': ExternalIdentifier
          instantSyncQualification: true
          queryServiceQualificationDate: '2023-04-13T13:51:41.218Z'
          relatedParty:
            - role: Buyer contact
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                '@type': PartyRef
                id: '456'
                href: 'http://serverlocation:port/partyManagement/v5/individual/456'
                name: Jean Pontus
                referredType: Individual
          searchCriteria:
            id: '1'
            category:
              id: '1'
              href: 'http://serverlocation:port/serviceCatalogManagement/v5/category/1'
              name: Fiber Access
              '@type': Category
            service:
              place:
                - '@type': RelatedPlaceRefOrValue
                  role: Installation place
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              '@type': Service
            '@type': SearchCriteria
          serviceQualificationItem:
            - id: '1'
              service:
                serviceSpecification:
                  id: '78'
                  href: 'http://serverlocation:port/serviceCatalogManagement/v5/serviceSpecification/78'
                  name: X-Fiber Service
                  '@type': ServiceSpecification
                '@type': Service
              '@type': ServiceQualificationItem
            - id: '2'
              service:
                serviceSpecification:
                  id: '87'
                  href: 'http://serverlocation:port/serviceCatalogManagement/v5/serviceSpecification/87'
                  name: Standard Fiber Service
                  '@type': ServiceSpecification
                '@type': Service
              '@type': ServiceQualificationItem
          state: done
          '@type': QueryServiceQualification
      description: >-
        Here's an example of response of retrieving a list of query service qualification
        request(s). The given criteria is the query service qualification state (done).
    QueryServiceQualification_list_example_with_field_selection_response:
      value:
        - id: '48'
          effectiveQualificationDate: '2023-04-11T14:23:33.239Z'
          expirationDate: '2023-05-11T14:23:33.239Z'
          '@type': QueryServiceQualification
        - id: '44'
          effectiveQualificationDate: '2023-04-12T14:23:33.239Z'
          expirationDate: '2023-05-11T14:23:33.239Z'
          '@type': QueryServiceQualification
      description: >-
        Here's an example of response of retrieving a list of query service qualification
        request(s). The given criteria is the query service qualification state (done) with field
        selection.
    QueryServiceQualification_retrieve_example_response:
      value:
        id: '54'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/queryServiceQualification/54
        description: >-
          Query Service Qualification Illustration - 2 serviceSpec available at this place for this
          category
        effectiveQualificationDate: '2020-04-13T13:51:41.218Z'
        estimatedResponseDate: '2023-04-13T14:00:00.218Z'
        expectedQualificationDate: '2023-04-13T13:51:41.218Z'
        expirationDate: '2023-04-15T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1
            '@type': ExternalIdentifier
        instantSyncQualification: true
        queryServiceQualificationDate: '2023-04-13T13:51:41.218Z'
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'http://serverlocation:port/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        searchCriteria:
          id: '1'
          category:
            id: '1'
            href: 'http://serverlocation:port/serviceCatalogManagement/v5/category/1'
            name: Fiber Access
            '@type': Category
          service:
            place:
              - '@type': RelatedPlaceRefOrValue
                role: Installation place
                place:
                  '@type': PlaceRef
                  '@referredType': GeographicSite
                  id: '11'
                  href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                  name: Jean Pontus home
            '@type': Service
          '@type': SearchCriteria
        serviceQualificationItem:
          - id: '1'
            service:
              serviceSpecification:
                id: '78'
                href: 'http://serverlocation:port/serviceCatalogManagement/v5/serviceSpecification/78'
                name: X-Fiber Service
                '@type': ServiceSpecification
              '@type': Service
            '@type': ServiceQualificationItem
          - id: '2'
            service:
              serviceSpecification:
                id: '87'
                href: 'http://serverlocation:port/serviceCatalogManagement/v5/serviceSpecification/87'
                name: Standard Fiber Service
                '@type': ServiceSpecification
              '@type': Service
            '@type': ServiceQualificationItem
        state: done
        '@type': QueryServiceQualification
      description: >-
        Here's an example of a query service qualification request retrieval. The given criteria is
        the query service qualification request id 54.
    CheckServiceQualification_list_example_response:
      value:
        - id: '44'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
          checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
          description: check service qualification illustration
          effectiveQualificationDate: '2023-04-11T15:20:39.239Z'
          estimatedResponseDate: '2023-04-11T15:20:39.239Z'
          expectedQualificationDate: '2023-04-11T15:20:39.239Z'
          expirationDate: '2023-04-24T19:20:39.239Z'
          externalIdentifier:
            - id: CSQ1
              '@type': ExternalIdentifier
          provideAlternative: true
          provideResultReason: true
          instantSyncQualification: false
          qualificationResult: alternate
          relatedParty:
            - role: Buyer contact
              '@type': RelatedPartyOrPartyRole
              partyOrPartyRole:
                id: '456'
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                name: Jean Pontus
                '@type': PartyRef
                referredType: Individual
          serviceQualificationItem:
            - id: '1'
              expectedActivationDate: '2023-04-16T19:20:39.239Z'
              expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
              expirationDate: '2023-04-24T19:20:39.239Z'
              qualificationResult: alternate
              state: done
              alternateServiceProposal:
                - id: '1'
                  alternateServiceAvailabilityDate: '2020-04-15T19:20:39.239Z'
                  alternateService:
                    serviceCharacteristic:
                      - id: '1'
                        name: BroadcastQuality
                        valueType: string
                        value: HD
                        '@type': StringCharacteristic
                    serviceSpecification:
                      id: '23'
                      href: >-
                        https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23
                      name: TVAccess
                      '@type': ServiceSpecification
                    '@type': Service
                  '@type': AlternateServiceProposal
              eligibilityResultReason:
                - code: 26-001
                  label: not enough bandwith at this place
                  '@type': EligibilityResultReason
              service:
                place:
                  - role: Installation place
                    '@type': RelatedPlaceRefOrValue
                    place:
                      '@type': PlaceRef
                      '@referredType': GeographicSite
                      id: '11'
                      href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                      name: Jean Pontus home
                serviceCharacteristic:
                  - id: '1'
                    name: BroadcastQuality
                    valueType: string
                    value: 4K
                    '@type': StringCharacteristic
                serviceSpecification:
                  id: '23'
                  href: >-
                    https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23
                  name: TVAccess
                  '@type': ServiceSpecification
                '@type': Service
              '@type': CheckServiceQualificationItem
          state: done
          '@type': CheckServiceQualification
      description: >-
        Here's an example of response for retrieving all the CheckServiceQualification that were
        completed.
    CheckServiceQualification_list_example_with_field_selection_response:
      value:
        - id: '48'
          description: check service qualification for IP
          effectiveQualificationDate: '2023-04-11T14:23:33.239Z'
          expirationDate: '2023-04-11T14:23:33.239Z'
          qualificationResult: qualified
          '@type': CheckServiceQualification
        - id: '44'
          description: check service qualification illustration
          effectiveQualificationDate: '2023-04-11T15:20:39.239Z'
          expirationDate: '2023-04-11T14:23:33.239Z'
          qualificationResult: alternate
          '@type': CheckServiceQualification
        - id: '41'
          description: check service qualification for an UNI access
          effectiveQualificationDate: '2023-04-11T17:10:39.239Z'
          expirationDate: '2023-04-11T14:23:33.239Z'
          qualificationResult: qualified
          '@type': CheckServiceQualification
      description: >-
        Here's an example of a response for retrieving all the CheckServiceQualification that were
        completed with field selection.
    CheckServiceQualification_retrieve_example_response:
      value:
        id: '44'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
        checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
        description: check service qualification illustration
        effectiveQualificationDate: '2023-04-11T15:20:39.239Z'
        estimatedResponseDate: '2023-04-11T15:20:39.239Z'
        expectedQualificationDate: '2023-04-11T15:20:39.239Z'
        expirationDate: '2023-04-24T19:20:39.239Z'
        externalIdentifier:
          - id: CSQ1
            '@type': ExternalIdentifier
        provideAlternative: true
        provideResultReason: true
        instantSyncQualification: false
        qualificationResult: alternate
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              '@type': PartyRef
              referredType: Individual
        serviceQualificationItem:
          - id: '1'
            expectedActivationDate: '2023-04-16T19:20:39.239Z'
            expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
            expirationDate: '2023-04-24T19:20:39.239Z'
            qualificationResult: alternate
            state: done
            alternateServiceProposal:
              - id: '1'
                alternateServiceAvailabilityDate: '2020-04-15T19:20:39.239Z'
                alternateService:
                  serviceCharacteristic:
                    - id: '1'
                      name: BroadcastQuality
                      valueType: string
                      value: HD
                      '@type': StringCharacteristic
                  serviceSpecification:
                    id: '23'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23
                    name: TVAccess
                    '@type': ServiceSpecification
                  '@type': Service
                '@type': AlternateServiceProposal
            eligibilityResultReason:
              - code: 26-001
                label: not enough bandwith at this place
                '@type': EligibilityResultReason
            service:
              place:
                - role: Installation place
                  '@type': RelatedPlaceRefOrValue
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              serviceCharacteristic:
                - id: '1'
                  name: BroadcastQuality
                  valueType: string
                  value: 4K
                  '@type': StringCharacteristic
              serviceSpecification:
                id: '23'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23'
                name: TVAccess
                '@type': ServiceSpecification
              '@type': Service
            '@type': CheckServiceQualificationItem
        state: done
        '@type': CheckServiceQualification
      description: Here's a sample of a response for retrieving a CheckServiceQualification resource for id 44
    QueryServiceQualification_create_example_request:
      value:
        description: 'Query Service Qualification POST Illustration '
        expectedQualificationDate: '2023-04-13T13:51:41.218Z'
        instantSyncQualification: false
        externalIdentifier:
          - id: CSQ1
            '@type': ExternalIdentifier
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        searchCriteria:
          id: '1'
          category:
            id: '1'
            href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/category/1'
            name: Fiber Access
            '@type': ServiceCategoryRef
            '@referredType': Category
          service:
            place:
              - '@type': RelatedPlaceRefOrValue
                role: Installation place
                place:
                  '@type': PlaceRef
                  '@referredType': GeographicSite
                  id: '11'
                  href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                  name: Jean Pontus home
            '@type': Service
          '@type': ServiceQualificationItem
        '@type': QueryServiceQualification
      description: Here's an example of a request for creation os QueryServiceQualification.
    QueryServiceQualification_create_example_response:
      value:
        id: '54'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/queryServiceQualification/54
        description: >-
          Query Service Qualification Illustration - 2 serviceSpec available at this place for this
          category
        effectiveQualificationDate: '2023-04-13T13:51:41.218Z'
        estimatedResponseDate: '2023-04-13T14:00:00.218Z'
        expectedQualificationDate: '2023-04-13T13:51:41.218Z'
        expirationDate: '2023-04-15T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1
            '@type': ExternalIdentifier
        instantSyncQualification: false
        queryServiceQualificationDate: '2023-04-13T13:51:41.218Z'
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              '@type': PartyRef
              referredType: Individual
        searchCriteria:
          id: '1'
          category:
            id: '1'
            href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/category/1'
            name: Fiber Access
            '@type': ServiceCategoryRef
            '@referredType': Category
          service:
            place:
              - '@type': RelatedPlaceRefOrValue
                role: Installation place
                place:
                  '@type': PlaceRef
                  '@referredType': GeographicSite
                  id: '11'
                  href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                  name: Jean Pontus home
            '@type': Service
          '@type': ServiceQualificationItem
        serviceQualificationItem:
          - id: '1'
            expirationDate: '2023-04-24T19:20:39.239Z'
            service:
              serviceSpecification:
                id: '78'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/78'
                name: X-Fiber Service
                '@type': ServiceSpecification
              '@type': Service
            '@type': ServiceQualificationItem
          - id: '2'
            expirationDate: '2023-04-24T19:20:39.239Z'
            service:
              serviceSpecification:
                id: '87'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/87'
                name: Standard Fiber Service
                '@type': ServiceSpecification
              '@type': Service
            '@type': ServiceQualificationItem
        state: acknowledged
        '@type': QueryServiceQualification
      description: Here's an example of a response for create QueryServiceQualification request.
    CheckServiceQualification_create_example_request:
      value:
        description: check service qualification illustration
        expectedQualificationDate: '2023-04-11T15:20:39.239Z'
        externalIdentifier:
          - id: CSQ1
            '@type': ExternalIdentifier
        provideAlternative: true
        instantSyncQualification: false
        provideResultReason: true
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              '@type': PartyRef
              referredType: Individual
        serviceQualificationItem:
          - id: '1'
            expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
            service:
              place:
                - role: Installation place
                  '@type': RelatedPlaceRefOrValue
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              serviceCharacteristic:
                - id: '1'
                  name: BroadcastQuality
                  valueType: string
                  value: 4K
                  '@type': StringCharacteristic
              serviceSpecification:
                id: '23'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23'
                name: TVAccess
                '@type': ServiceSpecification
              '@type': Service
            '@type': CheckServiceQualificationItem
        '@type': CheckServiceQualification
      description: Here's an example of a request for creation os CheckServiceQualification.
    CheckServiceQualification_create_example_response:
      value:
        id: '44'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
        checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
        description: check service qualification illustration
        effectiveQualificationDate: '2023-04-11T15:20:39.239Z'
        estimatedResponseDate: '2023-04-11T15:20:39.239Z'
        expectedQualificationDate: '2023-04-11T15:20:39.239Z'
        expirationDate: '2023-04-24T19:20:39.239Z'
        externalIdentifier:
          - id: CSQ1
            '@type': ExternalIdentifier
        provideAlternative: true
        provideResultReason: true
        instantSyncQualification: false
        qualificationResult: alternate
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              '@type': PartyRef
              referredType: Individual
        serviceQualificationItem:
          - id: '1'
            expectedActivationDate: '2023-04-16T19:20:39.239Z'
            expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
            expirationDate: '2023-04-24T19:20:39.239Z'
            qualificationResult: alternate
            state: done
            alternateServiceProposal:
              - id: '1'
                alternateServiceAvailabilityDate: '2023-04-15T19:20:39.239Z'
                alternateService:
                  serviceCharacteristic:
                    - id: '1'
                      name: BroadcastQuality
                      valueType: string
                      value: HD
                      '@type': StringCharacteristic
                  serviceSpecification:
                    id: '23'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23
                    name: TVAccess
                    '@type': ServiceSpecification
                  '@type': Service
                '@type': AlternateServiceProposal
            eligibilityResultReason:
              - code: 26-001
                label: not enough bandwith at this place
                '@type': EligibilityResultReason
            service:
              place:
                - role: Installation place
                  '@type': RelatedPlaceRefOrValue
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              serviceCharacteristic:
                - id: '1'
                  name: BroadcastQuality
                  valueType: string
                  value: 4K
                  '@type': StringCharacteristic
              serviceSpecification:
                id: '23'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23'
                name: TVAccess
                '@type': ServiceSpecification
              '@type': Service
            '@type': CheckServiceQualificationItem
        state: done
        '@type': CheckServiceQualification
      description: Here's an example of a response for create CheckServiceQualification request.
    QueryServiceQualification_patch_example_1_request:
      value:
        expectedQualificationDate: '2023-06-13T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        '@type': QueryServiceQualification
      description: >-
        Here's an example of a request for patching a QueryServiceQualification resource (created
        via previous POST) with change on following attributes- extexternalIdentifierernalId and
        expectedQualificationDate value.
    QueryServiceQualification_patch_example_1_response:
      value:
        id: '54'
        href: 'http://serverlocation:port/serviceQualificationManagement/v5/queryServiceQualification/54'
        description: Query Service Qualification Illustration
        estimatedResponseDate: '2023-04-13T14:00:00.218Z'
        expectedQualificationDate: '2023-06-13T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        instantSyncQualification: false
        queryServiceQualificationDate: '2023-04-13T13:51:41.218Z'
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'http://serverlocation:port/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        searchCriteria:
          id: '1'
          category:
            id: '1'
            href: 'http://serverlocation:port/serviceCatalogManagement/v5/category/1'
            name: Fiber Access
            '@type': Category
          service:
            place:
              - '@type': RelatedPlaceRefOrValue
                role: Installation place
                place:
                  '@type': PlaceRef
                  '@referredType': GeographicSite
                  id: '11'
                  href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                  name: Jean Pontus home
          '@type': SearchCriteria
        state: acknowledged
        '@type': QueryServiceQualification
      description: >-
        Here's an example of a response of patching a QueryServiceQualification resource (created
        via previous POST) with change on following attributes- externalIdentifier and
        expectedQualificationDate value.
    QueryServiceQualification_patch_example_2_request:
      value:
        - op: replace
          path: expectedQualificationDate
          value: '2023-04-11T15:20:39.239Z'
      description: >-
        Here's an example of a request for patching a QueryServiceQualification resource (created
        via previous POST) with change on expectedQualificationDate value.
    QueryServiceQualification_patch_example_2_response:
      value:
        id: '54'
        href: 'http://serverlocation:port/serviceQualificationManagement/v5/queryServiceQualification/54'
        description: Query Service Qualification Illustration
        estimatedResponseDate: '2023-04-13T14:00:00.218Z'
        expectedQualificationDate: '2023-06-13T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        instantSyncQualification: false
        queryServiceQualificationDate: '2023-04-13T13:51:41.218Z'
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'http://serverlocation:port/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        searchCriteria:
          id: '1'
          category:
            id: '1'
            href: 'http://serverlocation:port/serviceCatalogManagement/v5/category/1'
            name: Fiber Access
            '@type': Category
          service:
            place:
              - '@type': RelatedPlaceRefOrValue
                role: Installation place
                place:
                  '@type': PlaceRef
                  '@referredType': GeographicSite
                  id: '11'
                  href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                  name: Jean Pontus home
          '@type': SearchCriteria
        state: acknowledged
        '@type': QueryServiceQualification
      description: >-
        Here's an example of response of patching a QueryServiceQualification resource (created via
        previous POST) with change on expectedQualificationDate value.
    QueryServiceQualification_patch_example_3_request:
      value:
        - op: replace
          path: /relatedParty/partyOrPartyRole/name?relatedParty.partyOrPartyRole.id=456
          value: Ross
      description: >-
        Here's an example of a request for patching a QueryServiceQualification resource (created
        via previous POST) with change on related party.
    QueryServiceQualification_patch_example_3_response:
      value:
        id: '54'
        href: 'http://serverlocation:port/serviceQualificationManagement/v5/queryServiceQualification/54'
        description: Query Service Qualification Illustration
        estimatedResponseDate: '2023-04-13T14:00:00.218Z'
        expectedQualificationDate: '2023-06-13T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        instantSyncQualification: false
        queryServiceQualificationDate: '2023-04-13T13:51:41.218Z'
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'http://serverlocation:port/partyManagement/v5/individual/456'
              name: Ross
              referredType: Individual
        searchCriteria:
          id: '1'
          category:
            id: '1'
            href: 'http://serverlocation:port/serviceCatalogManagement/v5/category/1'
            name: Fiber Access
            '@type': Category
          service:
            place:
              - '@type': RelatedPlaceRefOrValue
                role: Installation place
                place:
                  '@type': PlaceRef
                  '@referredType': GeographicSite
                  id: '11'
                  href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                  name: Jean Pontus home
          '@type': SearchCriteria
        state: acknowledged
        '@type': QueryServiceQualification
      description: >-
        Here's an example of response of patching a QueryServiceQualification resource (created via
        previous POST) with change on related party.
    QueryServiceQualification_patch_example_4_request:
      value:
        expectedQualificationDate: '2023-06-13T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        '@type': QueryServiceQualification
      description: >-
        Here's an example of a request for patching a QueryServiceQualification resource (created
        via previous POST) with change on expectedQualificationDate, externalIdentifier,
        relatedParty.
    QueryServiceQualification_patch_example_4_response:
      value:
        id: '54'
        href: 'http://serverlocation:port/serviceQualificationManagement/v5/queryServiceQualification/54'
        description: Query Service Qualification Illustration
        estimatedResponseDate: '2023-04-13T14:00:00.218Z'
        expectedQualificationDate: '2023-06-13T13:51:41.218Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        instantSyncQualification: false
        queryServiceQualificationDate: '2023-04-13T13:51:41.218Z'
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '490'
              href: 'http://serverlocation:port/partyManagement/v5/individual/456'
              name: Ross
              referredType: Individual
        searchCriteria:
          id: '1'
          category:
            id: '1'
            href: 'http://serverlocation:port/serviceCatalogManagement/v5/category/1'
            name: Fiber Access
            '@type': Category
          service:
            place:
              - '@type': RelatedPlaceRefOrValue
                role: Installation place
                place:
                  '@type': PlaceRef
                  '@referredType': GeographicSite
                  id: '11'
                  href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                  name: Jean Pontus home
            '@type': Service
          '@type': SearchCriteria
        state: acknowledged
        '@type': QueryServiceQualification
      description: >-
        Here's an example of response of patching a QueryServiceQualification resource (created via
        previous POST) with change on expectedQualificationDate, externalIdentifier, relatedParty.
    CheckServiceQualification_patch_example_1_request:
      value:
        expectedQualificationDate: '2023-06-15T15:20:39.239Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        '@type': CheckServiceQualification
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with change on following attributes- externalIdentifier and
        expectedQualificationDate.
    CheckServiceQualification_patch_example_1_response:
      value:
        id: '44'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
        checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
        description: check service qualification illustration
        expectedQualificationDate: '2023-06-15T15:20:39.239Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        provideAlternative: true
        provideResultReason: true
        instantSyncQualification: false
        qualificationResult: unqualified
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        serviceQualificationItem:
          - id: '1'
            expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
            qualificationResult: unqualified
            state: acknowledged
            service:
              place:
                - role: Installation place
                  '@type': RelatedPlaceRefOrValue
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              serviceCharacteristic:
                - id: '1'
                  name: BroadcastQuality
                  valueType: string
                  value: 4K
                  '@type': StringCharacteristic
              serviceSpecification:
                id: '23'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23'
                name: TVAccess
                '@type': ServiceSpecification
              '@type': Service
            '@type': CheckServiceQualificationItem
        state: acknowledged
        '@type': CheckServiceQualification
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with change on following attributes- externalIdentifier and
        expectedQualificationDate.
    CheckServiceQualification_patch_example_2_request:
      value:
        - op: replace
          path: expectedQualificationDate
          value: '2023-04-11T15:20:39.239Z'
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with change on expectedQualificationDate.
    CheckServiceQualification_patch_example_2_response:
      value:
        id: '44'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
        checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
        description: check service qualification illustration
        expectedQualificationDate: '2023-06-15T15:20:39.239Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        provideAlternative: true
        provideResultReason: true
        instantSyncQualification: false
        qualificationResult: unqualified
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        serviceQualificationItem:
          - id: '1'
            expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
            qualificationResult: unqualified
            state: acknowledged
            service:
              place:
                - role: Installation place
                  '@type': RelatedPlaceRefOrValue
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              serviceCharacteristic:
                - id: '1'
                  name: BroadcastQuality
                  valueType: string
                  value: 4K
                  '@type': StringCharacteristic
              serviceSpecification:
                id: '23'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23'
                name: TVAccess
                '@type': ServiceSpecification
              '@type': Service
            '@type': CheckServiceQualificationItem
        state: acknowledged
        '@type': CheckServiceQualification
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with updated expectedQualificationDate.
    CheckServiceQualification_patch_example_3_request:
      value:
        - op: replace
          path: /serviceQualificationItem/expectedActivationDate?serviceQualificationItem.id=1
          value: '2023-04-16T19:20:39.239Z'
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with updated expectedActivationDate.
    CheckServiceQualification_patch_example_3_response:
      value:
        id: '44'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
        checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
        description: check service qualification illustration
        expectedQualificationDate: '2023-06-15T15:20:39.239Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        provideAlternative: true
        provideResultReason: true
        instantSyncQualification: false
        qualificationResult: unqualified
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        serviceQualificationItem:
          - id: '1'
            expectedActivationDate: '2023-04-16T19:20:39.239Z'
            expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
            qualificationResult: unqualified
            state: acknowledged
            service:
              place:
                - role: Installation place
                  '@type': RelatedPlaceRefOrValue
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              serviceCharacteristic:
                - id: '1'
                  name: BroadcastQuality
                  valueType: string
                  value: 4K
                  '@type': StringCharacteristic
              serviceSpecification:
                id: '23'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23'
                name: TVAccess
                '@type': ServiceSpecification
              '@type': Service
            '@type': CheckServiceQualificationItem
        state: acknowledged
        '@type': CheckServiceQualification
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with updated expectedActivationDate.
    CheckServiceQualification_patch_example_4_request:
      value:
        expectedQualificationDate: '2023-06-15T15:20:39.239Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        '@type': CheckServiceQualification
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with change on following attributes- externalIdentifier and
        expectedQualificationDate value.
    CheckServiceQualification_patch_example_4_response:
      value:
        id: '44'
        href: >-
          https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
        checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
        description: check service qualification illustration
        expectedQualificationDate: '2023-06-15T15:20:39.239Z'
        externalIdentifier:
          - id: CSQ1-001
            '@type': ExternalIdentifier
        provideAlternative: true
        provideResultReason: true
        instantSyncQualification: false
        qualificationResult: unqualified
        relatedParty:
          - role: Buyer contact
            '@type': RelatedPartyOrPartyRole
            partyOrPartyRole:
              '@type': PartyRef
              id: '456'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              name: Jean Pontus
              referredType: Individual
        serviceQualificationItem:
          - id: '1'
            expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
            qualificationResult: unqualified
            state: acknowledged
            service:
              place:
                - role: Installation place
                  '@type': RelatedPlaceRefOrValue
                  place:
                    '@type': PlaceRef
                    '@referredType': GeographicSite
                    id: '11'
                    href: 'https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11'
                    name: Jean Pontus home
              serviceCharacteristic:
                - id: '1'
                  name: BroadcastQuality
                  valueType: string
                  value: 4K
                  '@type': StringCharacteristic
              serviceSpecification:
                id: '23'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23'
                name: TVAccess
                '@type': ServiceSpecification
              '@type': Service
            '@type': CheckServiceQualificationItem
        state: acknowledged
        '@type': CheckServiceQualification
      description: >-
        Here's an example of a request for patching a CheckServiceQualification resource (created
        via previous POST) with change on following attributes- externalIdentifier and
        expectedQualificationDate value.
    Create_1_request:
      value:
        correlationId: b122fa39-7242
        description: QueryServiceQualificationCreateEvent illustration
        domain: Commercial
        eventId: 4d6e-98cf-a085d0121f61
        eventTime: '2022-08-25T12:20:45.491Z'
        eventType: QueryServiceQualificationCreateEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:44.232Z'
        title: QueryServiceQualificationCreateEvent
        event:
          queryServiceQualification:
            id: '54'
            href: >-
              https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/queryServiceQualification/54
            description: >-
              Query Service Qualification Illustration - 2 serviceSpec available at this place for
              this category
            effectiveQualificationDate: '2020-04-13T13:51:41.218Z'
            estimatedResponseDate: '2020-04-13T14:00:00.218Z'
            expectedQualificationDate: '2020-04-13T13:51:41.218Z'
            expirationDate: '2020-04-15T13:51:41.218Z'
            externalIdentifier:
              - id: CSQ1
                '@type': ExternalIdentifier
            instantSyncQualification: true
            queryServiceQualificationDate: '2020-04-13T13:51:41.218Z'
            relatedParty:
              - role: Buyer contact
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: '456'
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                  name: Jean Pontus
                  '@type': PartyRef
                  referredType: Individual
            searchCriteria:
              id: '1'
              category:
                id: '1'
                href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/category/1'
                name: Fiber Access
                '@type': ServiceCategoryRef
                '@referredType': Category
              service:
                place:
                  - '@type': RelatedPlaceRefOrValue
                    role: Installation place
                    place:
                      '@type': PlaceRef
                      '@referredType': GeographicSite
                      id: '11'
                      href: 'http://serverlocation:port/geographicSiteManagement/v5/geographicSite/11'
                      name: Jean Pontus home
                '@type': Service
              '@type': ServiceQualificationItem
            serviceQualificationItem:
              - id: '1'
                expirationDate: '2023-04-24T19:20:39.239Z'
                service:
                  serviceSpecification:
                    id: '78'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/78
                    name: X-Fiber Service
                    '@type': ServiceSpecification
                  '@type': Service
                '@type': ServiceQualificationItem
              - id: '2'
                expirationDate: '2023-04-24T19:20:39.239Z'
                service:
                  serviceSpecification:
                    id: '87'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/87
                    name: Standard Fiber Service
                    '@type': ServiceSpecification
                  '@type': Service
                '@type': ServiceQualificationItem
            state: done
            '@type': QueryServiceQualification
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QueryServiceQualificationCreateEvent
      description: Message example for QueryServiceQualificationCreateEvent event
    StateChange_1_request:
      value:
        correlationId: 95e2f5d5-e67f
        description: QueryServiceQualificationStateChangeEvent illustration
        domain: Commercial
        eventId: 4011-abc1-8a9dfc8ff694
        eventTime: '2022-08-25T12:20:45.501Z'
        eventType: QueryServiceQualificationStateChangeEvent
        priority: '5'
        timeOcurred: '2022-08-25T12:20:40.538Z'
        title: QueryServiceQualificationStateChangeEvent
        event:
          queryServiceQualification:
            href: >-
              https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/queryServiceQualification/54
            id: '54'
            '@type': QueryServiceQualification
            state: done
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QueryServiceQualificationStateChangeEvent
      description: Message example for QueryServiceQualificationStateChangeEvent event
    Delete_1_request:
      value:
        correlationId: 4afc7d04-5251
        description: QueryServiceQualificationDeleteEvent illustration
        domain: Commercial
        eventId: 4212-968d-a8fe5f08aa16
        eventTime: '2022-08-25T12:20:45.513Z'
        eventType: QueryServiceQualificationDeleteEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:20:36.791Z'
        title: QueryServiceQualificationDeleteEvent
        event:
          queryServiceQualification:
            id: '54'
            href: >-
              http://serverlocation:port/serviceQualificationManagement/v5/queryServiceQualification/54
            '@type': QueryServiceQualification
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': QueryServiceQualificationDeleteEvent
      description: Message example for QueryServiceQualificationDeleteEvent event
    Create_request:
      value:
        correlationId: 901e0ff8-b717
        description: CheckServiceQualificationCreateEvent illustration
        domain: Commercial
        eventId: 439e-8ffd-25b84f13b3df
        eventTime: '2023-03-05T12:41:51.931Z'
        eventType: CheckServiceQualificationCreateEvent
        priority: '2'
        timeOcurred: '2023-03-05T12:41:49.125Z'
        title: CheckServiceQualificationCreateEvent
        event:
          checkServiceQualification:
            id: '44'
            href: >-
              https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
            checkServiceQualificationDate: '2023-04-10T19:20:39.239Z'
            description: check service qualification illustration
            effectiveQualificationDate: '2023-04-11T15:20:39.239Z'
            estimatedResponseDate: '2023-04-11T15:20:39.239Z'
            expectedQualificationDate: '2023-04-11T15:20:39.239Z'
            expirationDate: '2023-04-24T19:20:39.239Z'
            externalIdentifier:
              - id: CSQ1
                '@type': ExternalIdentifier
            provideAlternative: true
            provideResultReason: true
            instantSyncQualification: false
            qualificationResult: alternate
            relatedParty:
              - role: Buyer contact
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: '456'
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                  name: Jean Pontus
                  '@type': PartyRef
                  referredType: Individual
            serviceQualificationItem:
              - id: '1'
                expectedActivationDate: '2023-04-16T19:20:39.239Z'
                expectedServiceAvailabilityDate: '2023-04-11T19:20:39.239Z'
                expirationDate: '2023-04-24T19:20:39.239Z'
                qualificationResult: alternate
                state: done
                alternateServiceProposal:
                  - id: '1'
                    alternateServiceAvailabilityDate: '2023-04-15T19:20:39.239Z'
                    alternateService:
                      serviceCharacteristic:
                        - id: '1'
                          name: BroadcastQuality
                          valueType: string
                          value: HD
                          '@type': StringCharacteristic
                      serviceSpecification:
                        id: '23'
                        href: >-
                          https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23
                        name: TVAccess
                        '@type': ServiceSpecification
                      '@type': Service
                    '@type': AlternateServiceProposal
                eligibilityResultReason:
                  - code: 26-001
                    label: not enough bandwith at this place
                    '@type': ServiceEligibilityResultReason
                service:
                  place:
                    - role: Installation place
                      '@type': RelatedPlaceRefOrValue
                      place:
                        '@type': PlaceRef
                        '@referredType': GeographicSite
                        id: '11'
                        href: >-
                          https://mycsp.com:8080/tmf-api/geographicSiteManagement/v5/geographicSite/11
                        name: Jean Pontus home
                  serviceCharacteristic:
                    - '@type': StringCharacteristic
                      id: '1'
                      name: BroadcastQuality
                      valueType: string
                      value: 4K
                  serviceSpecification:
                    id: '23'
                    href: >-
                      https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/23
                    name: TVAccess
                    '@type': ServiceSpecification
                  '@type': Service
                '@type': ServiceQualificationItem
            state: done
            '@type': CheckServiceQualification
        reportingSystem:
          id: '954'
          name: APP-190
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '441'
          name: APP-643
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckServiceQualificationCreateEvent
      description: Message example for CheckServiceQualificationCreateEvent event
    AttributeValueChange_request:
      value:
        correlationId: e7e44c9a-64f5
        description: CheckServiceQualificationAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 483f-800d-f34613c8d3e2
        eventTime: '2023-08-25T12:20:45.443Z'
        eventType: CheckServiceQualificationAttributeValueChangeEvent
        priority: '1'
        timeOcurred: '2023-08-25T12:20:42.512Z'
        title: CheckServiceQualificationAttributeValueChangeEvent
        event:
          checkServiceQualification:
            href: >-
              https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
            id: '44'
            '@type': CheckServiceQualification
            relatedParty:
              - role: Buyer contact
                '@type': RelatedPartyOrPartyRole
                partyOrPartyRole:
                  id: '456'
                  href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
                  name: Ross
                  '@type': PartyRef
                  referredType: Individual
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckServiceQualificationAttributeValueChangeEvent
      description: Message example for CheckServiceQualificationAttributeValueChangeEvent event
    StateChange_request:
      value:
        correlationId: a19c7353-eae1
        description: CheckServiceQualificationStateChangeEvent illustration
        domain: Commercial
        eventId: 45a4-81bb-85fa6cc903c8
        eventTime: '2023-03-05T12:41:51.931Z'
        eventType: CheckServiceQualificationStateChangeEvent
        priority: '5'
        timeOcurred: '2023-03-05T12:41:44.375Z'
        title: CheckServiceQualificationStateChangeEvent
        event:
          checkServiceQualification:
            href: >-
              https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
            id: '44'
            '@type': CheckServiceQualification
            state: done
        reportingSystem:
          id: '954'
          name: APP-190
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '441'
          name: APP-643
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckServiceQualificationStateChangeEvent
      description: >-
        Message example for CheckServiceQualificationStateChangeEvent event with ?fields=state
        property only
    Delete_request:
      value:
        correlationId: b3727ad0-1140
        description: CheckServiceQualificationDeleteEvent illustration
        domain: Commercial
        eventId: 4c58-840e-790e0657230f
        eventTime: '2023-03-05T12:41:51.932Z'
        eventType: CheckServiceQualificationDeleteEvent
        priority: '4'
        timeOcurred: '2023-03-05T12:41:46.084Z'
        title: CheckServiceQualificationDeleteEvent
        event:
          checkServiceQualification:
            id: '44'
            href: >-
              https://mycsp.com:8080/tmf-api/serviceQualificationManagement/v5/checkServiceQualification/44
            '@type': CheckServiceQualification
        reportingSystem:
          id: '954'
          name: APP-190
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '441'
          name: APP-643
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckServiceQualificationDeleteEvent
      description: Message example for CheckServiceQualificationDeleteEvent event
    InformationRequired_request:
      value:
        correlationId: d4c8651f-3939
        description: CheckServiceQualificationInformationRequiredEvent illustration
        domain: Commercial
        eventId: 45bd-a19f-814d80a49d5e
        eventTime: '2023-08-25T12:20:45.475Z'
        eventType: CheckServiceQualificationInformationRequiredEvent
        priority: '4'
        timeOcurred: '2023-08-25T12:20:40.050Z'
        title: CheckServiceQualificationInformationRequiredEvent
        event:
          checkServiceQualification:
            id: '44'
            href: >-
              http://serverlocation:port/serviceQualificationManagement/v5/checkServiceQualification/44
            '@type': CheckServiceQualification
          informationRequired:
            informationRequiredPath:
              - op: add
                path: expectedQualificationDate
        reportingSystem:
          id: '768'
          name: APP-897
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '276'
          name: APP-819
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': CheckServiceQualificationInformationRequiredEvent
      description: Message example for CheckServiceQualificationInformationRequiredEvent event
