openapi: 3.0.1
info:
  title: Digital Identity Management
  description: |-
    ## TMF API Reference: TMF720 - Digital Identity Management

    ### Version 4.0. - January 2021 

    Digital Identity Management API goal is to provide the ability to manage a digital identity. This digital identity allows to identify an individual, a resource, or a partyRole (a specific role - or set of roles - for a given individual). A digital identity is associated with credential/authentification method. These credential/authentification methods should be extensible to describe all type of authentification method like login/password, biometric, token, etc.. A contact medium is also associated with digital identity (or directly at credential level) to manage credential recovery UCs. 
  version: 4.0.0
servers:
  - url: https://serverRoot/tmf-api/digitalIdentityManagement/v4/
tags:
  - name: digitalIdentity
  - name: notification listeners (client side)
  - name: events subscription
paths:
  /digitalIdentity:
    get:
      tags:
        - digitalIdentity
      summary: List or find DigitalIdentity objects
      description: This operation list or find DigitalIdentity entities
      operationId: listDigitalIdentity
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DigitalIdentity'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - digitalIdentity
      summary: Creates a DigitalIdentity
      description: This operation creates a DigitalIdentity entity.
      operationId: createDigitalIdentity
      requestBody:
        description: The DigitalIdentity to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalIdentity_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalIdentity'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: digitalIdentity
  /digitalIdentity/{id}:
    get:
      tags:
        - digitalIdentity
      summary: Retrieves a DigitalIdentity by ID
      description: This operation retrieves a DigitalIdentity entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveDigitalIdentity
      parameters:
        - name: id
          in: path
          description: Identifier of the DigitalIdentity
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalIdentity'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - digitalIdentity
      summary: Deletes a DigitalIdentity
      description: This operation deletes a DigitalIdentity entity.
      operationId: deleteDigitalIdentity
      parameters:
        - name: id
          in: path
          description: Identifier of the DigitalIdentity
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - digitalIdentity
      summary: Updates partially a DigitalIdentity
      description: This operation updates partially a DigitalIdentity entity.
      operationId: patchDigitalIdentity
      parameters:
        - name: id
          in: path
          description: Identifier of the DigitalIdentity
          required: true
          schema:
            type: string
      requestBody:
        description: The DigitalIdentity to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalIdentity_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalIdentity'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: digitalIdentity
  /hub:
    post:
      tags:
        - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        '201':
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/digitalIdentityCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity DigitalIdentityCreateEvent
      description: Example of a client listener for receiving the notification DigitalIdentityCreateEvent
      operationId: listenToDigitalIdentityCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalIdentityCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/digitalIdentityStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity DigitalIdentityStateChangeEvent
      description: Example of a client listener for receiving the notification DigitalIdentityStateChangeEvent
      operationId: listenToDigitalIdentityStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalIdentityStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/digitalIdentityDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity DigitalIdentityDeleteEvent
      description: Example of a client listener for receiving the notification DigitalIdentityDeleteEvent
      operationId: listenToDigitalIdentityDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalIdentityDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/digitalIdentityAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity DigitalIdentityAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification DigitalIdentityAttributeValueChangeEvent
      operationId: listenToDigitalIdentityAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalIdentityAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
      description: Base schema for adressable entities
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Complements the description of an element (for instance a product) through video, pictures...
    AttachmentRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique-Identifier for this attachment
        href:
          type: string
          description: URL serving as reference for the attachment resource
          format: uri
        description:
          type: string
          description: A narrative text describing the content of the attachment
        name:
          type: string
          description: Name of the related entity.
        url:
          type: string
          description: Link to the attachment media/content
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures
    AttachmentRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this particular attachment
          example: 4aafacbd-11ff-4dc8-b445-305f2215715f
        href:
          type: string
          description: URI for this Attachment
          format: uri
          example: http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
        attachmentType:
          type: string
          description: Attachment type such as video, picture
          example: video
        content:
          type: string
          description: The actual contents of the attachment object, if embedded, encoded as base64
          format: base64
        description:
          type: string
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
        mimeType:
          type: string
          description: Attachment mime type such as extension file for video, picture and document
        name:
          type: string
          description: The name of the attachment
        url:
          type: string
          description: Uniform Resource Locator, is a web page address (a subset of URI)
          format: uri
          example: http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.
    BiometricCredential:
      type: object
      properties:
        id:
          type: string
          description: an identifier for a credential/authentification method for this digital identity
        biometricSubType:
          type: string
          description: 'a biometric sub type when required like for finger: thumb, index, ring , pinkyFinger, etc '
        biometricType:
          type: string
          description: 'a biometric type like finger, iris, face, etc... '
        state:
          type: string
          description: Used to indicate the current lifecycle state of this credential (like active, inactive, expired).
        trustLevel:
          type: string
          description: A level of assurance associated with this credential - this could be used to limit/allow specific permission based on this trust level.
        attachment:
          type: array
          description: List of attachment(s) associated with this biometric data.
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        contactMedium:
          type: array
          description: List of contact medium associated with this credential/authentification method.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A Credential based on a login and a password.
    Credential:
      required:
        - '@type'
        - id
      type: object
      properties:
        id:
          type: string
          description: an identifier for a credential/authentification method for this digital identity
        state:
          type: string
          description: Used to indicate the current lifecycle state of this credential (like active, inactive, expired).
        trustLevel:
          type: string
          description: A level of assurance associated with this credential - this could be used to limit/allow specific permission based on this trust level.
        contactMedium:
          type: array
          description: List of contact medium associated with this credential/authentification method.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Credential is a class that allow to describe an authentification method.
    DigitalIdentity:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        creationDate:
          type: string
          description: Date and time of the Digital Identity creation (timestamp)
          format: date-time
        lastUpdate:
          type: string
          description: Date and time of the Digital Identity last update (timestamp)
          format: date-time
        nickname:
          type: string
          description: Nickname associated to this digital identity (like Juanito17 or the QuebecMoose etc...).
        status:
          type: string
          description: Used to indicate the current lifecycle status of this digital identity (unknown, active, suspended, archived).
        attachment:
          type: array
          description: List of attachment associated with this digital identity. Could be use to link a cute cat or moose picture to a digital identity for example.
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        contactMedium:
          type: array
          description: List of contact medium associated with the digital identity.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        credential:
          type: array
          description: A list of credential/authentification method that are used for this digital identity.
          items:
            $ref: '#/components/schemas/Credential'
        individualIdentified:
          $ref: '#/components/schemas/PartyRef'
        partyRoleIdentified:
          type: array
          description: Related Parties who are identified by this digital identity.
          items:
            $ref: '#/components/schemas/RelatedParty'
        relatedParty:
          type: array
          description: Parties who have an interest in this digital identity (like the organization in charge of providing identity). This is NOT the party identified by this digital identity.
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceIdentified:
          $ref: '#/components/schemas/ResourceRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: DigitalIdentity is a class that allow to describe a digital identity for an individual or a resource or a specific party role. One of these three MUST be provided. If an individual is provided, this identity will be for all her/his partyRole. To avoid confusion it is recommended in this case to not provide partyRoleIdentified.
    DigitalIdentity_Create:
      required:
        - credential
      type: object
      properties:
        creationDate:
          type: string
          description: Date and time of the Digital Identity creation (timestamp)
          format: date-time
        lastUpdate:
          type: string
          description: Date and time of the Digital Identity last update (timestamp)
          format: date-time
        nickname:
          type: string
          description: Nickname associated to this digital identity (like Juanito17 or the QuebecMoose etc...).
        attachment:
          type: array
          description: List of attachment associated with this digital identity. Could be use to link a cute cat or moose picture to a digital identity for example.
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        contactMedium:
          type: array
          description: List of contact medium associated with the digital identity.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        credential:
          minItems: 1
          type: array
          description: A list of credential/authentification method that are used for this digital identity.
          items:
            $ref: '#/components/schemas/Credential'
        individualIdentified:
          $ref: '#/components/schemas/PartyRef'
        partyRoleIdentified:
          type: array
          description: Related Parties who are identified by this digital identity.
          items:
            $ref: '#/components/schemas/RelatedParty'
        relatedParty:
          type: array
          description: Parties who have an interest in this digital identity (like the organization in charge of providing identity). This is NOT the party identified by this digital identity.
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceIdentified:
          $ref: '#/components/schemas/ResourceRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        DigitalIdentity is a class that allow to describe a digital identity for an individual or a resource or a specific party role. One of these three MUST be provided. If an individual is provided, this identity will be for all her/his partyRole. To avoid confusion it is recommended in this case to not provide partyRoleIdentified.
        Skipped properties: id,href,status,digitalIdentityDate
    DigitalIdentity_Update:
      type: object
      properties:
        creationDate:
          type: string
          description: Date and time of the Digital Identity creation (timestamp)
          format: date-time
        lastUpdate:
          type: string
          description: Date and time of the Digital Identity last update (timestamp)
          format: date-time
        nickname:
          type: string
          description: Nickname associated to this digital identity (like Juanito17 or the QuebecMoose etc...).
        status:
          type: string
          description: Used to indicate the current lifecycle status of this digital identity (unknown, active, suspended, archived).
        attachment:
          type: array
          description: List of attachment associated with this digital identity. Could be use to link a cute cat or moose picture to a digital identity for example.
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
        contactMedium:
          type: array
          description: List of contact medium associated with the digital identity.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        credential:
          type: array
          description: A list of credential/authentification method that are used for this digital identity.
          items:
            $ref: '#/components/schemas/Credential'
        individualIdentified:
          $ref: '#/components/schemas/PartyRef'
        partyRoleIdentified:
          type: array
          description: Related Parties who are identified by this digital identity.
          items:
            $ref: '#/components/schemas/RelatedParty'
        relatedParty:
          type: array
          description: Parties who have an interest in this digital identity (like the organization in charge of providing identity). This is NOT the party identified by this digital identity.
          items:
            $ref: '#/components/schemas/RelatedParty'
        resourceIdentified:
          $ref: '#/components/schemas/ResourceRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        DigitalIdentity is a class that allow to describe a digital identity for an individual or a resource or a specific party role. One of these three MUST be provided. If an individual is provided, this identity will be for all her/his partyRole. To avoid confusion it is recommended in this case to not provide partyRoleIdentified.
        Skipped properties: id,href
    DigitalIdentityContactMedium:
      required:
        - '@type'
        - id
      type: object
      properties:
        id:
          type: string
          description: Identifier for this contact medium.
        contactType:
          type: string
          description: Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used.
        preferred:
          type: boolean
          description: If true, indicates that is the preferred contact medium
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Indicates the contact medium that could be used to contact the party.
    EmailMedium:
      type: object
      properties:
        id:
          type: string
          description: Identifier for this contact medium.
        contactType:
          type: string
          description: Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used.
        emailAddress:
          type: string
          description: Full email address in standard format
        preferred:
          type: boolean
          description: If true, indicates that is the preferred contact medium
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Describes an email that could be used to contact a party (an individual or an organization)
    Entity:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base entity schema for use in TMForum Open-APIs
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Base Extensible schema for use in TMForum Open-APIs
    LoginPasswordCredential:
      type: object
      properties:
        id:
          type: string
          description: an identifier for a credential/authentification method for this digital identity
        login:
          type: string
          description: credential login
        password:
          type: string
          description: credential password - must be in write only
        state:
          type: string
          description: Used to indicate the current lifecycle state of this credential (like active, inactive, expired).
        trustLevel:
          type: string
          description: A level of assurance associated with this credential - this could be used to limit/allow specific permission based on this trust level.
        contactMedium:
          type: array
          description: List of contact medium associated with this credential/authentification method.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A Credential based on a login and a password.
    NetworkCredential:
      type: object
      properties:
        id:
          type: string
          description: an identifier for a credential/authentification method for this digital identity
        password:
          type: string
          description: credential password to use resource based credential - must be in write only
        state:
          type: string
          description: Used to indicate the current lifecycle state of this credential (like active, inactive, expired).
        trustLevel:
          type: string
          description: A level of assurance associated with this credential - this could be used to limit/allow specific permission based on this trust level.
        contactMedium:
          type: array
          description: List of contact medium associated with this credential/authentification method.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        resource:
          $ref: '#/components/schemas/ResourceRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A Credential based on a login and a password.
    PartyRef:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    PhoneMedium:
      type: object
      properties:
        id:
          type: string
          description: Identifier for this contact medium.
        contactType:
          type: string
          description: Type of the contact medium to qualifiy it like pro email / personal email. This is not used to define the contact medium used.
        phoneNumber:
          type: string
          description: The phone number of the contact
        preferred:
          type: boolean
          description: If true, indicates that is the preferred contact medium
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: Describes a phone number that could be used to contact a party (an individual or an organization)
    Quantity:
      type: object
      properties:
        amount:
          type: number
          description: Numeric value in a given unit
          format: float
          default: 1
        units:
          type: string
          description: Unit
      description: An amount in a given unit
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
    ResourceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
    TokenCredential:
      type: object
      properties:
        id:
          type: string
          description: an identifier for a credential/authentification method for this digital identity
        login:
          type: string
          description: credential login
        state:
          type: string
          description: Used to indicate the current lifecycle state of this credential (like active, inactive, expired).
        tokenCredential:
          type: string
          description: Token credential identifier
        trustLevel:
          type: string
          description: A level of assurance associated with this credential - this could be used to limit/allow specific permission based on this trust level.
        contactMedium:
          type: array
          description: List of contact medium associated with this credential/authentification method.
          items:
            $ref: '#/components/schemas/DigitalIdentityContactMedium'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A Credential based on a token.
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    DigitalIdentityCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/DigitalIdentityCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    DigitalIdentityCreateEventPayload:
      type: object
      properties:
        digitalIdentity:
          $ref: '#/components/schemas/DigitalIdentity'
      description: The event data structure
    DigitalIdentityStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/DigitalIdentityStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    DigitalIdentityStateChangeEventPayload:
      type: object
      properties:
        digitalIdentity:
          $ref: '#/components/schemas/DigitalIdentity'
      description: The event data structure
    DigitalIdentityDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/DigitalIdentityDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    DigitalIdentityDeleteEventPayload:
      type: object
      properties:
        digitalIdentity:
          $ref: '#/components/schemas/DigitalIdentity'
      description: The event data structure
    DigitalIdentityAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/DigitalIdentityAttributeValueChangeEventPayload'
      description: The notification data structure
    DigitalIdentityAttributeValueChangeEventPayload:
      type: object
      properties:
        digitalIdentity:
          $ref: '#/components/schemas/DigitalIdentity'
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'
