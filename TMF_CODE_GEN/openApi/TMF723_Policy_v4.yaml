openapi: 3.0.1
info:
  title: Policy
  description: |-
    ## TMF API Reference: TMF723 - Policy API

    ### Version 4.0. - April 2022 

     Policy  API goal is to provide the ability to manage Policy rule and its components: policyEvent, policyCondition and policyAction.

     API Operations provided for these resources are POST, PATCH, GET and DELETE.

     Event definition are also provided for these 4 resources.
  version: 4.0.0
servers:
  - url: https://serverRoot/tmf-api/policy/v4/
tags:
  - name: policyRule
  - name: policyEvent
  - name: policyCondition
  - name: policyAction
  - name: notification listeners (client side)
  - name: events subscription
paths:
  /policyRule:
    get:
      tags:
        - policyRule
      summary: List or find PolicyRule objects
      description: This operation list or find PolicyRule entities
      operationId: listPolicyRule
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyRule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - policyRule
      summary: Creates a PolicyRule
      description: This operation creates a PolicyRule entity.
      operationId: createPolicyRule
      requestBody:
        description: The PolicyRule to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyRule
  /policyRule/{id}:
    get:
      tags:
        - policyRule
      summary: Retrieves a PolicyRule by ID
      description: This operation retrieves a PolicyRule entity. Attribute selection is enabled for all first level attributes.
      operationId: retrievePolicyRule
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyRule
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - policyRule
      summary: Deletes a PolicyRule
      description: This operation deletes a PolicyRule entity.
      operationId: deletePolicyRule
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyRule
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - policyRule
      summary: Updates partially a PolicyRule
      description: This operation updates partially a PolicyRule entity.
      operationId: patchPolicyRule
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyRule
          required: true
          schema:
            type: string
      requestBody:
        description: The PolicyRule to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyRule
  /policyEvent:
    get:
      tags:
        - policyEvent
      summary: List or find PolicyEvent objects
      description: This operation list or find PolicyEvent entities
      operationId: listPolicyEvent
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyEvent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - policyEvent
      summary: Creates a PolicyEvent
      description: This operation creates a PolicyEvent entity.
      operationId: createPolicyEvent
      requestBody:
        description: The PolicyEvent to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyEvent_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEvent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyEvent
  /policyEvent/{id}:
    get:
      tags:
        - policyEvent
      summary: Retrieves a PolicyEvent by ID
      description: This operation retrieves a PolicyEvent entity. Attribute selection is enabled for all first level attributes.
      operationId: retrievePolicyEvent
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyEvent
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEvent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - policyEvent
      summary: Deletes a PolicyEvent
      description: This operation deletes a PolicyEvent entity.
      operationId: deletePolicyEvent
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyEvent
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - policyEvent
      summary: Updates partially a PolicyEvent
      description: This operation updates partially a PolicyEvent entity.
      operationId: patchPolicyEvent
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyEvent
          required: true
          schema:
            type: string
      requestBody:
        description: The PolicyEvent to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyEvent_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEvent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyEvent
  /policyCondition:
    get:
      tags:
        - policyCondition
      summary: List or find PolicyCondition objects
      description: This operation list or find PolicyCondition entities
      operationId: listPolicyCondition
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - policyCondition
      summary: Creates a PolicyCondition
      description: This operation creates a PolicyCondition entity.
      operationId: createPolicyCondition
      requestBody:
        description: The PolicyCondition to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCondition_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyCondition
  /policyCondition/{id}:
    get:
      tags:
        - policyCondition
      summary: Retrieves a PolicyCondition by ID
      description: This operation retrieves a PolicyCondition entity. Attribute selection is enabled for all first level attributes.
      operationId: retrievePolicyCondition
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyCondition
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - policyCondition
      summary: Deletes a PolicyCondition
      description: This operation deletes a PolicyCondition entity.
      operationId: deletePolicyCondition
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyCondition
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - policyCondition
      summary: Updates partially a PolicyCondition
      description: This operation updates partially a PolicyCondition entity.
      operationId: patchPolicyCondition
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyCondition
          required: true
          schema:
            type: string
      requestBody:
        description: The PolicyCondition to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyCondition_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCondition'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyCondition
  /policyAction:
    get:
      tags:
        - policyAction
      summary: List or find PolicyAction objects
      description: This operation list or find PolicyAction entities
      operationId: listPolicyAction
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyAction'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - policyAction
      summary: Creates a PolicyAction
      description: This operation creates a PolicyAction entity.
      operationId: createPolicyAction
      requestBody:
        description: The PolicyAction to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyAction_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAction'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyAction
  /policyAction/{id}:
    get:
      tags:
        - policyAction
      summary: Retrieves a PolicyAction by ID
      description: This operation retrieves a PolicyAction entity. Attribute selection is enabled for all first level attributes.
      operationId: retrievePolicyAction
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyAction
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAction'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - policyAction
      summary: Deletes a PolicyAction
      description: This operation deletes a PolicyAction entity.
      operationId: deletePolicyAction
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyAction
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - policyAction
      summary: Updates partially a PolicyAction
      description: This operation updates partially a PolicyAction entity.
      operationId: patchPolicyAction
      parameters:
        - name: id
          in: path
          description: Identifier of the PolicyAction
          required: true
          schema:
            type: string
      requestBody:
        description: The PolicyAction to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyAction_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAction'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: policyAction
  /hub:
    post:
      tags:
        - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        '201':
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/policyRuleCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyRuleCreateEvent
      description: Example of a client listener for receiving the notification PolicyRuleCreateEvent
      operationId: listenToPolicyRuleCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRuleCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyRuleInformationRequiredEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyRuleInformationRequiredEvent
      description: Example of a client listener for receiving the notification PolicyRuleInformationRequiredEvent
      operationId: listenToPolicyRuleInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRuleInformationRequiredEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyRuleStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyRuleStateChangeEvent
      description: Example of a client listener for receiving the notification PolicyRuleStateChangeEvent
      operationId: listenToPolicyRuleStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRuleStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyRuleDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyRuleDeleteEvent
      description: Example of a client listener for receiving the notification PolicyRuleDeleteEvent
      operationId: listenToPolicyRuleDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRuleDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyRuleAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyRuleAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification PolicyRuleAttributeValueChangeEvent
      operationId: listenToPolicyRuleAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRuleAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyEventCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyEventCreateEvent
      description: Example of a client listener for receiving the notification PolicyEventCreateEvent
      operationId: listenToPolicyEventCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyEventCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyEventInformationRequiredEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyEventInformationRequiredEvent
      description: Example of a client listener for receiving the notification PolicyEventInformationRequiredEvent
      operationId: listenToPolicyEventInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyEventInformationRequiredEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyEventDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyEventDeleteEvent
      description: Example of a client listener for receiving the notification PolicyEventDeleteEvent
      operationId: listenToPolicyEventDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyEventDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyConditionCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyConditionCreateEvent
      description: Example of a client listener for receiving the notification PolicyConditionCreateEvent
      operationId: listenToPolicyConditionCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyConditionCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyConditionInformationRequiredEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyConditionInformationRequiredEvent
      description: Example of a client listener for receiving the notification PolicyConditionInformationRequiredEvent
      operationId: listenToPolicyConditionInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyConditionInformationRequiredEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyConditionDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyConditionDeleteEvent
      description: Example of a client listener for receiving the notification PolicyConditionDeleteEvent
      operationId: listenToPolicyConditionDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyConditionDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyActionCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyActionCreateEvent
      description: Example of a client listener for receiving the notification PolicyActionCreateEvent
      operationId: listenToPolicyActionCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyActionCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyActionInformationRequiredEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyActionInformationRequiredEvent
      description: Example of a client listener for receiving the notification PolicyActionInformationRequiredEvent
      operationId: listenToPolicyActionInformationRequiredEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyActionInformationRequiredEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/policyActionDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity PolicyActionDeleteEvent
      description: Example of a client listener for receiving the notification PolicyActionDeleteEvent
      operationId: listenToPolicyActionDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyActionDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    Note:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            author:
              type: string
              description: Hyperlink reference
            date:
              type: string
              format: date-time
      description: A policy rule definition.
    Alarm:
      type: object
      properties:
        state:
          type: string
        'alarmType':
          type: string
        'perceivedSeverity':
          type: string
        'probableCause':
          type: string
        'alarmedObject':
          type: object
          properties:
            id:
              type: string
            href:
              type: string
    BaseEntity:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
      description: Base entity schema containing common attributes for all entities
    PolicyRule:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            href:
              type: string
              description: Hyperlink reference
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy rule
            executionStrategy:
              type: string
              description: 'executionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyRule - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            isConjustiveNormalForm:
              type: boolean
              description: 'This is a Boolean attribute that, if TRUE, defines the condition clause of this rule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If the value of this attribute is FALSE, then the condition clause will be represented in Disjunctive Normal Form (e.g., an OR of ANDs).'
            name:
              type: string
              description: Name of the policy rule
            sequencedAction:
              type: integer
              description: 'The sequencedAction attribute is an enumerated integer that defines how the ordering of the PolicyActions associated with this PolicyRule is to be interpreted. Values include: 1 Mandatory, 2 recommended, 3 best effort.'
            sequencedValue:
              type: integer
              description: Policy value sequence value when rules have to be executed in a specific order
            state:
              type: string
              description: State of the policy rule - could be active/inactive
            version:
              type: string
              description: Policy rule version
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyAction:
              type: array
              items:
                $ref: '#/components/schemas/PolicyActionRef'
            policyCondition:
              $ref: '#/components/schemas/PolicyConditionRef'
            policyDomain:
              type: array
              items:
                $ref: '#/components/schemas/PolicyDomainRef'
            policyEvent:
              $ref: '#/components/schemas/PolicyEventRef'
            relatedParty:
              type: array
              description: A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedParty'
      description: A policy rule definition.
    PolicyRule_Create:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            description:
              type: string
              description: Description of the policy rule
            executionStrategy:
              type: string
              description: 'executionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyRule - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            isConjustiveNormalForm:
              type: boolean
              description: 'This is a Boolean attribute that, if TRUE, defines the condition clause of this rule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If the value of this attribute is FALSE, then the condition clause will be represented in Disjunctive Normal Form (e.g., an OR of ANDs).'
            name:
              type: string
              description: Name of the policy rule
            sequencedAction:
              type: integer
              description: 'The sequencedAction attribute is an enumerated integer that defines how the ordering of the PolicyActions associated with this PolicyRule is to be interpreted. Values include: 1 Mandatory, 2 recommended, 3 best effort.'
            sequencedValue:
              type: integer
              description: Policy value sequence value when rules have to be executed in a specific order
            state:
              type: string
              description: State of the policy rule - could be active/inactive
            version:
              type: string
              description: Policy rule version
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyAction:
              type: array
              items:
                $ref: '#/components/schemas/PolicyActionRef'
            policyCondition:
              $ref: '#/components/schemas/PolicyConditionRef'
            policyDomain:
              type: array
              items:
                $ref: '#/components/schemas/PolicyDomainRef'
            policyEvent:
              $ref: '#/components/schemas/PolicyEventRef'
            relatedParty:
              type: array
              description: A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedParty'
      description: |-
        A policy rule definition.
        Skipped properties: id, href, creationDate
    PolicyRule_Update:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy rule
            executionStrategy:
              type: string
              description: 'executionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyRule - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            isConjustiveNormalForm:
              type: boolean
              description: 'This is a Boolean attribute that, if TRUE, defines the condition clause of this rule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If the value of this attribute is FALSE, then the condition clause will be represented in Disjunctive Normal Form (e.g., an OR of ANDs).'
            name:
              type: string
              description: Name of the policy rule
            sequencedAction:
              type: integer
              description: 'The sequencedAction attribute is an enumerated integer that defines how the ordering of the PolicyActions associated with this PolicyRule is to be interpreted. Values include: 1 Mandatory, 2 recommended, 3 best effort.'
            sequencedValue:
              type: integer
              description: Policy value sequence value when rules have to be executed in a specific order
            state:
              type: string
              description: State of the policy rule - could be active/inactive
            version:
              type: string
              description: Policy rule version
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyAction:
              type: array
              items:
                $ref: '#/components/schemas/PolicyActionRef'
            policyCondition:
              $ref: '#/components/schemas/PolicyConditionRef'
            policyDomain:
              type: array
              items:
                $ref: '#/components/schemas/PolicyDomainRef'
            policyEvent:
              $ref: '#/components/schemas/PolicyEventRef'
            relatedParty:
              type: array
              description: A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedParty'
      description: |-
        A policy rule definition.
        Skipped properties: id, href
    PolicyEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            href:
              type: string
              description: Hyperlink reference
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy event
            name:
              type: string
              description: Name of the policy event
            query:
              type: string
              description: Query is used to filter event like for example filtering on specific state for stateChange event.
            event:
              type: array
              items:
                $ref: '#/components/schemas/EventRef'
      description: An event triggering the policy rule execution
    PolicyEvent_Create:
      required:
        - event
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy event
            name:
              type: string
              description: Name of the policy event
            query:
              type: string
              description: Query is used to filter event like for example filtering on specific state for stateChange event.
            event:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/EventRef'
      description: |-
        An event triggering the policy rule execution
        Skipped properties: id, href
    PolicyEvent_Update:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy event
            name:
              type: string
              description: Name of the policy event
            query:
              type: string
              description: Query is used to filter event like for example filtering on specific state for stateChange event.
            event:
              type: array
              items:
                $ref: '#/components/schemas/EventRef'
      description: |-
        An event triggering the policy rule execution
        Skipped properties: id, href
    PolicyCondition:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            href:
              type: string
              description: Hyperlink reference
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy condition
            isConjustiveNormalForm:
              type: boolean
              description: 'This is a Boolean attribute that, if TRUE, defines the condition clause of this rule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If the value of this attribute is FALSE, then the condition clause will be represented in Disjunctive Normal Form (e.g., an OR of ANDs).'
            name:
              type: string
              description: Name of the policy condition
            policyConditionStrategy:
              type: string
              description: 'executionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyCondition - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            version:
              type: string
              description: Policy condition version
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyCondition:
              type: array
              items:
                $ref: '#/components/schemas/PolicyCondition'
            policyConditionStatement:
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionStatement'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      description: A policy condition definition.
    PolicyCondition_Create:
      required:
        - policyConditionStatement
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy condition
            isConjustiveNormalForm:
              type: boolean
              description: 'This is a Boolean attribute that, if TRUE, defines the condition clause of this rule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If the value of this attribute is FALSE, then the condition clause will be represented in Disjunctive Normal Form (e.g., an OR of ANDs).'
            name:
              type: string
              description: Name of the policy condition
            policyConditionStrategy:
              type: string
              description: 'executionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyCondition - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            version:
              type: string
              description: Policy condition version
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyCondition:
              type: array
              items:
                $ref: '#/components/schemas/PolicyCondition'
            policyConditionStatement:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionStatement'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      description: |-
        A policy condition definition.
        Skipped properties: id, href
    PolicyCondition_Update:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy condition
            isConjustiveNormalForm:
              type: boolean
              description: 'This is a Boolean attribute that, if TRUE, defines the condition clause of this rule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If the value of this attribute is FALSE, then the condition clause will be represented in Disjunctive Normal Form (e.g., an OR of ANDs).'
            name:
              type: string
              description: Name of the policy condition
            policyConditionStrategy:
              type: string
              description: 'executionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyCondition - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            version:
              type: string
              description: Policy condition version
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyCondition:
              type: array
              items:
                $ref: '#/components/schemas/PolicyCondition'
            policyConditionStatement:
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionStatement'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      description: |-
        A policy condition definition.
        Skipped properties: id, href
    PolicyAction:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            href:
              type: string
              description: Hyperlink reference
            actionSequence:
              type: integer
              description: When several actions have to be performed, the sequence is used to prioritize them
            actionStrategy:
              type: string
              description: 'actionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyAction - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy action
            name:
              type: string
              description: Name of the policy action
            version:
              type: string
              description: Policy action version
            actionCondition:
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionRef'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyAction:
              type: array
              items:
                $ref: '#/components/schemas/PolicyAction'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      description: A policy action definition.
    PolicyAction_Create:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            actionSequence:
              type: integer
              description: When several actions have to be performed, the sequence is used to prioritize them
            actionStrategy:
              type: string
              description: 'actionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyAction - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy action
            name:
              type: string
              description: Name of the policy action
            version:
              type: string
              description: Policy action version
            actionCondition:
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionRef'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyAction:
              type: array
              items:
                $ref: '#/components/schemas/PolicyAction'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      description: |-
        A policy action definition.
        Skipped properties: id, href
    PolicyAction_Update:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            actionSequence:
              type: integer
              description: When several actions have to be performed, the sequence is used to prioritize them
            actionStrategy:
              type: string
              description: 'actionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyAction - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy action
            name:
              type: string
              description: Name of the policy action
            version:
              type: string
              description: Policy action version
            actionCondition:
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionRef'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyAction:
              type: array
              items:
                $ref: '#/components/schemas/PolicyAction'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      description: |-
        A policy action definition.
        Skipped properties: id, href
    PolicyActionAlarm:
      type: object
      allOf:
        - $ref: '#/components/schemas/PolicyAction'
        - type: object
          properties:
            alarm:
              $ref: '#/components/schemas/Alarm'
      description: A PolicyAction that handles an alarm
    PolicyActionEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            href:
              type: string
              description: Hyperlink reference
            actionSequence:
              type: integer
              description: When several actions have to be performed, the sequence is used to prioritize them
            actionStrategy:
              type: string
              description: 'actionStrategy attribute defines the strategy to be used when executing the sequenced actions aggregated by this PolicyAction - example 1: Do until success, 2: do all, 3: Do until failure, 4: do all without failure or do nothing'
            creationDate:
              type: string
              format: date-time
            description:
              type: string
              description: Description of the policy action
            name:
              type: string
              description: Name of the policy action
            version:
              type: string
              description: Policy action version
            actionCondition:
              type: array
              items:
                $ref: '#/components/schemas/PolicyConditionRef'
            event:
              $ref: '#/components/schemas/Event'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            policyAction:
              type: array
              items:
                $ref: '#/components/schemas/PolicyAction'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      description: A PolicyAction associated with an event
    PolicyActionInteger:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            value:
              type: integer
              description: Value of the Policy action
      description: A Policy Action which value is an integer
    PolicyActionObject:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            value:
              type: object
              properties: {}
              description: Value of the Policy action
      description: A Policy Action which value is an object
    PolicyActionOperation:
      type: object
      allOf:
        - $ref: '#/components/schemas/PolicyAction'
        - type: object
          properties:
            fields:
              type: string
              description: Field to be considered for the operation
            filter:
              type: string
              description: Filter to access the right field in case of array
            operation:
              type: string
              description: Operation to be performed like add, remove, replace
            path:
              type: string
              description: Path to the field to be added/updated
            actionValue:
              $ref: '#/components/schemas/PolicyActionValue'
      description: A PolicyAction that performs an operation
    PolicyActionString:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            value:
              type: string
              description: Value of the Policy action
      description: A Policy Action which value is a string
    PolicyActionValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties: {}
      description: A Policy action value - use specialization per datatype
    PolicyConditionInteger:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            value:
              type: integer
              description: Value of the PolicyCondition
      description: A Policy Condition which value is an Integer
    PolicyConditionObject:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            value:
              type: object
              properties: {}
              description: Value of the PolicyCondition
      description: A Policy Condition which value is an object
    PolicyConditionString:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            value:
              type: string
              description: Value of the PolicyCondition
      description: A Policy Condition which value is a string
    PolicyConditionValue:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties: {}
      description: A Policy Condition value - use specialization per datatype
    PolicyConditionVariable:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseEntity'
        - type: object
          properties:
            fields:
              type: string
              description: Field to be considered for the variable
            filter:
              type: string
              description: Filter to access the right field in case of array
            path:
              type: string
              description: Path to the variable
      description: A Policy Condition variable
    # Các schema không thay đổi (giữ nguyên từ file gốc)
    PolicyActionRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A policy action reference.
    PolicyConditionRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A policy condition reference.
    PolicyDomainRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A policy domain reference.
    PolicyEventRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A policy event reference.
    PolicyConditionStatement:
      required:
        - opType
      type: object
      properties:
        description:
          type: string
          description: Description of the policy condition statement
        name:
          type: string
          description: Name of the policy condition statement
        opType:
          type: string
          description: Operand to be used between the variable and the value like =, >, =>, <, <=, <>, etc...
        PolicyConditionValue:
          type: array
          items:
            $ref: '#/components/schemas/PolicyConditionValue'
        PolicyConditionVariable:
          $ref: '#/components/schemas/PolicyConditionVariable'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: A policy condition statement definition.
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity.
    ThresholdRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    PolicyRuleCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyRuleCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyRuleCreateEventPayload:
      type: object
      properties:
        policyRule:
          $ref: '#/components/schemas/PolicyRule'
      description: The event data structure
    PolicyRuleInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/PolicyRuleInformationRequiredEventPayload'
      description: The notification data structure
    PolicyRuleInformationRequiredEventPayload:
      type: object
      properties:
        policyRule:
          $ref: '#/components/schemas/PolicyRule'
      description: The event data structure
    PolicyRuleStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyRuleStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyRuleStateChangeEventPayload:
      type: object
      properties:
        policyRule:
          $ref: '#/components/schemas/PolicyRule'
      description: The event data structure
    PolicyRuleDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyRuleDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyRuleDeleteEventPayload:
      type: object
      properties:
        policyRule:
          $ref: '#/components/schemas/PolicyRule'
      description: The event data structure
    PolicyRuleAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/PolicyRuleAttributeValueChangeEventPayload'
      description: The notification data structure
    PolicyRuleAttributeValueChangeEventPayload:
      type: object
      properties:
        policyRule:
          $ref: '#/components/schemas/PolicyRule'
      description: The event data structure
    PolicyEventCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyEventCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyEventCreateEventPayload:
      type: object
      properties:
        policyEvent:
          $ref: '#/components/schemas/PolicyEvent'
      description: The event data structure
    PolicyEventInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/PolicyEventInformationRequiredEventPayload'
      description: The notification data structure
    PolicyEventInformationRequiredEventPayload:
      type: object
      properties:
        policyEvent:
          $ref: '#/components/schemas/PolicyEvent'
      description: The event data structure
    PolicyEventDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyEventDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyEventDeleteEventPayload:
      type: object
      properties:
        policyEvent:
          $ref: '#/components/schemas/PolicyEvent'
      description: The event data structure
    PolicyConditionCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyConditionCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyConditionCreateEventPayload:
      type: object
      properties:
        policyCondition:
          $ref: '#/components/schemas/PolicyCondition'
      description: The event data structure
    PolicyConditionInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/PolicyConditionInformationRequiredEventPayload'
      description: The notification data structure
    PolicyConditionInformationRequiredEventPayload:
      type: object
      properties:
        policyCondition:
          $ref: '#/components/schemas/PolicyCondition'
      description: The event data structure
    PolicyConditionDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyConditionDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyConditionDeleteEventPayload:
      type: object
      properties:
        policyCondition:
          $ref: '#/components/schemas/PolicyCondition'
      description: The event data structure
    PolicyActionCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyActionCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyActionCreateEventPayload:
      type: object
      properties:
        policyAction:
          $ref: '#/components/schemas/PolicyAction'
      description: The event data structure
    PolicyActionInformationRequiredEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/PolicyActionInformationRequiredEventPayload'
      description: The notification data structure
    PolicyActionInformationRequiredEventPayload:
      type: object
      properties:
        policyAction:
          $ref: '#/components/schemas/PolicyAction'
      description: The event data structure
    PolicyActionDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/PolicyActionDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explanatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occurred.
          format: date-time
      description: The notification data structure
    PolicyActionDeleteEventPayload:
      type: object
      properties:
        policyAction:
          $ref: '#/components/schemas/PolicyAction'
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'
