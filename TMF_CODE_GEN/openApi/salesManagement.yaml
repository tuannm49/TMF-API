openapi: 3.0.1
info:
  title: Sales
  description: >-
    This API provides interfaces for Sales Lead, Sales Opportunity, Sales Quote and the other
    management capabilities to support the sales activities to build relationship with the prospect
    customer who could be a person or organization that has an interest in the goods and/or services
    and possibly become the actual customers with one or more Subscriptions.
  version: 5.0.0
servers:
  - url: 'https:/serverRoot'
tags:
  - name: salesLead
    description: Operations for SalesLead Resource
  - name: salesOpportunity
    description: Operations for SalesOpportunity Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /salesLead:
    get:
      tags:
        - salesLead
      summary: List or find SalesLead objects
      description: >-
        This operation retrieves a SalesLead entity. Attribute selection enabled for all first level
        attributes.
      operationId: listSalesLead
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200SalesLeadArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - salesLead
      summary: Creates a SalesLead
      description: This operation creates a SalesLead entity.
      operationId: createSalesLead
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/SalesLead_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201SalesLead'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/salesLead/{id}':
    get:
      tags:
        - salesLead
      summary: Retrieves a SalesLead by ID
      description: List or find SalesLead objects
      operationId: retrieveSalesLead
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/200SalesLead_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - salesLead
      summary: Updates partially a SalesLead
      description: This operation updates partially a SalesLead entity.
      operationId: patchSalesLead
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Id'
      requestBody:
        $ref: '#/components/requestBodies/SalesLead_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200SalesLead_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - salesLead
      summary: Deletes a SalesLead
      description: This operation deletes a SalesLead entity.
      operationId: deleteSalesLead
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /listener/salesLeadCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesLeadCreateEvent
      description: Example of a client listener for receiving the notification SalesLeadCreateEvent
      operationId: salesLeadCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesLeadCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/salesLeadAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesLeadCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        SalesLeadAttributeValueChangeEvent
      operationId: salesLeadAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesLeadAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/salesLeadStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesLeadCreateEvent
      description: Example of a client listener for receiving the notification SalesLeadStateChangeEvent
      operationId: salesLeadStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesLeadStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/salesLeadDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesLeadCreateEvent
      description: Example of a client listener for receiving the notification SalesLeadDeleteEvent
      operationId: salesLeadDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesLeadDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /salesOpportunity:
    get:
      tags:
        - salesOpportunity
      summary: List or find SalesOpportunity objects
      description: >-
        This operation retrieves a SalesOpportunity entity. Attribute selection enabled for all
        first level attributes.
      operationId: listSalesOpportunity
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200SalesOpportunityArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - salesOpportunity
      summary: Creates a SalesOpportunity
      description: This operation creates a SalesOpportunity entity.
      operationId: createSalesOpportunity
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/SalesOpportunity_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201SalesOpportunity'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/salesOpportunity/{id}':
    get:
      tags:
        - salesOpportunity
      summary: Retrieves a SalesOpportunity by ID
      description: List or find SalesOpportunity objects
      operationId: retrieveSalesOpportunity
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/200SalesOpportunity_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - salesOpportunity
      summary: Updates partially a SalesOpportunity
      description: This operation updates partially a SalesOpportunity entity.
      operationId: patchSalesOpportunity
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Id'
      requestBody:
        $ref: '#/components/requestBodies/SalesOpportunity_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200SalesOpportunity_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - salesOpportunity
      summary: Deletes a SalesOpportunity
      description: This operation deletes a SalesOpportunity entity.
      operationId: deleteSalesOpportunity
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /listener/salesOpportunityCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesOpportunityCreateEvent
      description: Example of a client listener for receiving the notification SalesOpportunityCreateEvent
      operationId: salesOpportunityCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesOpportunityCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/salesOpportunityAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesOpportunityCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        SalesOpportunityAttributeValueChangeEvent
      operationId: salesOpportunityAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesOpportunityAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/salesOpportunityStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesOpportunityCreateEvent
      description: Example of a client listener for receiving the notification SalesOpportunityStateChangeEvent
      operationId: salesOpportunityStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesOpportunityStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/salesOpportunityDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity SalesOpportunityCreateEvent
      description: Example of a client listener for receiving the notification SalesOpportunityDeleteEvent
      operationId: salesOpportunityDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/SalesOpportunityDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
      required:
        - id
        - href
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    AgreementItemRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef'
    AgreementItemRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_FVO'
    AgreementItemRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Agreement item that has been executed previously.
          properties:
            agreementName:
              type: string
              description: Name of the related entity.
            agreementHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            agreementId:
              type: string
              description: Unique identifier of a related entity.
            agreementItemId:
              type: string
              description: Id of an item of a Agreement
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementItemRef: '#/components/schemas/AgreementItemRef_MVO'
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_FVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BillingAccountRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef'
    BillingAccountRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef_FVO'
    BillingAccountRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
        - type: object
          description: >-
            BillingAccount reference. A BillingAccount is a detailed description of a bill
            structure.
          properties:
            ratingType:
              type: string
              description: >-
                Indicates whether the account follows a specific payment option such as prepaid or
                postpaid
      discriminator:
        propertyName: '@type'
        mapping:
          BillingAccountRef: '#/components/schemas/BillingAccountRef_MVO'
    CategoryRef:
      type: object
      description: Reference to a category in the catalog.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef'
    CategoryRef_FVO:
      type: object
      description: Reference to a category in the catalog.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef_FVO'
    CategoryRef_MVO:
      type: object
      description: Reference to a category in the catalog.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          CategoryRef: '#/components/schemas/CategoryRef_MVO'
    ChannelRef:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef'
    ChannelRef_FVO:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef_FVO'
    ChannelRef_MVO:
      type: object
      description: >-
        The channel to which the resource reference to. e.g. channel for selling product offerings,
        channel for opening a trouble ticket etc..
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ChannelRef: '#/components/schemas/ChannelRef_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
            name:
              type: string
              description: Name of the characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
            name:
              type: string
              description: Name of the characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
            name:
              type: string
              description: Name of the characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            contactMediumIdentifier:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            contactMediumIdentifier:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            contactMediumIdentifier:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
    Duration:
      type: object
      description: A time interval in a given unit of time
      properties:
        amount:
          type: integer
          description: 'Time interval (number of seconds, minutes, hours, etc.)'
        units:
          type: string
          description: 'Unit of time (seconds, minutes, hours, etc.)'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      type: object
      description: Entity reference schema to be use for all entityRef class.
      properties:
        href:
          type: string
          description: Hyperlink reference
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    GeographicAddressValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            geographicSubAddress:
              $ref: '#/components/schemas/GeographicSubAddressValue'
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddress: '#/components/schemas/GeographicAddressValue'
    GeographicAddressValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            geographicSubAddress:
              $ref: '#/components/schemas/GeographicSubAddressValue_FVO'
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddress: '#/components/schemas/GeographicAddressValue_FVO'
    GeographicAddressValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Structured textual way of describing how to find a Property in an urban area (country
            properties are often defined differently).

            Note : Address corresponds to SID UrbanPropertyAddress
          properties:
            locality:
              type: string
              description: >-
                An area of defined or undefined boundaries within a local authority or other
                legislatively defined area, usually rural or semi rural in nature. [ANZLIC-STREET],
                or a suburb, a bounded locality within a city, town or shire principally of urban
                character [ANZLICSTREET]
            postcode:
              type: string
              description: >-
                descriptor for a postal delivery area, used to speed and simplify the delivery of
                mail (also know as zipcode)
            stateOrProvince:
              type: string
              description: the State or Province that the address is in
            streetNr:
              type: string
              description: >-
                Number identifying a specific property on a public street. It may be combined with
                streetNrLast for ranged addresses
            streetNrLast:
              type: string
              description: Last number in a range of street numbers allocated to a property
            streetNrLastSuffix:
              type: string
              description: Last street number suffix for a ranged address
            streetNrSuffix:
              type: string
              description: the first street number suffix
            streetSuffix:
              type: string
              description: A modifier denoting a relative direction
            streetType:
              type: string
              description: >-
                alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade,
                place, tarn, way, wharf
            geographicSubAddress:
              $ref: '#/components/schemas/GeographicSubAddressValue_MVO'
            city:
              type: string
              description: City that the address is in
            country:
              type: string
              description: Country that the address is in
            streetName:
              type: string
              description: Name of the street or other street type
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddress: '#/components/schemas/GeographicAddressValue_MVO'
    GeographicLocationValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocationValue'
    GeographicLocationValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocationValue_FVO'
    GeographicLocationValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of
            Point (addresses and locations), MultiPoint, LineString (streets, highways and
            boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the
            @type attribute to specify which of these is being specified by the geometry attribute.
          properties:
            bbox:
              type: array
              description: >-
                A bounding box array that contains the geometry. The axes order follows the axes
                order of the geometry
              items:
                type: number
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocationValue_MVO'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a SubUnit. It is used for describing subunit within a subAddress e.g.
            BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
          properties:
            subUnitNumber:
              type: string
              description: >-
                The discriminator used for the subunit, often just a simple number but may also be a
                range.
            subUnitType:
              type: string
              description: 'The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF, RACK'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
    GeographicSubAddressValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddressValue'
    GeographicSubAddressValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddressValue_FVO'
    GeographicSubAddressValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Representation of a GeographicSubAddress 

            It is used for addressing within a property in an urban area (country properties are
            often defined differently). It may refer to a building, a building cluster, or a floor
            of a multistory building.
          properties:
            buildingName:
              type: string
              description: allows for buildings that have well-known names
            levelNumber:
              type: string
              description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
            levelType:
              type: string
              description: describes level types within a building
            name:
              type: string
              description: Name of the subAddress to identify it with a meaningful identification
            privateStreetName:
              type: string
              description: >-
                private streets internal to a property (e.g. a university) may have internal names
                that are not recorded by the land title office.
            privateStreetNumber:
              type: string
              description: private streets numbers internal to a private street
            subUnit:
              type: array
              description: >-
                Representation of a SubUnit. It is used for describing subunit within a subAddress
                e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
              items:
                $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
            subAddressType:
              type: string
              description: 'Type of subAddress : it can be a subunit or a private street'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddressValue_MVO'
    ItemActionType:
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
      description: action to be performed on the entity managed by the item
    MarketSegmentRef:
      type: object
      description: >-
        provides references to the corresponding market segment as target of product offerings. A
        market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Entity'
      discriminator:
        propertyName: '@type'
        mapping:
          MarketSegmentRef: '#/components/schemas/MarketSegmentRef'
    MarketSegmentRef_FVO:
      type: object
      description: >-
        provides references to the corresponding market segment as target of product offerings. A
        market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Entity_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          MarketSegmentRef: '#/components/schemas/MarketSegmentRef_FVO'
    MarketSegmentRef_MVO:
      type: object
      description: >-
        provides references to the corresponding market segment as target of product offerings. A
        market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Entity_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          MarketSegmentRef: '#/components/schemas/MarketSegmentRef_MVO'
    MarketingCampaignRef:
      type: object
      description: >-
        MarketingCampaign reference. Marketing campaign represents the carrier-initiated marketing
        activity which aims at the better recognition about its brand and offerings by the market
      allOf:
        - $ref: '#/components/schemas/EntityRef'
    MarketingCampaignRef_FVO:
      type: object
      description: >-
        MarketingCampaign reference. Marketing campaign represents the carrier-initiated marketing
        activity which aims at the better recognition about its brand and offerings by the market
      allOf:
        - $ref: '#/components/schemas/EntityRef'
    MarketingCampaignRef_MVO:
      type: object
      description: >-
        MarketingCampaign reference. Marketing campaign represents the carrier-initiated marketing
        activity which aims at the better recognition about its brand and offerings by the market
      allOf:
        - $ref: '#/components/schemas/EntityRef'
    Money:
      type: object
      description: A base / value business entity used to represent money
      properties:
        unit:
          type: string
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
        value:
          type: number
          format: float
          description: >-
            A signed floating point number, the meaning of the sign is according to the context of
            the API that uses this Data type
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example:
                - afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example:
                - Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example:
                - '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example:
                - This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note'
    Note_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example:
                - afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example:
                - Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example:
                - '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example:
                - This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_FVO'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Extra information about a given entity
          properties:
            id:
              type: string
              description: Identifier of the note within its containing entity
              example:
                - afa9-3d90aaa8da0f
            author:
              type: string
              description: Author of the note
              example:
                - Mr. N. Bene
            date:
              type: string
              format: date-time
              description: Date of the note
              example:
                - '2020-11-20T08:00:00Z'
            text:
              type: string
              description: Text of the note
              example:
                - This is important
      discriminator:
        propertyName: '@type'
        mapping:
          Note: '#/components/schemas/Note_MVO'
    PlaceRef:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
    PlaceRef_FVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
    PlaceRef_MVO:
      type: object
      description: Place reference.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
    Price:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price'
    PriceAlteration:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price'
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration'
    PriceAlteration_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_FVO'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price_FVO'
          required:
            - priceType
            - price
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_FVO'
    PriceAlteration_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Is an amount, usually of money, that modifies the price charged for an order item.'
          properties:
            applicationDuration:
              type: integer
              description: >-
                Duration during which the alteration applies on the order item price (for instance 2
                months free of charge for the recurring charge)
            description:
              type: string
              description: >-
                A narrative that explains in detail the semantics of this order item price
                alteration
            name:
              type: string
              description: Name of the order item price alteration
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            priceType:
              type: string
              description: 'A category that describes the price such as recurring, one time and usage.'
            priority:
              type: integer
              description: >-
                Priority level for applying this alteration among all the defined alterations on the
                order item price
            recurringChargePeriod:
              type: string
              description: 'Could be month, week...'
            unitOfMeasure:
              type: string
              description: 'Could be minutes, GB...'
            price:
              $ref: '#/components/schemas/Price_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PriceAlteration: '#/components/schemas/PriceAlteration_MVO'
    Price_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price_FVO'
    Price_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Provides all amounts (tax included, duty free, tax rate), used currency and percentage
            to apply for Price and Price Alteration.
          properties:
            dutyFreeAmount:
              $ref: '#/components/schemas/Money'
            percentage:
              type: number
              format: float
              description: Percentage to apply for ProdOfferPriceAlteration
            taxIncludedAmount:
              $ref: '#/components/schemas/Money'
            taxRate:
              type: number
              format: float
              description: Tax rate
      discriminator:
        propertyName: '@type'
        mapping:
          Price: '#/components/schemas/Price_MVO'
    ProductOfferingPriceRef:
      type: object
      description: >-
        ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed
        when a ProductOffering is bought, rented, or leased
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef'
    ProductOfferingPriceRef_FVO:
      type: object
      description: >-
        ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed
        when a ProductOffering is bought, rented, or leased
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef_FVO'
    ProductOfferingPriceRef_MVO:
      type: object
      description: >-
        ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed
        when a ProductOffering is bought, rented, or leased
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingPriceRef: '#/components/schemas/ProductOfferingPriceRef_MVO'
    ProductOfferingRef:
      type: object
      description: >-
        ProductOffering reference. A product offering represents entities that are orderable from
        the provider of the catalog, this resource includes pricing information.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef'
    ProductOfferingRef_FVO:
      type: object
      description: >-
        ProductOffering reference. A product offering represents entities that are orderable from
        the provider of the catalog, this resource includes pricing information.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef_FVO'
    ProductOfferingRef_MVO:
      type: object
      description: >-
        ProductOffering reference. A product offering represents entities that are orderable from
        the provider of the catalog, this resource includes pricing information.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductOfferingRef: '#/components/schemas/ProductOfferingRef_MVO'
    ProductPrice:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price'
            priceAlteration:
              type: array
              items:
                $ref: '#/components/schemas/PriceAlteration'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice'
    ProductPrice_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_FVO'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price_FVO'
            priceAlteration:
              type: array
              items:
                $ref: '#/components/schemas/PriceAlteration_FVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_FVO'
    ProductPrice_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Description of price and discount awarded
          properties:
            description:
              type: string
              description: Description of the Product price
            name:
              type: string
              description: Name of the Product price
            productOfferingPrice:
              $ref: '#/components/schemas/ProductOfferingPriceRef_MVO'
            recurringChargePeriod:
              type: string
              description: 'Used for recurring charge to indicate period (month, week, etc..).'
            unitOfMeasure:
              type: string
              description: 'Unit of Measure if price depending on it (Gb, SMS volume, etc..)'
            price:
              $ref: '#/components/schemas/Price_MVO'
            priceAlteration:
              type: array
              items:
                $ref: '#/components/schemas/PriceAlteration_MVO'
            priceType:
              type: string
              description: indicate if the price is for recurrent or no-recurrent charge
      discriminator:
        propertyName: '@type'
        mapping:
          ProductPrice: '#/components/schemas/ProductPrice_MVO'
    ProductRef:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef'
    ProductRefOrValue:
      type: object
      description: >-
        A product to be created defined by value or existing defined by reference. The polymorphic
        attributes @type, @schemaLocation & @referredType are related to the product entity and not
        the RelatedProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/ProductRef'
        - $ref: '#/components/schemas/ProductValue'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef'
          Product: '#/components/schemas/ProductValue'
    ProductRefOrValue_FVO:
      type: object
      description: >-
        A product to be created defined by value or existing defined by reference. The polymorphic
        attributes @type, @schemaLocation & @referredType are related to the product entity and not
        the RelatedProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/ProductRef_FVO'
        - $ref: '#/components/schemas/ProductValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_FVO'
          Product: '#/components/schemas/ProductValue_FVO'
    ProductRefOrValue_MVO:
      type: object
      description: >-
        A product to be created defined by value or existing defined by reference. The polymorphic
        attributes @type, @schemaLocation & @referredType are related to the product entity and not
        the RelatedProductRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/ProductRef_MVO'
        - $ref: '#/components/schemas/ProductValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_MVO'
          Product: '#/components/schemas/ProductValue_MVO'
    ProductRef_FVO:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_FVO'
    ProductRef_MVO:
      type: object
      description: A Product reference
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRef: '#/components/schemas/ProductRef_MVO'
    ProductRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship'
    ProductRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_FVO'
    ProductRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: Used to describe relationship between product.
          properties:
            id:
              type: string
              description: Id of the related product
            relationshipType:
              type: string
              description: 'Relationship type as relies on, bundles, etc...'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductRelationship: '#/components/schemas/ProductRelationship_MVO'
    ProductSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef'
    ProductSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_FVO'
    ProductSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
        - type: object
          description: >-
            ProductSpecification reference. A product Specification represents entities that are
            orderable from the provider of the catalog.
          properties:
            version:
              type: string
              description: Version of the product specification
            targetProductSchema:
              $ref: '#/components/schemas/TargetProductSchema'
      discriminator:
        propertyName: '@type'
        mapping:
          ProductSpecificationRef: '#/components/schemas/ProductSpecificationRef_MVO'
    ProductStatusType:
      enum:
        - created
        - pendingActive
        - cancelled
        - active
        - pendingTerminate
        - terminated
        - suspended
        - 'aborted '
      type: string
      description: Possible values for the status of the product
    ProductTerm:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm'
    ProductTerm_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm_FVO'
    ProductTerm_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Description of a productTerm linked to this product. This represent a commitment with a
            duration
          properties:
            description:
              type: string
              description: Description of the productTerm
            duration:
              $ref: '#/components/schemas/Duration'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Name of the productTerm
              example: 12months commitment
      discriminator:
        propertyName: '@type'
        mapping:
          ProductTerm: '#/components/schemas/ProductTerm_MVO'
    ProductValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            agreementItem:
              type: array
              items:
                $ref: '#/components/schemas/AgreementItemRef'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef'
            productOrderItem:
              type: array
              items:
                $ref: '#/components/schemas/RelatedOrderItem'
            product:
              type: array
              items:
                $ref: '#/components/schemas/ProductRefOrValue'
            productPrice:
              type: array
              items:
                $ref: '#/components/schemas/ProductPrice'
            productRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ProductRelationship'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef'
            productTerm:
              type: array
              items:
                $ref: '#/components/schemas/ProductTerm'
            realizingResource:
              type: array
              items:
                $ref: '#/components/schemas/ResourceRef'
            realizingService:
              type: array
              items:
                $ref: '#/components/schemas/ServiceRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty'
            place:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/ProductValue'
    ProductValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            agreementItem:
              type: array
              items:
                $ref: '#/components/schemas/AgreementItemRef_FVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef_FVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_FVO'
            productOrderItem:
              type: array
              items:
                $ref: '#/components/schemas/RelatedOrderItem_FVO'
            product:
              type: array
              items:
                $ref: '#/components/schemas/ProductRefOrValue_FVO'
            productPrice:
              type: array
              items:
                $ref: '#/components/schemas/ProductPrice_FVO'
            productRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ProductRelationship_FVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_FVO'
            productTerm:
              type: array
              items:
                $ref: '#/components/schemas/ProductTerm_FVO'
            realizingResource:
              type: array
              items:
                $ref: '#/components/schemas/ResourceRef_FVO'
            realizingService:
              type: array
              items:
                $ref: '#/components/schemas/ServiceRef_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty_FVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/ProductValue_FVO'
    ProductValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A product offering procured by a customer or other interested party playing a party
            role. A product is realized as one or more service(s) and / or resource(s).
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            agreementItem:
              type: array
              items:
                $ref: '#/components/schemas/AgreementItemRef_MVO'
            billingAccount:
              $ref: '#/components/schemas/BillingAccountRef_MVO'
            creationDate:
              type: string
              format: date-time
              description: Date and time when the product was created
            description:
              type: string
              description: >-
                Is the description of the product. It could be copied from the description of the
                Product Offering.
            isBundle:
              type: boolean
              description: >-
                If true, the product is a ProductBundle which is an instantiation of a
                BundledProductOffering. If false, the product is a ProductComponent which is an
                instantiation of a SimpleProductOffering.
            isCustomerVisible:
              type: boolean
              description: 'If true, the product is visible by the customer.'
            name:
              type: string
              description: Name of the product. It could be the same as the name of the product offering
            orderDate:
              type: string
              format: date-time
              description: Is the date when the product was ordered
            productCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            productOffering:
              $ref: '#/components/schemas/ProductOfferingRef_MVO'
            productOrderItem:
              type: array
              items:
                $ref: '#/components/schemas/RelatedOrderItem_MVO'
            product:
              type: array
              items:
                $ref: '#/components/schemas/ProductRefOrValue_MVO'
            productPrice:
              type: array
              items:
                $ref: '#/components/schemas/ProductPrice_MVO'
            productRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ProductRelationship_MVO'
            productSerialNumber:
              type: string
              description: >-
                Is the serial number for the product. This is typically applicable to tangible
                products e.g. Broadband Router.
            productSpecification:
              $ref: '#/components/schemas/ProductSpecificationRef_MVO'
            productTerm:
              type: array
              items:
                $ref: '#/components/schemas/ProductTerm_MVO'
            realizingResource:
              type: array
              items:
                $ref: '#/components/schemas/ResourceRef_MVO'
            realizingService:
              type: array
              items:
                $ref: '#/components/schemas/ServiceRef_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedParty_MVO'
            place:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
            startDate:
              type: string
              format: date-time
              description: Is the date from which the product starts
            status:
              $ref: '#/components/schemas/ProductStatusType'
            terminationDate:
              type: string
              format: date-time
              description: Is the date when the product was terminated
      discriminator:
        propertyName: '@type'
        mapping:
          Product: '#/components/schemas/ProductValue_MVO'
    Reference:
      type: object
      description: Reference schema .
      properties:
        id:
          type: string
          description: Identifier of the referred entity.
        name:
          type: string
          description: Name of the referred entity.
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      required:
        - id
    Reference_FVO:
      type: object
      description: Reference schema .
      properties:
        id:
          type: string
          description: Identifier of the referred entity.
        name:
          type: string
          description: Name of the referred entity.
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      required:
        - id
    Reference_MVO:
      type: object
      description: Reference schema .
      properties:
        id:
          type: string
          description: Identifier of the referred entity.
        name:
          type: string
          description: Name of the referred entity.
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    RelatedOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a prduct order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem'
    RelatedOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a prduct order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_FVO'
    RelatedOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: It's a Order item that has been executed previously.
          properties:
            orderItemAction:
              $ref: '#/components/schemas/ItemActionType'
            orderHref:
              type: string
              description: Reference of the related entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
            role:
              type: string
              description: Role played by the  Order
            orderId:
              type: string
              description: Unique identifier of a related  Order.
            orderItemId:
              type: string
              description: Id of an item of a prduct order
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedOrderItem: '#/components/schemas/RelatedOrderItem_MVO'
    RelatedParty:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
        - type: object
          description: Related Entity reference. A related party defines party linked to a specific entity.
          properties:
            role:
              type: string
              description: Role played by the related party
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedParty: '#/components/schemas/RelatedParty'
          RelatedPartyWithContactInfo: '#/components/schemas/RelatedPartyWithContactInfo'
    RelatedPartyWithContactInfo:
      allOf:
        - $ref: '#/components/schemas/RelatedParty'
        - type: object
          description: Related party specialization that includes contact information
          properties:
            contact:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
    RelatedPartyWithContactInfo_FVO:
      allOf:
        - $ref: '#/components/schemas/RelatedParty_FVO'
        - type: object
          description: Related party specialization that includes contact information
          properties:
            contact:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
    RelatedPartyWithContactInfo_MVO:
      allOf:
        - $ref: '#/components/schemas/RelatedParty_MVO'
        - type: object
          description: Related party specialization that includes contact information
          properties:
            contact:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
    RelatedParty_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
        - type: object
          description: Related Entity reference. A related party defines party linked to a specific entity.
          properties:
            role:
              type: string
              description: Role played by the related party
          required:
            - '@referredType'
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedParty: '#/components/schemas/RelatedParty_FVO'
          RelatedPartyWithContactInfo: '#/components/schemas/RelatedPartyWithContactInfo_FVO'
    RelatedParty_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
        - type: object
          description: Related Entity reference. A related party defines party linked to a specific entity.
          properties:
            role:
              type: string
              description: Role played by the related party
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedParty: '#/components/schemas/RelatedParty_MVO'
          RelatedPartyWithContactInfo: '#/components/schemas/RelatedPartyWithContactInfo_MVO'
    RelatedPlaceRefOrValue:
      type: object
      description: >-
        Related Entity reference. A related place defines a place described by reference or by value
        linked to a specific entity. The polymorphic attributes @type, @schemaLocation &
        @referredType are related to the place entity and not the RelatedPlaceRefOrValue class
        itself
      oneOf:
        - $ref: '#/components/schemas/PlaceRef'
        - $ref: '#/components/schemas/GeographicAddressValue'
        - $ref: '#/components/schemas/GeographicLocationValue'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
          PlaceRef: '#/components/schemas/PlaceRef'
          GeographicAddress: '#/components/schemas/GeographicAddressValue'
          GeographicLocation: '#/components/schemas/GeographicLocationValue'
    RelatedPlaceRefOrValue_FVO:
      type: object
      description: >-
        Related Entity reference. A related place defines a place described by reference or by value
        linked to a specific entity. The polymorphic attributes @type, @schemaLocation &
        @referredType are related to the place entity and not the RelatedPlaceRefOrValue class
        itself
      oneOf:
        - $ref: '#/components/schemas/PlaceRef_FVO'
        - $ref: '#/components/schemas/GeographicAddressValue_FVO'
        - $ref: '#/components/schemas/GeographicLocationValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddressValue_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocationValue_FVO'
    RelatedPlaceRefOrValue_MVO:
      type: object
      description: >-
        Related Entity reference. A related place defines a place described by reference or by value
        linked to a specific entity. The polymorphic attributes @type, @schemaLocation &
        @referredType are related to the place entity and not the RelatedPlaceRefOrValue class
        itself
      oneOf:
        - $ref: '#/components/schemas/PlaceRef_MVO'
        - $ref: '#/components/schemas/GeographicAddressValue_MVO'
        - $ref: '#/components/schemas/GeographicLocationValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddressValue_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocationValue_MVO'
    ResourceRef:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
    ResourceRef_FVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_FVO'
    ResourceRef_MVO:
      type: object
      description: 'Resource reference, for when Resource is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
    SalesLead:
      type: object
      description: >-
        A Sales Lead is the identification of a person or organization that has an interest in the
        goods and/or services provided in the prospect of them becoming Customers with one or more
        Subscriptions.
      properties:
        description:
          type: string
          description: Unique description of the salesLead
        status:
          $ref: '#/components/schemas/SalesLeadStateType'
        statusChangeDate:
          type: string
          format: date-time
          description: Date and time of the last update
        referredDate:
          type: string
          format: date-time
          description: 'Date when the prospect information was received (for example, from a trade show).'
        statusChangeReason:
          type: string
          description: Reason why the status has changed
        salesLeadType:
          type: string
          description: Indicates the nature of the salesLead
        rating:
          type: string
          description: >-
            Identifies the potential of a salesLead for becoming a sale. Usual ratings for qualified
            leads are: hot, warm, cold.
        priority:
          $ref: '#/components/schemas/SalesLeadPriorityType'
        estimatedRevenue:
          $ref: '#/components/schemas/Money'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        marketingCampaign:
          $ref: '#/components/schemas/MarketingCampaignRef'
        marketSegment:
          $ref: '#/components/schemas/MarketSegmentRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        prospectContact:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        category:
          $ref: '#/components/schemas/CategoryRef'
        salesOpportunity:
          $ref: '#/components/schemas/SalesOpportunityRef'
        product:
          $ref: '#/components/schemas/ProductRef'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        name:
          type: string
          description: Name of the salesLead
        creationDate:
          type: string
          format: date-time
          description: Date and time of the salesLead creation
    SalesLeadAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesLeadAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesLeadAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesLeadAttributeValueChangeEvent: '#/components/schemas/SalesLeadAttributeValueChangeEvent'
    SalesLeadAttributeValueChangeEventPayload:
      type: object
      description: SalesLeadAttributeValueChangeEventPayload generic structure
      properties:
        salesLead:
          $ref: '#/components/schemas/SalesLead'
    SalesLeadCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesLeadCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesLeadCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesLeadCreateEvent: '#/components/schemas/SalesLeadCreateEvent'
    SalesLeadCreateEventPayload:
      type: object
      description: SalesLeadCreateEventPayload generic structure
      properties:
        salesLead:
          $ref: '#/components/schemas/SalesLead'
    SalesLeadDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesLeadDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesLeadDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesLeadDeleteEvent: '#/components/schemas/SalesLeadDeleteEvent'
    SalesLeadDeleteEventPayload:
      type: object
      description: SalesLeadDeleteEventPayload generic structure
      properties:
        salesLead:
          $ref: '#/components/schemas/SalesLead'
    SalesLeadPriorityType:
      enum:
        - low
        - medium
        - high
      type: string
      description: Urgency of working this salesLead
    SalesLeadRef:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            provides references to the corresponding market segment as target of product offerings.
            A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.
          properties:
            id:
              type: string
              description: Unique identifier of the market segment
            href:
              type: string
              description: Reference of the market segment
            name:
              type: string
              description: Name of the market segment
            '@referredType':
              type: string
              description: (Class) type of the referred market segment
      discriminator:
        propertyName: '@type'
        mapping:
          SalesLeadRef: '#/components/schemas/SalesLeadRef'
    SalesLeadRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            provides references to the corresponding market segment as target of product offerings.
            A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.
          properties:
            id:
              type: string
              description: Unique identifier of the market segment
            href:
              type: string
              description: Reference of the market segment
            name:
              type: string
              description: Name of the market segment
            '@referredType':
              type: string
              description: (Class) type of the referred market segment
      discriminator:
        propertyName: '@type'
        mapping:
          SalesLeadRef: '#/components/schemas/SalesLeadRef_MVO'
    SalesLeadStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesLeadStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesLeadStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesLeadStateChangeEvent: '#/components/schemas/SalesLeadStateChangeEvent'
    SalesLeadStateChangeEventPayload:
      type: object
      description: SalesLeadStateChangeEventPayload generic structure
      properties:
        salesLead:
          $ref: '#/components/schemas/SalesLead'
    SalesLeadStateType:
      enum:
        - accepted
        - acknowledged
        - cancelled
        - inProgress
        - pending
        - rejected
      type: string
      description: Valid values for the lifecycle state of a salesLead resource
    SalesLead_FVO:
      type: object
      description: >-
        A Sales Lead is the identification of a person or organization that has an interest in the
        goods and/or services provided in the prospect of them becoming Customers with one or more
        Subscriptions.
      properties:
        description:
          type: string
          description: Unique description of the salesLead
        referredDate:
          type: string
          format: date-time
          description: 'Date when the prospect information was received (for example, from a trade show).'
        statusChangeReason:
          type: string
          description: Reason why the status has changed
        salesLeadType:
          type: string
          description: Indicates the nature of the salesLead
        rating:
          type: string
          description: >-
            Identifies the potential of a salesLead for becoming a sale. Usual ratings for qualified
            leads are: hot, warm, cold.
        priority:
          $ref: '#/components/schemas/SalesLeadPriorityType'
        estimatedRevenue:
          $ref: '#/components/schemas/Money'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        marketingCampaign:
          $ref: '#/components/schemas/MarketingCampaignRef_FVO'
        marketSegment:
          $ref: '#/components/schemas/MarketSegmentRef_FVO'
        channel:
          $ref: '#/components/schemas/ChannelRef_FVO'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef_FVO'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty_FVO'
        prospectContact:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium_FVO'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef_FVO'
        category:
          $ref: '#/components/schemas/CategoryRef_FVO'
        salesOpportunity:
          $ref: '#/components/schemas/SalesOpportunityRef_FVO'
        product:
          $ref: '#/components/schemas/ProductRef_FVO'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note_FVO'
        name:
          type: string
          description: Name of the salesLead
      required:
        - name
    SalesLead_MVO:
      type: object
      description: >-
        A Sales Lead is the identification of a person or organization that has an interest in the
        goods and/or services provided in the prospect of them becoming Customers with one or more
        Subscriptions.
      properties:
        description:
          type: string
          description: Unique description of the salesLead
        status:
          $ref: '#/components/schemas/SalesLeadStateType'
        statusChangeDate:
          type: string
          format: date-time
          description: Date and time of the last update
        referredDate:
          type: string
          format: date-time
          description: 'Date when the prospect information was received (for example, from a trade show).'
        statusChangeReason:
          type: string
          description: Reason why the status has changed
        salesLeadType:
          type: string
          description: Indicates the nature of the salesLead
        rating:
          type: string
          description: >-
            Identifies the potential of a salesLead for becoming a sale. Usual ratings for qualified
            leads are: hot, warm, cold.
        priority:
          $ref: '#/components/schemas/SalesLeadPriorityType'
        estimatedRevenue:
          $ref: '#/components/schemas/Money'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        marketingCampaign:
          $ref: '#/components/schemas/MarketingCampaignRef_MVO'
        marketSegment:
          $ref: '#/components/schemas/MarketSegmentRef_MVO'
        channel:
          $ref: '#/components/schemas/ChannelRef_MVO'
        productOffering:
          $ref: '#/components/schemas/ProductOfferingRef_MVO'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty_MVO'
        prospectContact:
          type: array
          items:
            $ref: '#/components/schemas/ContactMedium_MVO'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef_MVO'
        category:
          $ref: '#/components/schemas/CategoryRef_MVO'
        salesOpportunity:
          $ref: '#/components/schemas/SalesOpportunityRef_MVO'
        product:
          $ref: '#/components/schemas/ProductRef_MVO'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note_MVO'
        name:
          type: string
          description: Name of the salesLead
    SalesOpportunity:
      type: object
      description: >-
        An opportunity represents a confirmed interest on a product you plan to sale. Once the
        Opportunity is created, some salesTasks can be done by sales team members, in order to turn
        the opportunity into a sale
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date and time of the SalesOpportunity creation
        description:
          type: string
          description: Unique description of the SalesOpportunity
        rating:
          type: string
          description: >-
            Identifies the potential of a SalesOpportunity for becoming a sale. Usual ratings for
            qualified leads are: hot, warm, cold.
        referredDate:
          type: string
          format: date-time
          description: 'Date when the prospect information was received (for example, from a trade show).'
        status:
          $ref: '#/components/schemas/SalesOpportunityStateType'
        statusChangeDate:
          type: string
          format: date-time
          description: Date and time of the last update
        statusChangeReason:
          type: string
          description: Reason why the status has changed
        salesOpportunityType:
          type: string
          description: Indicates the nature of the SalesOpportunity
        estimatedRevenue:
          $ref: '#/components/schemas/Money'
        priority:
          $ref: '#/components/schemas/SalesOpportunityPriorityType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        category:
          $ref: '#/components/schemas/CategoryRef'
        channel:
          $ref: '#/components/schemas/ChannelRef'
        marketSegment:
          $ref: '#/components/schemas/MarketSegmentRef'
        marketingCampaign:
          $ref: '#/components/schemas/MarketingCampaignRef'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementRef'
        salesOpportunityItem:
          type: array
          items:
            $ref: '#/components/schemas/SalesOpportunityItem'
        name:
          type: string
          description: Name of the SalesOpportunity
    SalesOpportunityAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesOpportunityAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesOpportunityAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesOpportunityAttributeValueChangeEvent: '#/components/schemas/SalesOpportunityAttributeValueChangeEvent'
    SalesOpportunityAttributeValueChangeEventPayload:
      type: object
      description: SalesOpportunityAttributeValueChangeEventPayload generic structure
      properties:
        salesOpportunity:
          $ref: '#/components/schemas/SalesOpportunity'
    SalesOpportunityCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesOpportunityCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesOpportunityCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesOpportunityCreateEvent: '#/components/schemas/SalesOpportunityCreateEvent'
    SalesOpportunityCreateEventPayload:
      type: object
      description: SalesOpportunityCreateEventPayload generic structure
      properties:
        salesOpportunity:
          $ref: '#/components/schemas/SalesOpportunity'
    SalesOpportunityDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesOpportunityDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesOpportunityDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesOpportunityDeleteEvent: '#/components/schemas/SalesOpportunityDeleteEvent'
    SalesOpportunityDeleteEventPayload:
      type: object
      description: SalesOpportunityDeleteEventPayload generic structure
      properties:
        salesOpportunity:
          $ref: '#/components/schemas/SalesOpportunity'
    SalesOpportunityItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An opportunity represents a confirmed interest on a product you plan to sale. Once the
            Opportunity is created, some salesTasks can be done by sales team members, in order to
            turn the opportunity into a sale
          properties:
            id:
              type: string
              description: Identifier (index) of the SalesOpportunityItem
            action:
              type: string
              description: Action to be performed on this sales opportunity item
            rating:
              type: string
              description: >-
                Identifies the potential of a SalesOpportunity for becoming a sale. Usual ratings
                for qualified leads are: hot, warm, cold.
            estimatedRevenue:
              $ref: '#/components/schemas/Money'
            priority:
              $ref: '#/components/schemas/SalesOpportunityPriorityType'
            salesOpportunityItemStatus:
              $ref: '#/components/schemas/SalesOpportunityItemStateType'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            product:
              $ref: '#/components/schemas/ProductRefOrValue'
            salesLead:
              type: array
              items:
                $ref: '#/components/schemas/SalesLeadRef'
            salesTask:
              type: array
              items:
                $ref: '#/components/schemas/SalesTaskRef'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyWithContactInfo'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesOpportunityItem: '#/components/schemas/SalesOpportunityItem'
    SalesOpportunityItemStateType:
      enum:
        - accepted
        - acknowledged
        - cancelled
        - inProgress
        - pending
        - rejected
      type: string
      description: Valid values for the lifecycle state of a salesLead resource
    SalesOpportunityItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An opportunity represents a confirmed interest on a product you plan to sale. Once the
            Opportunity is created, some salesTasks can be done by sales team members, in order to
            turn the opportunity into a sale
          properties:
            id:
              type: string
              description: Identifier (index) of the SalesOpportunityItem
            action:
              type: string
              description: Action to be performed on this sales opportunity item
            rating:
              type: string
              description: >-
                Identifies the potential of a SalesOpportunity for becoming a sale. Usual ratings
                for qualified leads are: hot, warm, cold.
            estimatedRevenue:
              $ref: '#/components/schemas/Money'
            priority:
              $ref: '#/components/schemas/SalesOpportunityPriorityType'
            salesOpportunityItemStatus:
              $ref: '#/components/schemas/SalesOpportunityItemStateType'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_FVO'
            salesLead:
              type: array
              items:
                $ref: '#/components/schemas/SalesLeadRef'
            salesTask:
              type: array
              items:
                $ref: '#/components/schemas/SalesTaskRef'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyWithContactInfo'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesOpportunityItem: '#/components/schemas/SalesOpportunityItem_FVO'
    SalesOpportunityItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An opportunity represents a confirmed interest on a product you plan to sale. Once the
            Opportunity is created, some salesTasks can be done by sales team members, in order to
            turn the opportunity into a sale
          properties:
            id:
              type: string
              description: Identifier (index) of the SalesOpportunityItem
            action:
              type: string
              description: Action to be performed on this sales opportunity item
            rating:
              type: string
              description: >-
                Identifies the potential of a SalesOpportunity for becoming a sale. Usual ratings
                for qualified leads are: hot, warm, cold.
            estimatedRevenue:
              $ref: '#/components/schemas/Money'
            priority:
              $ref: '#/components/schemas/SalesOpportunityPriorityType'
            salesOpportunityItemStatus:
              $ref: '#/components/schemas/SalesOpportunityItemStateType'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            product:
              $ref: '#/components/schemas/ProductRefOrValue_MVO'
            salesLead:
              type: array
              items:
                $ref: '#/components/schemas/SalesLeadRef_MVO'
            salesTask:
              type: array
              items:
                $ref: '#/components/schemas/SalesTaskRef_MVO'
            note:
              type: array
              items:
                $ref: '#/components/schemas/Note_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyWithContactInfo'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesOpportunityItem: '#/components/schemas/SalesOpportunityItem_MVO'
    SalesOpportunityPriorityType:
      enum:
        - low
        - medium
        - high
      type: string
      description: Urgency of working this Sales Opportunity
    SalesOpportunityRef:
      type: object
      description: >-
        Sales Opportunity is an 'opportunity' to generate revenue from a Sales Account or Sales
        Lead. Opportunities are the pending deals that need to be tracked and on which Sales Team
        plans and executes Sales Activities (Events and Tasks).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
    SalesOpportunityRef_FVO:
      type: object
      description: >-
        Sales Opportunity is an 'opportunity' to generate revenue from a Sales Account or Sales
        Lead. Opportunities are the pending deals that need to be tracked and on which Sales Team
        plans and executes Sales Activities (Events and Tasks).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
    SalesOpportunityRef_MVO:
      type: object
      description: >-
        Sales Opportunity is an 'opportunity' to generate revenue from a Sales Account or Sales
        Lead. Opportunities are the pending deals that need to be tracked and on which Sales Team
        plans and executes Sales Activities (Events and Tasks).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
    SalesOpportunityStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: SalesOpportunityStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/SalesOpportunityStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          SalesOpportunityStateChangeEvent: '#/components/schemas/SalesOpportunityStateChangeEvent'
    SalesOpportunityStateChangeEventPayload:
      type: object
      description: SalesOpportunityStateChangeEventPayload generic structure
      properties:
        salesOpportunity:
          $ref: '#/components/schemas/SalesOpportunity'
    SalesOpportunityStateType:
      enum:
        - accepted
        - acknowledged
        - cancelled
        - inProgress
        - pending
        - rejected
      type: string
      description: Valid values for the lifecycle state of a salesLead resource
    SalesOpportunity_FVO:
      type: object
      description: >-
        An opportunity represents a confirmed interest on a product you plan to sale. Once the
        Opportunity is created, some salesTasks can be done by sales team members, in order to turn
        the opportunity into a sale
      properties:
        description:
          type: string
          description: Unique description of the SalesOpportunity
        rating:
          type: string
          description: >-
            Identifies the potential of a SalesOpportunity for becoming a sale. Usual ratings for
            qualified leads are: hot, warm, cold.
        referredDate:
          type: string
          format: date-time
          description: 'Date when the prospect information was received (for example, from a trade show).'
        statusChangeReason:
          type: string
          description: Reason why the status has changed
        salesOpportunityType:
          type: string
          description: Indicates the nature of the SalesOpportunity
        estimatedRevenue:
          $ref: '#/components/schemas/Money'
        priority:
          $ref: '#/components/schemas/SalesOpportunityPriorityType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        category:
          $ref: '#/components/schemas/CategoryRef_FVO'
        channel:
          $ref: '#/components/schemas/ChannelRef_FVO'
        marketSegment:
          $ref: '#/components/schemas/MarketSegmentRef_FVO'
        marketingCampaign:
          $ref: '#/components/schemas/MarketingCampaignRef_FVO'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementRef_FVO'
        salesOpportunityItem:
          type: array
          items:
            $ref: '#/components/schemas/SalesOpportunityItem_FVO'
        name:
          type: string
          description: Name of the SalesOpportunity
      required:
        - name
    SalesOpportunity_MVO:
      type: object
      description: >-
        An opportunity represents a confirmed interest on a product you plan to sale. Once the
        Opportunity is created, some salesTasks can be done by sales team members, in order to turn
        the opportunity into a sale
      properties:
        description:
          type: string
          description: Unique description of the SalesOpportunity
        rating:
          type: string
          description: >-
            Identifies the potential of a SalesOpportunity for becoming a sale. Usual ratings for
            qualified leads are: hot, warm, cold.
        referredDate:
          type: string
          format: date-time
          description: 'Date when the prospect information was received (for example, from a trade show).'
        status:
          $ref: '#/components/schemas/SalesOpportunityStateType'
        statusChangeDate:
          type: string
          format: date-time
          description: Date and time of the last update
        statusChangeReason:
          type: string
          description: Reason why the status has changed
        salesOpportunityType:
          type: string
          description: Indicates the nature of the SalesOpportunity
        estimatedRevenue:
          $ref: '#/components/schemas/Money'
        priority:
          $ref: '#/components/schemas/SalesOpportunityPriorityType'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        category:
          $ref: '#/components/schemas/CategoryRef_MVO'
        channel:
          $ref: '#/components/schemas/ChannelRef_MVO'
        marketSegment:
          $ref: '#/components/schemas/MarketSegmentRef_MVO'
        marketingCampaign:
          $ref: '#/components/schemas/MarketingCampaignRef_MVO'
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note_MVO'
        agreement:
          type: array
          items:
            $ref: '#/components/schemas/AgreementRef_MVO'
        salesOpportunityItem:
          type: array
          items:
            $ref: '#/components/schemas/SalesOpportunityItem_MVO'
        name:
          type: string
          description: Name of the SalesOpportunity
    SalesTaskRef:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            provides references to the corresponding market segment as target of product offerings.
            A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.
          properties:
            id:
              type: string
              description: Unique identifier of the market segment
            href:
              type: string
              description: Reference of the market segment
            name:
              type: string
              description: Name of the market segment
            '@referredType':
              type: string
              description: (Class) type of the referred market segment
      discriminator:
        propertyName: '@type'
        mapping:
          SalesTaskRef: '#/components/schemas/SalesTaskRef'
    SalesTaskRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            provides references to the corresponding market segment as target of product offerings.
            A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth.
          properties:
            id:
              type: string
              description: Unique identifier of the market segment
            href:
              type: string
              description: Reference of the market segment
            name:
              type: string
              description: Name of the market segment
            '@referredType':
              type: string
              description: (Class) type of the referred market segment
      discriminator:
        propertyName: '@type'
        mapping:
          SalesTaskRef: '#/components/schemas/SalesTaskRef_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRef_FVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/Reference_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    TargetProductSchema:
      type: object
      description: >-
        The reference object to the schema and type of target product which is described by product
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target product
        '@schemaLocation':
          type: string
          format: uri
          description: This field provides a link to the schema describing the target product
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Service
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    SalesLead_FVO:
      description: The SalesLead to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLead_FVO'
          examples:
            CreateLead:
              $ref: '#/components/examples/CreateLead_request'
      required: true
    SalesLead_MVO:
      description: The SalesLead to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLead_MVO'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/SalesLead_MVO'
        application/json-patch+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JsonPatchOperations'
        application/json-patch-query+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            updateSalesLead_using_json-patch-query_json:
              $ref: '#/components/examples/updateSalesLead_using_json-patch-query_json_request'
      required: true
    SalesLeadCreateEvent:
      description: SalesLead create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLeadCreateEvent'
      required: true
    SalesLeadAttributeValueChangeEvent:
      description: SalesLead attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLeadAttributeValueChangeEvent'
      required: true
    SalesLeadStateChangeEvent:
      description: SalesLead stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLeadStateChangeEvent'
      required: true
    SalesLeadDeleteEvent:
      description: SalesLead delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLeadDeleteEvent'
      required: true
    SalesOpportunity_FVO:
      description: The SalesOpportunity to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity_FVO'
          examples:
            CreateSalesOpportunity:
              $ref: '#/components/examples/CreateSalesOpportunity_request'
      required: true
    SalesOpportunity_MVO:
      description: The SalesOpportunity to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity_MVO'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity_MVO'
        application/json-patch+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JsonPatchOperations'
        application/json-patch-query+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            updateSalesOpportunity_using_json-patch-query_json:
              $ref: '#/components/examples/updateSalesOpportunity_using_json-patch-query_json_request'
      required: true
    SalesOpportunityCreateEvent:
      description: SalesOpportunity create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunityCreateEvent'
      required: true
    SalesOpportunityAttributeValueChangeEvent:
      description: SalesOpportunity attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunityAttributeValueChangeEvent'
      required: true
    SalesOpportunityStateChangeEvent:
      description: SalesOpportunity stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunityStateChangeEvent'
      required: true
    SalesOpportunityDeleteEvent:
      description: SalesOpportunity delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunityDeleteEvent'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200SalesLeadArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SalesLead'
          examples:
            SalesLead_list_example:
              $ref: '#/components/examples/SalesLead_list_example_response'
    200SalesLead_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLead'
          examples:
            SalesLead_retrieve_example:
              $ref: '#/components/examples/SalesLead_retrieve_example_response'
    200SalesLead_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLead'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/SalesLead'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SalesLead'
              - type: array
                items:
                  $ref: '#/components/schemas/SalesLead'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SalesLead'
              - type: array
                items:
                  $ref: '#/components/schemas/SalesLead'
              - type: string
                nullable: true
          examples:
            updateSalesLead_using_json-patch-query_json:
              $ref: '#/components/examples/updateSalesLead_using_json-patch-query_json_response'
    200SalesLead_Put:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLead'
    201SalesLead:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesLead'
          examples:
            CreateLead:
              $ref: '#/components/examples/CreateLead_response'
    200SalesOpportunityArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SalesOpportunity'
          examples:
            SalesOpportunity_list_example:
              $ref: '#/components/examples/SalesOpportunity_list_example_response'
    200SalesOpportunity_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity'
          examples:
            SalesOpportunity_retrieve_example:
              $ref: '#/components/examples/SalesOpportunity_retrieve_example_response'
    200SalesOpportunity_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SalesOpportunity'
              - type: array
                items:
                  $ref: '#/components/schemas/SalesOpportunity'
              - type: string
                nullable: true
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SalesOpportunity'
              - type: array
                items:
                  $ref: '#/components/schemas/SalesOpportunity'
              - type: string
                nullable: true
          examples:
            updateSalesOpportunity_using_json-patch-query_json:
              $ref: '#/components/examples/updateSalesOpportunity_using_json-patch-query_json_response'
    200SalesOpportunity_Put:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity'
    201SalesOpportunity:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SalesOpportunity'
          examples:
            CreateSalesOpportunity:
              $ref: '#/components/examples/CreateSalesOpportunity_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    SalesLead_list_example_response:
      value:
        - id: '123'
          name: Campaign 17 salesLead 7852
          description: salesLead generated by a clic on a commercial link
          status: inProgress
        - id: '456'
          name: Web site request 123456
          description: salesLead generated by a clic on a commercial link
          status: inProgress
      description: >-
        Here's an example of a request for retrieving a list of sales leads. The given criteria is
        the id of the customer Gustavo Fring with the following selected attributes: id, name,
        description and status.
    SalesLead_retrieve_example_response:
      value:
        id: '123'
        href: 'https://serverRoot/tmf-api/sales/v4/salesLead/123'
        '@type': SalesLead
        creationDate: '2019-01-19T12:27:59.123Z'
        description: salesLead generated by a clic on a commercial link
        name: Campaign 17 salesLead 7852
        priority: medium
        rating: hot
        referredDate: '2019-01-19T12:27:59.123Z'
        status: inProgress
        statusChangeDate: '2019-01-25T15:53:29.961Z'
        statusChangeReason: Lead accepted by marketing team
        type: advertisingLink
        category:
          id: '15'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/category/15'
          name: PersonnalBankAccount
        channel:
          id: '1'
          name: www.orange.fr
        estimatedRevenue:
          unit: EUR
          value: 1200
        marketSegment:
          id: '657'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketSegment/657'
          name: Active youngs market segment
        marketingCampaign:
          id: '21'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketingCampaign/21'
          name: January 2019 campaign for Orange Bank
        note:
          - author: Saul Goodman
            date: '2019-01-22T15:53:29.961Z'
            text: Customer with a very good credit profile
        product:
          id: '7321'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/product/7321'
        productOffering:
          id: '42'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
          name: Gold Credit Card
        prospectContact:
          - preferred: 'false'
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              emailAddress: gustavo.fring@mail.com
          - preferred: 'true'
            mediumType: phone
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              phoneNumber: '+33607080910'
          - preferred: 'false'
            mediumType: postal address
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              street1: Rue de Provence
              postCode: '75001'
              city: Paris
              country: France
        relatedParty:
          - id: '127'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/127'
            name: Walter White
            role: marketing team
            '@referredType': individual
          - id: '475'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/475'
            name: Saul Goodman
            role: sales team
            '@referredType': individual
        salesOpportunity:
          id: '7894325'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/salesOpportunity/7894325'
          name: GoBank account
        validFor:
          startDateTime: '2019-01-19T12:27:59.123Z'
          endDateTime: '2019-02-19T12:27:59.123Z'
      description: Here's a sample of a request for retrieving a sales lead.
    SalesOpportunity_list_example_response:
      value:
        - id: 10c2-41bf
          name: GoBank account
          status: inProgress
        - id: 960a-ab1b
          name: Fiber access for small office
          status: inProgress
        - id: 9611-b01c
          name: Firewall solution
          status: inProgress
        - id: e21c-fc20
          name: Mobile fleet
          status: inProgress
      description: >-
        Here's an example of a request for retrieving a list of sales opportunities. The given
        criteria is the id of the customer and its role.
    SalesOpportunity_retrieve_example_response:
      value:
        id: '7894325'
        href: 'https://serverRoot/tmf-api/sales/v4/salesOpportunity/7894325'
        name: GoBank account
        creationDate: '2022-03-30T12:27:59.123Z'
        rating: hot
        status: inProgress
        estimatedRevenue:
          unit: EUR
          value: 1200
        validFor:
          startDateTime: '2022-03-30T12:27:59.123Z'
          endDateTime: '2022-04-30T12:27:59.123Z'
        salesOpportunityItem:
          - id: '100'
            action: add
            rating: hot
            priority: medium
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            salesLead:
              - id: '123'
                href: 'https://serverRoot/tmf-api/sales/v4/salesLead/123'
                name: Campaign 17 salesLead 7852
            salesTask:
              - id: 7321-0a6f
                href: 'https://serverRoot/tmf-api/sales/v4/salesTask/7321-0a6f'
                name: Prospect called by Saul Goodman
              - id: 6dc1-41ca
                href: 'https://serverRoot/tmf-api/sales/v4/salesTask/6dc1-41ca'
                name: Contract sent to prospect by email
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '42'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
                name: Gold Credit Card
          - id: '200'
            action: add
            rating: hot
            priority: medium
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '42'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
                name: Gold Credit Card
      description: Here's a sample of a request for retrieving a sales opportunity.
    CreateLead_request:
      value:
        name: Campaign 17 salesLead 7852
        description: salesLead generated by a clic on a commercial link
        referredDate: '2019-01-19T12:27:59.123Z'
        type: advertisingLink
        rating: hot
        priority: medium
        estimatedRevenue:
          unit: EUR
          value: 1200
        validFor:
          startDateTime: '2019-01-19T12:27:59.123Z'
          endDateTime: '2019-02-19T12:27:59.123Z'
        marketSegment:
          id: '657'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketSegment/657'
          name: Active youngs market segment
        marketingCampaign:
          id: '21'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketingCampaign/21'
          name: January 2019 campaign for Orange Bank
        channel:
          id: '1'
          name: www.orange.fr
        productOffering:
          id: '42'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
          name: Gold Credit Card
        relatedParty:
          - id: '127'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/127'
            name: Walter White
            role: marketing team
            '@referredType': individual
          - id: '475'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/475'
            name: Saul Goodman
            role: sales team
            '@referredType': individual
        prospectContact:
          - preferred: 'false'
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              emailAddress: gustavo.fring@mail.com
          - preferred: 'true'
            mediumType: phone
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              phoneNumber: '+33607080910'
          - preferred: 'false'
            mediumType: postal address
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              street1: Rue de Provence
              postCode: '75001'
              city: Paris
              country: France
        category:
          id: '15'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/category/15'
          name: PersonnalBankAccount
        salesOpportunity:
          id: '7894325'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/salesOpportunity/7894325'
          name: GoBank account
        product:
          id: '7321'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/product/7321'
        note:
          - author: Saul Goodman
            date: '2019-01-22T15:53:29.961Z'
            text: Customer with a very good credit profile
      description: >-
        POST SalesLead request example - only a subset of salesLead attributes are used in this
        example
    CreateLead_response:
      value:
        id: '123'
        href: 'https://serverRoot/tmf-api/sales/v4/salesLead/123'
        '@type': SalesLead
        name: Campaign 17 salesLead 7852
        description: salesLead generated by a clic on a commercial link
        status: acknowledged
        statusChangeDate: '2019-01-25T15:53:29.961Z'
        creationDate: '2019-01-19T12:27:59.123Z'
        referredDate: '2019-01-19T12:27:59.123Z'
        statusChangeReason: Lead created
        type: advertisingLink
        rating: hot
        priority: medium
        estimatedRevenue:
          unit: EUR
          value: 1200
        validFor:
          startDateTime: '2019-01-19T12:27:59.123Z'
          endDateTime: '2019-02-19T12:27:59.123Z'
        marketSegment:
          id: '657'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketSegment/657'
          name: Active youngs market segment
        marketingCampaign:
          id: '21'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketingCampaign/21'
          name: January 2019 campaign for Orange Bank
        channel:
          id: '1'
          name: www.orange.fr
          role: originChannel
        productOffering:
          id: '42'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
          name: Gold Credit Card
        relatedParty:
          - id: '127'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/127'
            name: Walter White
            role: marketing team
            '@referredType': individual
          - id: '475'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/475'
            name: Saul Goodman
            role: sales team
            '@referredType': individual
        prospectContact:
          - preferred: 'false'
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              emailAddress: gustavo.fring@mail.com
          - preferred: 'true'
            mediumType: phone
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              phoneNumber: '+33607080910'
          - preferred: 'false'
            mediumType: postal address
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              street1: Rue de Provence
              postCode: '75001'
              city: Paris
              country: France
        category:
          id: '15'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/category/15'
          name: PersonnalBankAccount
        salesOpportunity:
          id: '7894325'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/salesOpportunity/7894325'
          name: GoBank account
        product:
          id: '7321'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/product/7321'
        note:
          - author: Saul Goodman
            date: '2019-01-22T15:53:29.961Z'
            text: Customer with a very good credit profile
      description: POST SalesLead response description.
    CreateSalesOpportunity_request:
      value:
        name: GoBank account
        rating: hot
        priority: high
        estimatedRevenue:
          unit: EUR
          value: 1200
        salesOpportunityItem:
          - id: '100'
            action: add
            rating: hot
            priority: high
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            salesLead:
              - id: '123'
                href: 'https://serverRoot/tmf-api/sales/v4/salesLead/123'
                name: Campaign 17 salesLead 7852
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '42'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
                name: Gold Credit Card
          - id: '200'
            action: add
            rating: hot
            priority: high
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '632'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/632'
                name: Credit Card insurance
      description: >-
        POST SalesOpportunity request example - only a subset of quote attributes are used in this
        example
    CreateSalesOpportunity_response:
      value:
        id: '7894325'
        href: 'https://serverRoot/tmf-api/sales/v4/salesOpportunity/7894325'
        name: GoBank account
        creationDate: '2022-03-30T12:27:59.123Z'
        rating: hot
        priority: high
        status: inProgress
        estimatedRevenue:
          unit: EUR
          value: 1200
        validFor:
          startDateTime: '2022-03-30T12:27:59.123Z'
          endDateTime: '2022-04-30T12:27:59.123Z'
        salesOpportunityItem:
          - id: '100'
            action: add
            rating: hot
            salesOpportunityItemStatus: acknowledged
            priority: high
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            salesLead:
              - id: '123'
                href: 'https://serverRoot/tmf-api/sales/v4/salesLead/123'
                name: Campaign 17 salesLead 7852
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '42'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
                name: Gold Credit Card
          - id: '200'
            action: add
            rating: hot
            salesOpportunityItemStatus: acknowledged
            priority: high
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '632'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/632'
                name: Credit Card insurance
      description: POST SalesOpportunity response description.
    updateSalesLead_using_json-patch-query_json_request:
      value:
        status: pending
        statusChangeReason: Lead needs extra information to continue the process
      description: PATCH SalesLead request leveraging json-patch-query+json application example
    updateSalesLead_using_json-patch-query_json_response:
      value:
        id: '123'
        href: 'https://serverRoot/tmf-api/sales/v4/salesLead/123'
        '@type': SalesLead
        name: Campaign 17 salesLead 7852
        description: salesLead generated by a clic on a commercial link
        status: pending
        statusChangeDate: '2019-01-26T14:12:54.349Z'
        creationDate: '2019-01-19T12:27:59.123Z'
        referredDate: '2019-01-19T12:27:59.123Z'
        statusChangeReason: Lead needs extra information to continue the process
        type: advertisingLink
        rating: hot
        priority: medium
        estimatedRevenue:
          unit: EUR
          value: 1200
        validFor:
          startDateTime: '2019-01-19T12:27:59.123Z'
          endDateTime: '2019-02-19T12:27:59.123Z'
        marketSegment:
          id: '657'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketSegment/657'
          name: Active youngs market segment
        marketingCampaign:
          id: '21'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/marketingCampaign/21'
          name: January 2019 campaign for Orange Bank
        channel:
          id: '1'
          name: www.orange.fr
          role: originChannel
        productOffering:
          id: '42'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
          name: Gold Credit Card
        relatedParty:
          - id: '127'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/127'
            name: Walter White
            role: marketing team
            '@referredType': individual
          - id: '475'
            href: 'https://serverRoot/tmf-api/partyManagement/v1/party/475'
            name: Saul Goodman
            role: sales team
            '@referredType': individual
        prospectContact:
          - preferred: 'false'
            mediumType: email
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              emailAddress: gustavo.fring@mail.com
          - preferred: 'true'
            mediumType: phone
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              phoneNumber: '+33607080910'
          - preferred: 'false'
            mediumType: postal address
            validFor:
              startDateTime: '2017-03-15T07:49:25.246Z'
              endDateTime: ''
            characteristic:
              street1: Rue de Provence
              postCode: '75001'
              city: Paris
              country: France
        category:
          id: '15'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/category/15'
          name: PersonnalBankAccount
        salesOpportunity:
          id: '7894325'
          href: 'https://serverRoot/tmf-api/marketingManagement/v4/salesOpportunity/7894325'
          name: GoBank account
        product:
          id: '7321'
          href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/product/7321'
        note:
          - author: Saul Goodman
            date: '2019-01-22T15:53:29.961Z'
            text: Customer with a very good credit profile
      description: SalesLead representation.
    updateSalesOpportunity_using_json-patch-query_json_request:
      value:
        status: pending
        statusChangeReason: SalesOpportunity needs extra information to continue the process
      description: PATCH SalesOpportunity request leveraging json-patch-query+json application example
    updateSalesOpportunity_using_json-patch-query_json_response:
      value:
        id: '7894325'
        href: 'https://serverRoot/tmf-api/sales/v4/salesOpportunity/7894325'
        name: GoBank account
        creationDate: '2022-03-30T12:27:59.123Z'
        rating: hot
        priority: high
        status: pending
        statusChangeReason: SalesOpportunity needs extra information to continue the process
        estimatedRevenue:
          unit: EUR
          value: 1200
        validFor:
          startDateTime: '2022-03-30T12:27:59.123Z'
          endDateTime: '2022-04-30T12:27:59.123Z'
        salesOpportunityItem:
          - id: '100'
            action: add
            rating: hot
            salesOpportunityItemStatus: acknowledged
            priority: high
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            salesLead:
              - id: '123'
                href: 'https://serverRoot/tmf-api/sales/v4/salesLead/123'
                name: Campaign 17 salesLead 7852
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '42'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/42'
                name: Gold Credit Card
          - id: '200'
            action: add
            rating: hot
            salesOpportunityItemStatus: acknowledged
            priority: high
            relatedParty:
              - id: '94587'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/94587'
                name: Gustavo Fring
                role: prospect
                '@referredType': Individual
                contactMedium:
                  - id: '5436546'
                    mediumType: phoneNumber
                    preferred: false
                    characteristic:
                      phoneNumber: '0102030405'
                  - id: '16546546256'
                    mediumType: email
                    preferred: true
                    characteristic:
                      emailAddress: gustavo.fring@mail.com
              - id: '127'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/127'
                name: Walter White
                role: marketing team
                '@referredType': Individual
              - id: '475'
                href: 'https://serverRoot/tmf-api/partyManagement/v1/individual/475'
                name: Saul Goodman
                role: sales team
                '@referredType': Individual
            validFor:
              startDateTime: '2022-03-30T12:27:59.123Z'
              endDateTime: '2022-04-30T12:27:59.123Z'
            product:
              productOffering:
                id: '632'
                href: 'https://serverRoot/tmf-api/productCatalogManagement/v4/productOffering/632'
                name: Credit Card insurance
      description: SalesOpportunity representation.
