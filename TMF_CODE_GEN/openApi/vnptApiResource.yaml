openapi: 3.0.1
info:
  title: VNPT API API Resource
  description: |-
    ## VNPT API Reference : VNPT 003 - API Resource 

    ### Release : 1.0 

    Desciption about API Resource

    ### Resources
    - API Resource

    API Resource API performs the following operations :
    - Retrieve an api resource
    - Retrieve a collection of api resources according to given criteria
    - Create a new api resource
    - Update an existing api resource
    - Delete an existing api resource
  version: 1.0.0
servers:
  - url: https://serverRoot/vnpt-api/api/v1/
tags:
  - name: Api
paths:
  /api:
    get:
      tags:
        - Api
      summary: List or find API Resource objects
      description: This operation list or find API Resource entities
      operationId: listAPIResource
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIResource'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Api
      summary: Creates a API Resource
      description: This operation creates a API Resource entity.
      operationId: createApplication
      requestBody:
        description: The API Resource to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIResource_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResource'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/{id}:
    get:
      tags:
        - Api
      summary: Retrieves a API Resource by ID
      description: This operation retrieves a API Resource entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveAPIResource
      parameters:
        - name: id
          in: path
          description: Identifier of the Application
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResource'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Api
      summary: Updates partially a API Resource
      description: This operation updates partially a API Resource entity.
      operationId: patchAPIResource
      parameters:
        - name: id
          in: path
          description: Identifier of the API Resource
          required: true
          schema:
            type: string
      requestBody:
        description: The API Resource to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIResource_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResource'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Api
      summary: Delete a API Resource
      description: This operation delete a API Resource entity.
      operationId: deleteAPIResource
      parameters:
        - name: id
          in: path
          description: Identifier of the API Resource
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /scope:
    get:
      tags:
        - Scope
      summary: List or find Scope objects
      description: This operation list or find API Resource entities
      operationId: listScope
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Scope
      summary: Creates a Scope
      description: This operation creates a Scope entity.
      operationId: createScope
      requestBody:
        description: The Scope to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /scope/{id}:
    get:
      tags:
        - Scope
      summary: Retrieves a Scope by ID
      description: This operation retrieves a Scope entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveScope
      parameters:
        - name: id
          in: path
          description: Identifier of the Application
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Scope
      summary: Updates partially a Scope
      description: This operation updates partially a Scope entity.
      operationId: patchScope
      parameters:
        - name: id
          in: path
          description: Identifier of the Scope
          required: true
          schema:
            type: string
      requestBody:
        description: The Scope to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Scope
      summary: Delete a Scope
      description: This operation delete a Scope entity.
      operationId: deleteScope
      parameters:
        - name: id
          in: path
          description: Identifier of the Scope
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    APIResource:
      required:
        - name
        - identifier
        - application
      type: object
      properties:
        id:
          example: '128'
          type: string
          description: unique identifier
        href:
          example: 'https://serverRoot/tmf-api/party/v4/apiresource/128'
          type: string
          description: Hyperlink reference
          format: uri
        '@type':
          example: 'APIResource'
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        name:
          example: 'EPC'
          type: string
          description: Name of Resource. Ex (EPC)
        identifier:
          example: 'https://api.epc.com'
          type: string
          description: A URL to access Resource (https://myapp.com/home)
        application:
          $ref: '#/components/schemas/ApplicationRef'
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/ScopeRef'
    APIResource_Create:
      required:
        - name
        - identifier
        - application
      type: object
      properties:
        name:
          type: string
          description: Use a Resource for your organization. This ResourceName should be unique.
        identifier:
          type: string
          description: Full URL in standard format
        application:
          $ref: '#/components/schemas/ApplicationRef'
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
      description: |-
        Resource represents a single zone independen with other.
        Skipped properties: id,href
    APIResource_Update:
      required:
        - name
        - identifier
        - application
      type: object
      properties:
        id:
          example: '128'
          type: string
          description: unique identifier
        href:
          example: 'https://serverRoot/tmf-api/party/v4/resource/128'
          type: string
          description: Hyperlink reference
          format: uri
        '@type':
          example: 'APIResource'
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
        name:
          example: 'EPC'
          type: string
          description: Name of Resource. Ex (EPC)
        identifier:
          example: 'https://api.epc.com'
          type: string
          description: A URL to access Resource (https://myapp.com/home)
        application:
          $ref: '#/components/schemas/ApplicationRef'
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/ScopeRef'
      description: |-
        Individual represents a single zone independen with other.
        Skipped properties: id,href
    ApiResourceRef:
      type: object
      description: >-
        Representation of a ApiResourceRef
      properties:
        id:
          example: '1'
          type: string
          description: Unique Identifier of the Scope
        name:
          example: 'Admin'
          type: string
          description: Name of the scope to identify it with a meaningful identification
        '@type':
          example: 'ScopeRef'
          type: string
          description: The name of the ApiResourceRef structure
    ApplicationRef:
      type: object
      description: >-
        Representation of a ApplicationRef
      properties:
        id:
          example: '1'
          type: string
          description: Unique Identifier of the Scope
        name:
          example: 'Admin'
          type: string
          description: Name of the scope to identify it with a meaningful identification
        '@type':
          example: 'ScopeRef'
          type: string
          description: The name of the ScopeRef structure
    ScopeRef:
      type: object
      description: >-
        Representation of a ScopeRef
      properties:
        id:
          example: '1'
          type: string
          description: Unique Identifier of the Scope
        name:
          example: 'Admin'
          type: string
          description: Name of the scope to identify it with a meaningful identification
        displayName:
          type: string
          description: displayName
        '@type':
          example: 'ScopeRef'
          type: string
          description: The name of the ScopeRef structure
    Scope:
      required:
        - name
        - apiResource
      type: object
      description: >-
        Representation of a Scope
      properties:
        id:
          example: '1'
          type: string
          description: Unique Identifier of the Scope
        name:
          example: 'Admin'
          type: string
          description: Name of the scope to identify it with a meaningful identification
        href:
          example: 'https://serverRoot/tmf-api/party/v4/scope/128'
          type: string
          description: Link to the scope
        displayName:
          type: string
          description: displayName
        description:
          type: string
          description: description
        apiResource:
          $ref: '#/components/schemas/ApiResourceRef'
        '@type':
          example: 'Scope'
          type: string
          description: The name of the scope structure
    Scope_Create:
      required:
        - name
        - apiResource
      type: object
      description: >-
        Representation of a Scope
      properties:
        apiResource:
          $ref: '#/components/schemas/ApiResourceRef'
        name:
          example: 'Admin'
          type: string
          description: Name of the scope to identify it with a meaningful identification
        displayName:
          type: string
          description: displayName
        description:
          type: string
          description: description
        '@type':
          example: 'Scope'
          type: string
          description: The name of the scope structure
    Scope_Update:
      required:
        - name
        - apiResource
      type: object
      description: >-
        Representation of a Scope
      properties:
        name:
          example: 'Admin'
          type: string
          description: Name of the scope to identify it with a meaningful identification
        displayName:
          type: string
          description: displayName
        description:
          type: string
          description: description
        '@type':
          example: 'Scope'
          type: string
          description: The name of the scope structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'