{
  "openapi": "3.0.1",
  "info": {
    "title": "Shipment Tracking Management",
    "description": "This is a sample representation of the Shipment Tracking UNICA API using Swagger. You can find out more about UNICA APIs contacting Global IT.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://tmforum.org/shipmentTracking/v1"
    }
  ],
  "tags": [
    {
      "name": "trackings"
    }
  ],
  "paths": {
    "/shipmentTracking": {
      "get": {
        "tags": [
          "trackings"
        ],
        "summary": "Retrieve tracking details of a shipment",
        "operationId": "retrieveTrackings",
        "parameters": [
          {
            "name": "order.id",
            "in": "query",
            "description": "Id of the order whose shipment has to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracking details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingDetailsType"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "trackings"
        ],
        "summary": "Create tracking details of a shipment",
        "operationId": "createTracking",
        "requestBody": {
          "description": "Necessary information to create a shipment tracking entity",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/TrackingRequestType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tracking created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingDetailsType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "shipmentTrackingRequest"
      }
    },
    "/shipmentTracking/{trackingId}": {
      "get": {
        "tags": [
          "trackings"
        ],
        "summary": "Retrieve tracking details of a shipment",
        "operationId": "retrieveTracking",
        "parameters": [
          {
            "name": "trackingId",
            "in": "path",
            "description": "Id of the shipment that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracking details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingDetailsType"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "trackings"
        ],
        "summary": "Delete tracking details of a shipment",
        "operationId": "deleteTracking",
        "parameters": [
          {
            "name": "trackingId",
            "in": "path",
            "description": "Id of the shipment that must be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tracking details deleted successfully",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "trackings"
        ],
        "summary": "Modify tracking details of a shipment",
        "operationId": "modifyTracking",
        "parameters": [
          {
            "name": "trackingId",
            "in": "path",
            "description": "Id of the shipment that needs to be modified",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Modifications to be done",
          "content": {
            "*/*": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tracking modified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingDetailsType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "trackingModificationRequest"
      }
    },
    "/shipmentTracking/{trackingId}/checkpoint": {
      "post": {
        "tags": [
          "trackings"
        ],
        "summary": "Add checkpoint to a shipment tracking",
        "operationId": "createTrackingCheckpoint",
        "parameters": [
          {
            "name": "trackingId",
            "in": "path",
            "description": "Id of the tracking the checkpoint where be added onto",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Necessary data to add a new checkpoint",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CheckpointType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Checkpoint added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingDetailsType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "checkpointRequest"
      }
    }
  },
  "components": {
    "schemas": {
      "TrackingRequestType": {
        "required": [
          "addressTo",
          "carrier",
          "status",
          "trackingDate"
        ],
        "type": "object",
        "properties": {
          "carrier": {
            "type": "string",
            "description": "Carrier that is performing the shipment"
          },
          "trackingCode": {
            "type": "string",
            "description": "Tracking code in the carrier network"
          },
          "carrierTrackingUrl": {
            "type": "string",
            "description": "URL to a public page provided by the carrier that shows tracking details for this tracker"
          },
          "trackingDate": {
            "type": "string",
            "description": "Date when the shipment began to be tracked",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Current status of the package"
          },
          "statusChangeDate": {
            "type": "string",
            "description": "Date when the tracking status last changed",
            "format": "date-time"
          },
          "statusChangeReason": {
            "type": "string",
            "description": "Text describing the reason for the status of the tracking"
          },
          "weight": {
            "type": "number",
            "description": "Weight of the package in grams",
            "format": "decimal"
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "description": "Estimated deliveryDate",
            "format": "date-time"
          },
          "addressFrom": {
            "$ref": "#/components/schemas/AddressType"
          },
          "addressTo": {
            "$ref": "#/components/schemas/AddressType"
          },
          "checkpoint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckpointType"
            }
          },
          "order": {
            "type": "array",
            "description": "Order that triggered this shipment",
            "items": {
              "$ref": "#/components/schemas/OrderRefType"
            }
          }
        }
      },
      "TrackingDetailsType": {
        "required": [
          "addressTo",
          "carrier",
          "href",
          "id",
          "status",
          "trackingDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the shipment"
          },
          "href": {
            "type": "string",
            "description": "Reference to the shipment to be queried or to perform actions on it via API"
          },
          "carrier": {
            "type": "string",
            "description": "Carrier that is performing the shipment"
          },
          "trackingCode": {
            "type": "string",
            "description": "Tracking code in the carrier network"
          },
          "carrierTrackingUrl": {
            "type": "string",
            "description": "URL to a public page provided by the carrier that shows tracking details for this tracker"
          },
          "trackingDate": {
            "type": "string",
            "description": "Date when the shipment began to be tracked",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Current status of the package"
          },
          "statusChangeDate": {
            "type": "string",
            "description": "Date when the tracking status last changed",
            "format": "date-time"
          },
          "statusChangeReason": {
            "type": "string",
            "description": "Text describing the reason for the status of the tracking"
          },
          "weight": {
            "type": "number",
            "description": "Weight of the package in grams",
            "format": "decimal"
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "description": "Estimated deliveryDate",
            "format": "date-time"
          },
          "addressFrom": {
            "$ref": "#/components/schemas/AddressType"
          },
          "addressTo": {
            "$ref": "#/components/schemas/AddressType"
          },
          "checkpoint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckpointType"
            }
          },
          "order": {
            "type": "array",
            "description": "Order that triggered this shipment",
            "items": {
              "$ref": "#/components/schemas/OrderRefType"
            }
          }
        }
      },
      "OrderRefType": {
        "required": [
          "href",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the order"
          },
          "href": {
            "type": "string",
            "description": "URI where to query or perform actions on the order"
          },
          "name": {
            "type": "string",
            "description": "Screen name of the order"
          },
          "@referredType": {
            "type": "string",
            "description": "Type of the referred order in case it is polymorphic"
          }
        },
        "description": "Reference to an order that can typically be queried with another API."
      },
      "AddressType": {
        "required": [
          "city",
          "country",
          "locality",
          "postcode",
          "stateOrProvince",
          "streetName",
          "streetNr",
          "streetType"
        ],
        "type": "object",
        "properties": {
          "streetNr": {
            "type": "string",
            "description": "The street number"
          },
          "streetNrSuffix": {
            "type": "string",
            "description": "Suffix of the street number"
          },
          "streetNrLast": {
            "type": "string",
            "description": "Use it in case the address covers a range of numbers in a street. The range will be limited by streetNr and this field"
          },
          "streetNrLastSuffix": {
            "type": "string",
            "description": "Suffix of the last street number"
          },
          "streetName": {
            "type": "string",
            "description": "Name of the street (e.g.: Gran V�a)"
          },
          "streetType": {
            "type": "string",
            "description": "Type of street (e.g.: Street, Calle, Square, Avenue, Platz, etc.)"
          },
          "streetSuffix": {
            "type": "string",
            "description": "Suffix of the street"
          },
          "postcode": {
            "type": "string",
            "description": "Postal code"
          },
          "locality": {
            "type": "string",
            "description": "To define a second administrative area such as a district or borough"
          },
          "city": {
            "type": "string",
            "description": "Local administrative name such as a city, town, municipality or council, partido, concello, etc. that might comprise smaller entities"
          },
          "stateOrProvince": {
            "type": "string",
            "description": "Region, state, or province"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "@type": {
            "type": "string",
            "description": "type of address"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "Where to find a schema for the polymorphic types definitions"
          },
          "geographicLocation": {
            "$ref": "#/components/schemas/GeographicLocationType"
          },
          "geographicSubAddress": {
            "$ref": "#/components/schemas/SubAddressType"
          }
        },
        "description": "Information describing a postal address"
      },
      "GeographicLocationType": {
        "required": [
          "geographicPoint",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of a GeoLocation"
          },
          "href": {
            "type": "string",
            "description": "href of the GeoLocation"
          },
          "name": {
            "type": "string",
            "description": "Name of a GeoLocation"
          },
          "type": {
            "type": "string",
            "description": "Type allows describing Geolocation form: it could be a point, a line, a polygon, a cylinder, etc...."
          },
          "geographicPoint": {
            "type": "array",
            "description": "A list of geo points (GeographicPoint [*]). A GeoPoint defines a geographic point through coordinates",
            "items": {
              "$ref": "#/components/schemas/GeographicPointType"
            }
          },
          "accuracy": {
            "type": "string",
            "description": "Accuracy of the coordinate specified"
          },
          "spatialRef": {
            "type": "string",
            "description": "Geocoding referential"
          },
          "@baseType": {
            "type": "string",
            "description": "Geographic Location base type"
          },
          "@type": {
            "type": "string",
            "description": "Indicates the type of the resource for extensibility purposes"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A link to the schema describing this REST Resource"
          }
        }
      },
      "GeographicPointType": {
        "required": [
          "x",
          "y"
        ],
        "type": "object",
        "properties": {
          "x": {
            "type": "string",
            "description": "x coordinate (usually latitude)"
          },
          "y": {
            "type": "string",
            "description": "y coordinate (usually longitude)"
          },
          "z": {
            "type": "string",
            "description": "z coordinate (usually elevation)"
          }
        }
      },
      "SubAddressType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique Identifier of the subAddress"
          },
          "href": {
            "type": "string",
            "description": "href of the subAddress"
          },
          "type": {
            "type": "string",
            "description": "Type of subAddress. It can be a subunit or a private street"
          },
          "name": {
            "type": "string",
            "description": "Name of the subAddress to identify it with a meaningful identification"
          },
          "subUnitType": {
            "type": "string",
            "description": "A string. the type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF."
          },
          "subUnitNumber": {
            "type": "string",
            "description": "the discriminator used for the subunit often just a simple number e.g. FLAT 5, may also be a range"
          },
          "levelType": {
            "type": "string",
            "description": "describes level types within a building"
          },
          "levelNumber": {
            "type": "string",
            "description": "used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
          },
          "buildingName": {
            "type": "string",
            "description": "allows for buildings that have well-known names"
          },
          "privateStreetName": {
            "type": "string",
            "description": "private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office"
          },
          "privateStreetNumber": {
            "type": "string",
            "description": "private streets numbers internal to a private street"
          },
          "@type": {
            "type": "string",
            "description": "Indicates the type of the resource for extensibility purposes"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A link to the schema describing this REST Resource"
          }
        }
      },
      "CheckpointType": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the package at the time of the scan event"
          },
          "message": {
            "type": "string",
            "description": "Message describing the performed action e.g.: attempted delivery, departed from warehouse..."
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "checkPost": {
            "type": "string",
            "description": "Location display name"
          },
          "city": {
            "type": "string",
            "description": "Local administrative name such as a city, town, municipality or council, partido, concello, etc. that might comprise smaller entities"
          },
          "stateOrProvince": {
            "type": "string",
            "description": "Region, state, or province"
          },
          "country": {
            "type": "string",
            "description": "Country"
          }
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}