openapi: 3.0.1
info:
  title: Service Test Management
  description: >-
    Service Test Management API goal is to provide the ability to manage tests of provisioned
    Services. 

    ### Resource 

    - ServiceTest 

    - ServiceTestSpecification

    ### Operations

    Service Test Management API performs the following operations on the resources :

    - Retrieve an entity or a collection of entities depending on filter criteria

    - Partial update of an entity (including updating rules)

    - Create an entity (including default values and creation rules)

    - Delete an entity (for administration purposes)

    - Manage notification of events
  version: 5.0.0
servers:
  - url: '{apiRoot}/tmf-api/serviceTestManagement/v5/'
    variables:
      apiRoot:
        default: 'https://serverRoot'
        enum:
          - 'https://serverRoot'
tags:
  - name: serviceTest
    description: Operations for ServiceTest Resource
  - name: serviceTestSpecification
    description: Operations for ServiceTestSpecification Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceTestAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceTestAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceTestAttributeValueChangeEvent
      operationId: serviceTestAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceTestCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceTestCreateEvent
      description: Example of a client listener for receiving the notification ServiceTestCreateEvent
      operationId: serviceTestCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceTestDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceTestDeleteEvent
      description: Example of a client listener for receiving the notification ServiceTestDeleteEvent
      operationId: serviceTestDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceTestSpecificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceTestSpecificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceTestSpecificationAttributeValueChangeEvent
      operationId: serviceTestSpecificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestSpecificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceTestSpecificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceTestSpecificationCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceTestSpecificationCreateEvent
      operationId: serviceTestSpecificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestSpecificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceTestSpecificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceTestSpecificationDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        ServiceTestSpecificationDeleteEvent
      operationId: serviceTestSpecificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestSpecificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/serviceTestStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity ServiceTestStateChangeEvent
      description: Example of a client listener for receiving the notification ServiceTestStateChangeEvent
      operationId: serviceTestStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /serviceTest:
    get:
      tags:
        - serviceTest
      summary: List or find ServiceTest objects
      description: List or find ServiceTest objects
      operationId: listServiceTest
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceTestArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - serviceTest
      summary: Creates a ServiceTest
      description: This operation creates a ServiceTest entity.
      operationId: createServiceTest
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceTest_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ServiceTest'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/serviceTest/{id}':
    get:
      tags:
        - serviceTest
      summary: Retrieves a ServiceTest by ID
      description: >-
        This operation retrieves a ServiceTest entity. Attribute selection enabled for all first
        level attributes.
      operationId: retrieveServiceTest
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceTest_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - serviceTest
      summary: Updates partially a ServiceTest
      description: This operation updates partially a ServiceTest entity.
      operationId: patchServiceTest
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceTest_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceTest_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - serviceTest
      summary: Deletes a ServiceTest
      description: This operation deletes a ServiceTest entity.
      operationId: deleteServiceTest
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /serviceTestSpecification:
    get:
      tags:
        - serviceTestSpecification
      summary: List or find ServiceTestSpecification objects
      description: List or find ServiceTestSpecification objects
      operationId: listServiceTestSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceTestSpecificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - serviceTestSpecification
      summary: Creates a ServiceTestSpecification
      description: This operation creates a ServiceTestSpecification entity.
      operationId: createServiceTestSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestSpecification_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201ServiceTestSpecification'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/serviceTestSpecification/{id}':
    get:
      tags:
        - serviceTestSpecification
      summary: Retrieves a ServiceTestSpecification by ID
      description: >-
        This operation retrieves a ServiceTestSpecification entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrieveServiceTestSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceTestSpecification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - serviceTestSpecification
      summary: Updates partially a ServiceTestSpecification
      description: This operation updates partially a ServiceTestSpecification entity.
      operationId: patchServiceTestSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/ServiceTestSpecification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200ServiceTestSpecification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - serviceTestSpecification
      summary: Deletes a ServiceTestSpecification
      description: This operation deletes a ServiceTestSpecification entity.
      operationId: deleteServiceTestSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_MVO:
      type: object
      description: Base schema for adressable entities
    AppliedConsequence:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An Applied Consequence defines the action (prescribed action or notification) to take
            when a 

            MeasureThresholdRuleViolation occurs.
          properties:
            appliedAction:
              type: string
              description: |-
                The action for a violated threshold. This could be a hyperlink to 
                the action.
            description:
              type: string
              description: A narrative that explains in detail what the consequence is.
            name:
              type: string
              description: |-
                A word, term, or phrase by which Consequence is known and 
                distinguished from other MetricDefMeasureConsequences.
            repeatAction:
              type: boolean
              description: >-
                An indicator used to specify that a consequence should cease 

                being applied if a value is in the same range as the previous value or continue
                being applied if a value is in the same range as the previous value.  

                If the repeatAction is True, if the consequence is always applied as soon as the
                MetricMeasure value is in the range of values and if the repeatAction is False, the
                consequence is applied only if the previous MetricMeasure value was not in the same
                range.
      discriminator:
        propertyName: '@type'
        mapping:
          AppliedConsequence: '#/components/schemas/AppliedConsequence'
    AppliedConsequence_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An Applied Consequence defines the action (prescribed action or notification) to take
            when a 

            MeasureThresholdRuleViolation occurs.
          properties:
            appliedAction:
              type: string
              description: |-
                The action for a violated threshold. This could be a hyperlink to 
                the action.
            description:
              type: string
              description: A narrative that explains in detail what the consequence is.
            name:
              type: string
              description: |-
                A word, term, or phrase by which Consequence is known and 
                distinguished from other MetricDefMeasureConsequences.
            repeatAction:
              type: boolean
              description: >-
                An indicator used to specify that a consequence should cease 

                being applied if a value is in the same range as the previous value or continue
                being applied if a value is in the same range as the previous value.  

                If the repeatAction is True, if the consequence is always applied as soon as the
                MetricMeasure value is in the range of values and if the repeatAction is False, the
                consequence is applied only if the previous MetricMeasure value was not in the same
                range.
      discriminator:
        propertyName: '@type'
        mapping:
          AppliedConsequence: '#/components/schemas/AppliedConsequence_MVO'
    AssociationSpecificationRef:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef'
    AssociationSpecificationRef_FVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_FVO'
    AssociationSpecificationRef_MVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    CharacteristicSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification'
    CharacteristicSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship'
    CharacteristicSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
    CharacteristicSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
    CharacteristicSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
          required:
            - name
            - valueType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_FVO'
    CharacteristicSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_MVO'
    CharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification'
          BooleanCharacteristicValueSpecification: '#/components/schemas/BooleanCharacteristicValueSpecification'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification'
    CharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_MVO'
          BooleanArrayCharacteristicValueSpecification: '#/components/schemas/BooleanArrayCharacteristicValueSpecification_MVO'
          BooleanCharacteristicValueSpecification: '#/components/schemas/BooleanCharacteristicValueSpecification_MVO'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification_MVO'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification_MVO'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification_MVO'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification_MVO'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification_MVO'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification_MVO'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification_MVO'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
    ConstraintRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef'
    ConstraintRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_FVO'
    ConstraintRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_MVO'
    Duration:
      type: object
      description: A time interval in a given unit of time
      properties:
        amount:
          type: integer
          description: 'Time interval (number of seconds, minutes, hours, etc.)'
        units:
          type: string
          description: 'Unit of time (seconds, minutes, hours, etc.)'
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
            - name
    EntityRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
    EntitySpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification'
          ServiceTestSpecification: '#/components/schemas/ServiceTestSpecification'
    EntitySpecificationRelationship:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
    EntitySpecificationRelationship_FVO:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef_FVO'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
      required:
        - role
        - relationshipType
        - validFor
        - associationSpec
    EntitySpecificationRelationship_MVO:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef_MVO'
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
    EntitySpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema_FVO'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef_FVO'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification_FVO'
          ServiceTestSpecification: '#/components/schemas/ServiceTestSpecification_FVO'
    EntitySpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema_MVO'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef_MVO'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification_MVO'
          ServiceTestSpecification: '#/components/schemas/ServiceTestSpecification_MVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    ExecutionStateType:
      enum:
        - acknowledged
        - rejected
        - pending
        - inProgress
        - cancelled
        - completed
        - failed
      type: string
      description: Possible values for the state of the execution
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_MVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    MeasureThresholdRuleViolation:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: |-
            A measureThresholdRuleViolation is a violation of a rule that defines the in the 
            MericDefMeasureThresholdRule.
          properties:
            conformanceComparatorLower:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to compare with
                the conformanceTargetLower if used.
            conformanceComparatorExact:
              type: boolean
              description: >-
                An operator that when applied on a value specifies whether it 

                is the same target value or not. This operator is used to compare with the
                conformanceTargetExact if used.
            conformanceComparatorUpper:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to compare with
                the conformanceTargetUpper if used.
            conformanceTargetLower:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the lower limit. The value should be less than the
                conformanceTargetUpper if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            conformanceTargetUpper:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the Upper limit. The value should be greater than the
                conformanceTargetLower if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            description:
              type: string
              description: Description for the MetricDefMeasureThresholdRule .
            name:
              type: string
              description: Name for the MetricDefMeasureThresholdRule .
            numberOfAllowedCrossing:
              type: integer
              description: |-
                The number of allowed crossing occurrences in reference to the 
                tolerancePeriod without a consequence being initiated.
            thresholdRuleSeverity:
              type: string
              description: >-
                A threshold can be generated in different severity levels. A 

                crossing for each level may require a different condition and possibly trigger a
                different consequence.
            conformanceTargetExact:
              type: string
              description: >-
                To cater for values that are not numerical test metrics (e.g. a DSL line can be
                Synchronised or Unsynchronised. If the latter, the test should result in a rule
                violation).The allowed value can contain a REGEX expression.
            tolerancePeriod:
              $ref: '#/components/schemas/Duration'
            appliedConsequence:
              type: array
              description: >-
                An Applied Consequence defines the action (prescribed action or notification) to
                take when a MeasureThresholdRuleViolation occurs.
              items:
                $ref: '#/components/schemas/AppliedConsequence'
      discriminator:
        propertyName: '@type'
        mapping:
          MeasureThresholdRuleViolation: '#/components/schemas/MeasureThresholdRuleViolation'
    MeasureThresholdRuleViolation_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: |-
            A measureThresholdRuleViolation is a violation of a rule that defines the in the 
            MericDefMeasureThresholdRule.
          properties:
            conformanceComparatorLower:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to compare with
                the conformanceTargetLower if used.
            conformanceComparatorExact:
              type: boolean
              description: >-
                An operator that when applied on a value specifies whether it 

                is the same target value or not. This operator is used to compare with the
                conformanceTargetExact if used.
            conformanceComparatorUpper:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to compare with
                the conformanceTargetUpper if used.
            conformanceTargetLower:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the lower limit. The value should be less than the
                conformanceTargetUpper if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            conformanceTargetUpper:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the Upper limit. The value should be greater than the
                conformanceTargetLower if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            description:
              type: string
              description: Description for the MetricDefMeasureThresholdRule .
            name:
              type: string
              description: Name for the MetricDefMeasureThresholdRule .
            numberOfAllowedCrossing:
              type: integer
              description: |-
                The number of allowed crossing occurrences in reference to the 
                tolerancePeriod without a consequence being initiated.
            thresholdRuleSeverity:
              type: string
              description: >-
                A threshold can be generated in different severity levels. A 

                crossing for each level may require a different condition and possibly trigger a
                different consequence.
            conformanceTargetExact:
              type: string
              description: >-
                To cater for values that are not numerical test metrics (e.g. a DSL line can be
                Synchronised or Unsynchronised. If the latter, the test should result in a rule
                violation).The allowed value can contain a REGEX expression.
            tolerancePeriod:
              $ref: '#/components/schemas/Duration'
            appliedConsequence:
              type: array
              description: >-
                An Applied Consequence defines the action (prescribed action or notification) to
                take when a MeasureThresholdRuleViolation occurs.
              items:
                $ref: '#/components/schemas/AppliedConsequence_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          MeasureThresholdRuleViolation: '#/components/schemas/MeasureThresholdRuleViolation_MVO'
    MetricDefMeasureConsequence:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A MetricDefMeasureConsequence defines the action (prescribed action or notification) to
            take when a 

            MetricDefMeasureThresholdRule is crossed.
          properties:
            description:
              type: string
              description: A narrative that explains in detail what the consequence is.
            name:
              type: string
              description: >-
                A word, term, or phrase by which a 

                MetricDefMeasureConsequence is known and distinguished from other
                MetricDefMeasureConsequences.
            prescribeAction:
              type: string
              description: |-
                Recommended remedy for a violated threshold. This could be 
                the hyperlink to the action.
            repeatAction:
              type: boolean
              description: >-
                An indicator used to specify that a consequence should cease 

                being applied if a value is in the same range as the previous value or continue
                being applied if a value is in the same range as the previous value. 

                If the repeatAction is True, if the consequence is always applied as soon as the
                MetricMeasure value is in the range of values and if the repeatAction is False, the
                consequence is applied only if the previous MetricMeasure value was not in the same
                range.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          MetricDefMeasureConsequence: '#/components/schemas/MetricDefMeasureConsequence'
    MetricDefMeasureConsequence_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            A MetricDefMeasureConsequence defines the action (prescribed action or notification) to
            take when a 

            MetricDefMeasureThresholdRule is crossed.
          properties:
            description:
              type: string
              description: A narrative that explains in detail what the consequence is.
            name:
              type: string
              description: >-
                A word, term, or phrase by which a 

                MetricDefMeasureConsequence is known and distinguished from other
                MetricDefMeasureConsequences.
            prescribeAction:
              type: string
              description: |-
                Recommended remedy for a violated threshold. This could be 
                the hyperlink to the action.
            repeatAction:
              type: boolean
              description: >-
                An indicator used to specify that a consequence should cease 

                being applied if a value is in the same range as the previous value or continue
                being applied if a value is in the same range as the previous value. 

                If the repeatAction is True, if the consequence is always applied as soon as the
                MetricMeasure value is in the range of values and if the repeatAction is False, the
                consequence is applied only if the previous MetricMeasure value was not in the same
                range.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          MetricDefMeasureConsequence: '#/components/schemas/MetricDefMeasureConsequence_MVO'
    MetricDefMeasureThresholdRule:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A MetricDefMeasureThresholdRule is a rule that defines the condition (raise or clear) to
            achieve to apply 

            consequences when a threshold is crossed or ceased to be crossed. It also defines the
            severity of the 

            raise or clear of the threshold.
          properties:
            conformanceComparatorLower:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to Service Test
                Management API REST Specification compare with the conformanceTargetLower if used.
            conformanceComparatorUpper:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to compare with
                the conformanceTargetUpper if used.
            conformanceComparatorExact:
              type: boolean
              description: >-
                An operator that when applied on a value specifies whether the 

                value is the same or not. This operator is used to compare with the
                conformanceTargetExact if used.
            conformanceTargetExact:
              type: string
              description: >-
                To cater for values that are not numerical test metrics (e.g. a DSL line can be
                Synchronised or Unsynchronised. If the latter, the test should result in a rule
                violation). The allowed value can contain a REGEX expression.
            conformanceTargetLower:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the lower limit. The value should be less than the
                conformanceTargetUpper if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            conformanceTargetUpper:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the Upper limit. The value should be greater than the
                conformanceTargetLower if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            consequence:
              type: array
              description: >-
                A list of consequences (actions, notifications) that will arise if the threshold is
                crossed
              items:
                $ref: '#/components/schemas/MetricDefMeasureConsequence'
            description:
              type: string
              description: Description for the MetricDefMeasureThresholdRule .
            name:
              type: string
              description: Name for the MetricDefMeasureThresholdRule .
            numberOfAllowedCrossing:
              type: integer
              description: |-
                The number of allowed crossing occurrences in reference to the 
                tolerancePeriod without a consequence being initiated.
            thresholdRuleSeverity:
              type: string
              description: >-
                A threshold can be generated in different severity levels. A 

                crossing for each level may require a different condition and possibly trigger a
                different consequence.
            tolerancePeriod:
              $ref: '#/components/schemas/Duration'
      discriminator:
        propertyName: '@type'
        mapping:
          MetricDefMeasureThresholdRule: '#/components/schemas/MetricDefMeasureThresholdRule'
    MetricDefMeasureThresholdRule_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            A MetricDefMeasureThresholdRule is a rule that defines the condition (raise or clear) to
            achieve to apply 

            consequences when a threshold is crossed or ceased to be crossed. It also defines the
            severity of the 

            raise or clear of the threshold.
          properties:
            conformanceComparatorLower:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to Service Test
                Management API REST Specification compare with the conformanceTargetLower if used.
            conformanceComparatorUpper:
              type: string
              description: >-
                An operator that when applied on a value specifies whether a 

                threshold is crossed or ceased to be crossed. This operator is used to compare with
                the conformanceTargetUpper if used.
            conformanceComparatorExact:
              type: boolean
              description: >-
                An operator that when applied on a value specifies whether the 

                value is the same or not. This operator is used to compare with the
                conformanceTargetExact if used.
            conformanceTargetExact:
              type: string
              description: >-
                To cater for values that are not numerical test metrics (e.g. a DSL line can be
                Synchronised or Unsynchronised. If the latter, the test should result in a rule
                violation). The allowed value can contain a REGEX expression.
            conformanceTargetLower:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the lower limit. The value should be less than the
                conformanceTargetUpper if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            conformanceTargetUpper:
              type: string
              description: >-
                A value used to determine if the threshold is crossed or ceases 

                to be crossed. It represents the Upper limit. The value should be greater than the
                conformanceTargetLower if used. The conformance comparators should also be logically
                defined so as to not lead to a logically impossible condition.
            consequence:
              type: array
              description: >-
                A list of consequences (actions, notifications) that will arise if the threshold is
                crossed
              items:
                $ref: '#/components/schemas/MetricDefMeasureConsequence_MVO'
            description:
              type: string
              description: Description for the MetricDefMeasureThresholdRule .
            name:
              type: string
              description: Name for the MetricDefMeasureThresholdRule .
            numberOfAllowedCrossing:
              type: integer
              description: |-
                The number of allowed crossing occurrences in reference to the 
                tolerancePeriod without a consequence being initiated.
            thresholdRuleSeverity:
              type: string
              description: >-
                A threshold can be generated in different severity levels. A 

                crossing for each level may require a different condition and possibly trigger a
                different consequence.
            tolerancePeriod:
              $ref: '#/components/schemas/Duration'
      discriminator:
        propertyName: '@type'
        mapping:
          MetricDefMeasureThresholdRule: '#/components/schemas/MetricDefMeasureThresholdRule_MVO'
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
    ServiceRef_FVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
    ServiceRef_MVO:
      type: object
      description: 'Service reference, for when Service is used by other entities.'
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
    ServiceSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
    ServiceSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_FVO'
    ServiceSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            Service specification reference: ServiceSpecification(s) required to realize a
            ProductSpecification.
          properties:
            version:
              type: string
              description: Service specification version
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_MVO'
    ServiceTest:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: >-
            A service test is an entity that exists for a controlled test invocation on a service.
            The service 

            test is executed according to a schedule and contains service test configuration
            parameters that are to be 

            applied at execution time, and service test measures that result.
          properties:
            characteristic:
              type: array
              description: List of characteristics with values that define the test run
              items:
                $ref: '#/components/schemas/Characteristic'
            description:
              type: string
              description: Description of the service test
            endDateTime:
              type: string
              format: date-time
              description: The end date and time of the service test
            mode:
              type: string
              description: |-
                An indication of whether the service test is running in 
                "PROACTIVE" or "ONDEMAND" mode
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
            startDateTime:
              type: string
              format: date-time
              description: The start date and time of the service test.
            state:
              $ref: '#/components/schemas/ExecutionStateType'
            testMeasure:
              type: array
              description: The results of the test in terms of the measured metrics
              items:
                $ref: '#/components/schemas/TestMeasure'
            relatedService:
              $ref: '#/components/schemas/ServiceRef'
            testSpecification:
              $ref: '#/components/schemas/ServiceTestSpecificationRef'
            name:
              type: string
              description: The name of the service test
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTest: '#/components/schemas/ServiceTest'
    ServiceTestAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceTestAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceTestAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestAttributeValueChangeEvent: '#/components/schemas/ServiceTestAttributeValueChangeEvent'
    ServiceTestAttributeValueChangeEventPayload:
      type: object
      description: ServiceTestAttributeValueChangeEventPayload generic structure
      properties:
        serviceTest:
          $ref: '#/components/schemas/ServiceTest'
    ServiceTestCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceTestCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceTestCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestCreateEvent: '#/components/schemas/ServiceTestCreateEvent'
    ServiceTestCreateEventPayload:
      type: object
      description: ServiceTestCreateEventPayload generic structure
      properties:
        serviceTest:
          $ref: '#/components/schemas/ServiceTest'
    ServiceTestDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceTestDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceTestDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestDeleteEvent: '#/components/schemas/ServiceTestDeleteEvent'
    ServiceTestDeleteEventPayload:
      type: object
      description: ServiceTestDeleteEventPayload generic structure
      properties:
        serviceTest:
          $ref: '#/components/schemas/ServiceTest'
    ServiceTestSpecRelationship:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            A substitution, dependency or exclusivity relationship between/among service
            specifications.
          properties:
            role:
              type: string
              description: The association role for this service test specification
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            relationshipType:
              type: string
              description: 'Type of relationship such as substitution, dependency, exclusivity'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecRelationship: '#/components/schemas/ServiceTestSpecRelationship'
    ServiceTestSpecRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            A substitution, dependency or exclusivity relationship between/among service
            specifications.
          properties:
            role:
              type: string
              description: The association role for this service test specification
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            relationshipType:
              type: string
              description: 'Type of relationship such as substitution, dependency, exclusivity'
          required:
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecRelationship: '#/components/schemas/ServiceTestSpecRelationship_FVO'
    ServiceTestSpecRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
        - type: object
          description: >-
            A substitution, dependency or exclusivity relationship between/among service
            specifications.
          properties:
            role:
              type: string
              description: The association role for this service test specification
            relationshipType:
              type: string
              description: 'Type of relationship such as substitution, dependency, exclusivity'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecRelationship: '#/components/schemas/ServiceTestSpecRelationship_MVO'
    ServiceTestSpecification:
      allOf:
        - $ref: '#/components/schemas/EntitySpecification'
        - type: object
          description: >-
            The service test specification describes the service test in terms of parameters to be
            configured and 

            measures to be taken.
          properties:
            description:
              type: string
              description: Description of a service test specification.
            testMeasureDefinition:
              type: array
              description: >-
                A list of definitions for the measurements for the test defined by this
                specification
              items:
                $ref: '#/components/schemas/TestMeasureDefinition'
            serviceTestSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ServiceTestSpecRelationship'
              description: >-
                A list of service test specifications related to this specification e.g. dependency,
                substitution
            relatedServiceSpecification:
              type: array
              description: The related service specification may relate to more than one service specification.
              items:
                $ref: '#/components/schemas/ServiceSpecificationRef'
    ServiceTestSpecificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceTestSpecificationAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceTestSpecificationAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecificationAttributeValueChangeEvent: '#/components/schemas/ServiceTestSpecificationAttributeValueChangeEvent'
    ServiceTestSpecificationAttributeValueChangeEventPayload:
      type: object
      description: ServiceTestSpecificationAttributeValueChangeEventPayload generic structure
      properties:
        serviceTestSpecification:
          $ref: '#/components/schemas/ServiceTestSpecification'
    ServiceTestSpecificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceTestSpecificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceTestSpecificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecificationCreateEvent: '#/components/schemas/ServiceTestSpecificationCreateEvent'
    ServiceTestSpecificationCreateEventPayload:
      type: object
      description: ServiceTestSpecificationCreateEventPayload generic structure
      properties:
        serviceTestSpecification:
          $ref: '#/components/schemas/ServiceTestSpecification'
    ServiceTestSpecificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceTestSpecificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceTestSpecificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecificationDeleteEvent: '#/components/schemas/ServiceTestSpecificationDeleteEvent'
    ServiceTestSpecificationDeleteEventPayload:
      type: object
      description: ServiceTestSpecificationDeleteEventPayload generic structure
      properties:
        serviceTestSpecification:
          $ref: '#/components/schemas/ServiceTestSpecification'
    ServiceTestSpecificationRef:
      type: object
      description: >-
        Service Test specification reference: ServiceTestSpecification(s) required to realize a Test
        Specification.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecificationRef: '#/components/schemas/ServiceTestSpecificationRef'
    ServiceTestSpecificationRef_FVO:
      type: object
      description: >-
        Service Test specification reference: ServiceTestSpecification(s) required to realize a Test
        Specification.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecificationRef: '#/components/schemas/ServiceTestSpecificationRef_FVO'
    ServiceTestSpecificationRef_MVO:
      type: object
      description: >-
        Service Test specification reference: ServiceTestSpecification(s) required to realize a Test
        Specification.
      allOf:
        - $ref: '#/components/schemas/EntityRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestSpecificationRef: '#/components/schemas/ServiceTestSpecificationRef_MVO'
    ServiceTestSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/EntitySpecification_FVO'
        - type: object
          description: >-
            The service test specification describes the service test in terms of parameters to be
            configured and 

            measures to be taken.
          properties:
            description:
              type: string
              description: Description of a service test specification.
            testMeasureDefinition:
              type: array
              description: >-
                A list of definitions for the measurements for the test defined by this
                specification
              items:
                $ref: '#/components/schemas/TestMeasureDefinition_FVO'
            serviceTestSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ServiceTestSpecRelationship_FVO'
              description: >-
                A list of service test specifications related to this specification e.g. dependency,
                substitution
            relatedServiceSpecification:
              type: array
              description: The related service specification may relate to more than one service specification.
              items:
                $ref: '#/components/schemas/ServiceSpecificationRef_FVO'
          required:
            - relatedServiceSpecification
    ServiceTestSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/EntitySpecification_MVO'
        - type: object
          description: >-
            The service test specification describes the service test in terms of parameters to be
            configured and 

            measures to be taken.
          properties:
            description:
              type: string
              description: Description of a service test specification.
            testMeasureDefinition:
              type: array
              description: >-
                A list of definitions for the measurements for the test defined by this
                specification
              items:
                $ref: '#/components/schemas/TestMeasureDefinition_MVO'
            serviceTestSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ServiceTestSpecRelationship_MVO'
              description: >-
                A list of service test specifications related to this specification e.g. dependency,
                substitution
            relatedServiceSpecification:
              type: array
              description: The related service specification may relate to more than one service specification.
              items:
                $ref: '#/components/schemas/ServiceSpecificationRef_MVO'
    ServiceTestStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: ServiceTestStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/ServiceTestStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTestStateChangeEvent: '#/components/schemas/ServiceTestStateChangeEvent'
    ServiceTestStateChangeEventPayload:
      type: object
      description: ServiceTestStateChangeEventPayload generic structure
      properties:
        serviceTest:
          $ref: '#/components/schemas/ServiceTest'
    ServiceTest_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: >-
            A service test is an entity that exists for a controlled test invocation on a service.
            The service 

            test is executed according to a schedule and contains service test configuration
            parameters that are to be 

            applied at execution time, and service test measures that result.
          properties:
            characteristic:
              type: array
              description: List of characteristics with values that define the test run
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            description:
              type: string
              description: Description of the service test
            endDateTime:
              type: string
              format: date-time
              description: The end date and time of the service test
            mode:
              type: string
              description: |-
                An indication of whether the service test is running in 
                "PROACTIVE" or "ONDEMAND" mode
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
            startDateTime:
              type: string
              format: date-time
              description: The start date and time of the service test.
            state:
              $ref: '#/components/schemas/ExecutionStateType'
            testMeasure:
              type: array
              description: The results of the test in terms of the measured metrics
              items:
                $ref: '#/components/schemas/TestMeasure_FVO'
            relatedService:
              $ref: '#/components/schemas/ServiceRef_FVO'
            testSpecification:
              $ref: '#/components/schemas/ServiceTestSpecificationRef_FVO'
            name:
              type: string
              description: The name of the service test
          required:
            - relatedService
            - testSpecification
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTest: '#/components/schemas/ServiceTest_FVO'
    ServiceTest_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - $ref: '#/components/schemas/Addressable_MVO'
        - type: object
          description: >-
            A service test is an entity that exists for a controlled test invocation on a service.
            The service 

            test is executed according to a schedule and contains service test configuration
            parameters that are to be 

            applied at execution time, and service test measures that result.
          properties:
            characteristic:
              type: array
              description: List of characteristics with values that define the test run
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            description:
              type: string
              description: Description of the service test
            endDateTime:
              type: string
              format: date-time
              description: The end date and time of the service test
            mode:
              type: string
              description: |-
                An indication of whether the service test is running in 
                "PROACTIVE" or "ONDEMAND" mode
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            relatedParty:
              type: array
              description: >-
                A list of related party references (RelatedParty [*]). A related party defines party
                or party role linked to a specific entity
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            externalIdentifier:
              type: array
              description: A list of external identifiers assoicated with this service
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
            startDateTime:
              type: string
              format: date-time
              description: The start date and time of the service test.
            state:
              $ref: '#/components/schemas/ExecutionStateType'
            testMeasure:
              type: array
              description: The results of the test in terms of the measured metrics
              items:
                $ref: '#/components/schemas/TestMeasure_MVO'
            relatedService:
              $ref: '#/components/schemas/ServiceRef_MVO'
            testSpecification:
              $ref: '#/components/schemas/ServiceTestSpecificationRef_MVO'
            name:
              type: string
              description: The name of the service test
      discriminator:
        propertyName: '@type'
        mapping:
          ServiceTest: '#/components/schemas/ServiceTest_MVO'
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    TargetEntitySchema:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target entity
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
    TargetEntitySchema_FVO:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target entity
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
      required:
        - '@type'
        - '@schemaLocation'
    TargetEntitySchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
    TestMeasure:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A TestMeasure specifies a measure of a specific aspect of a product, service, or
            resource test, such as lost packets or connectivity status
          properties:
            accuracy:
              type: number
              format: float
              description: The number of digits of accuracy captured for associated Metrics
            captureDateTime:
              type: string
              format: date-time
              description: The date and time that the metric was captured
            captureMethod:
              type: string
              description: >-
                The method used to capture the Metrics (This may be replaced by a set of entities
                similar to the Performance Monitoring Ref)
            metricDescription:
              type: string
              description: Brief description of the metric
            metricHref:
              type: string
              description: Hyperlink to access a metric for detail information
            metricName:
              type: string
              description: The name of the metric
            ruleViolation:
              type: array
              description: A list of rules that were violated in this test measure
              items:
                $ref: '#/components/schemas/MeasureThresholdRuleViolation'
            unitOfMeasure:
              type: string
              description: >-
                The unit of measure for the metric values, such as meters, cubic yards, kilograms
                [ISO 1000].
            value:
              $ref: '#/components/schemas/Characteristic'
      discriminator:
        propertyName: '@type'
        mapping:
          TestMeasure: '#/components/schemas/TestMeasure'
    TestMeasureDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A TestMeasureDefinition specifies a measure of a specific aspect of a product, service,
            or resource test, such as lost packets or connectivity status
          properties:
            captureFrequency:
              type: string
              description: >-
                The frequency of capture for the metric. Note: This may be replaced by a set of
                entities similar to the Performance Monitoring
            captureMethod:
              type: string
              description: >-
                The method used to capture the Metric. Note: This may be replaced by a set of
                entities similar to the Performance Monitoring
            capturePeriod:
              $ref: '#/components/schemas/Duration'
            metricDescription:
              type: string
              description: Brief description of the metric
            metricHref:
              type: string
              description: Hyperlink to access a metric for detail information
            metricName:
              type: string
              description: The name of a metric that in the test measure
            name:
              type: string
              description: The name of the TestMeasureDefinition
            unitOfMeasure:
              type: string
              description: Name of a service test specification
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueType:
              type: string
              description: >-
                A kind of value that the Metric value can take on, such as numeric, text, and so
                forth
            thresholdRule:
              type: array
              description: The rule(s) associated with the measure threshold
              items:
                $ref: '#/components/schemas/MetricDefMeasureThresholdRule'
      discriminator:
        propertyName: '@type'
        mapping:
          TestMeasureDefinition: '#/components/schemas/TestMeasureDefinition'
    TestMeasureDefinition_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A TestMeasureDefinition specifies a measure of a specific aspect of a product, service,
            or resource test, such as lost packets or connectivity status
          properties:
            captureFrequency:
              type: string
              description: >-
                The frequency of capture for the metric. Note: This may be replaced by a set of
                entities similar to the Performance Monitoring
            captureMethod:
              type: string
              description: >-
                The method used to capture the Metric. Note: This may be replaced by a set of
                entities similar to the Performance Monitoring
            capturePeriod:
              $ref: '#/components/schemas/Duration'
            metricDescription:
              type: string
              description: Brief description of the metric
            metricHref:
              type: string
              description: Hyperlink to access a metric for detail information
            metricName:
              type: string
              description: The name of a metric that in the test measure
            name:
              type: string
              description: The name of the TestMeasureDefinition
            unitOfMeasure:
              type: string
              description: Name of a service test specification
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueType:
              type: string
              description: >-
                A kind of value that the Metric value can take on, such as numeric, text, and so
                forth
            thresholdRule:
              type: array
              description: The rule(s) associated with the measure threshold
              items:
                $ref: '#/components/schemas/MetricDefMeasureThresholdRule'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          TestMeasureDefinition: '#/components/schemas/TestMeasureDefinition_FVO'
    TestMeasureDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            A TestMeasureDefinition specifies a measure of a specific aspect of a product, service,
            or resource test, such as lost packets or connectivity status
          properties:
            captureFrequency:
              type: string
              description: >-
                The frequency of capture for the metric. Note: This may be replaced by a set of
                entities similar to the Performance Monitoring
            captureMethod:
              type: string
              description: >-
                The method used to capture the Metric. Note: This may be replaced by a set of
                entities similar to the Performance Monitoring
            capturePeriod:
              $ref: '#/components/schemas/Duration'
            metricDescription:
              type: string
              description: Brief description of the metric
            metricHref:
              type: string
              description: Hyperlink to access a metric for detail information
            metricName:
              type: string
              description: The name of a metric that in the test measure
            name:
              type: string
              description: The name of the TestMeasureDefinition
            unitOfMeasure:
              type: string
              description: Name of a service test specification
            valueType:
              type: string
              description: >-
                A kind of value that the Metric value can take on, such as numeric, text, and so
                forth
            thresholdRule:
              type: array
              description: The rule(s) associated with the measure threshold
              items:
                $ref: '#/components/schemas/MetricDefMeasureThresholdRule_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TestMeasureDefinition: '#/components/schemas/TestMeasureDefinition_MVO'
    TestMeasure_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A TestMeasure specifies a measure of a specific aspect of a product, service, or
            resource test, such as lost packets or connectivity status
          properties:
            accuracy:
              type: number
              format: float
              description: The number of digits of accuracy captured for associated Metrics
            captureDateTime:
              type: string
              format: date-time
              description: The date and time that the metric was captured
            captureMethod:
              type: string
              description: >-
                The method used to capture the Metrics (This may be replaced by a set of entities
                similar to the Performance Monitoring Ref)
            metricDescription:
              type: string
              description: Brief description of the metric
            metricHref:
              type: string
              description: Hyperlink to access a metric for detail information
            metricName:
              type: string
              description: The name of the metric
            ruleViolation:
              type: array
              description: A list of rules that were violated in this test measure
              items:
                $ref: '#/components/schemas/MeasureThresholdRuleViolation'
            unitOfMeasure:
              type: string
              description: >-
                The unit of measure for the metric values, such as meters, cubic yards, kilograms
                [ISO 1000].
            value:
              $ref: '#/components/schemas/Characteristic_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TestMeasure: '#/components/schemas/TestMeasure_FVO'
    TestMeasure_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_MVO'
        - type: object
          description: >-
            A TestMeasure specifies a measure of a specific aspect of a product, service, or
            resource test, such as lost packets or connectivity status
          properties:
            accuracy:
              type: number
              format: float
              description: The number of digits of accuracy captured for associated Metrics
            captureDateTime:
              type: string
              format: date-time
              description: The date and time that the metric was captured
            captureMethod:
              type: string
              description: >-
                The method used to capture the Metrics (This may be replaced by a set of entities
                similar to the Performance Monitoring Ref)
            metricDescription:
              type: string
              description: Brief description of the metric
            metricHref:
              type: string
              description: Hyperlink to access a metric for detail information
            metricName:
              type: string
              description: The name of the metric
            ruleViolation:
              type: array
              description: A list of rules that were violated in this test measure
              items:
                $ref: '#/components/schemas/MeasureThresholdRuleViolation_MVO'
            unitOfMeasure:
              type: string
              description: >-
                The unit of measure for the metric values, such as meters, cubic yards, kilograms
                [ISO 1000].
            value:
              $ref: '#/components/schemas/Characteristic_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TestMeasure: '#/components/schemas/TestMeasure_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    ServiceTest_FVO:
      description: The ServiceTest to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTest_FVO'
          examples:
            CreateServiceTest:
              $ref: '#/components/examples/CreateServiceTest_request'
      required: true
    ServiceTest_MVO:
      description: The ServiceTest to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTest_MVO'
          examples:
            ServiceTest_partialupdate_example01:
              $ref: '#/components/examples/ServiceTest_partialupdate_example01_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceTest_MVO'
          examples:
            ServiceTest_partialupdate_example02:
              $ref: '#/components/examples/ServiceTest_partialupdate_example02_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ServiceTest_partialupdate_example03:
              $ref: '#/components/examples/ServiceTest_partialupdate_example03_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ServiceTest_partialupdate_example04:
              $ref: '#/components/examples/ServiceTest_partialupdate_example04_request'
      required: true
    ServiceTestCreateEvent:
      description: ServiceTest create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    ServiceTestAttributeValueChangeEvent:
      description: ServiceTest attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    ServiceTestStateChangeEvent:
      description: ServiceTest stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestStateChangeEvent'
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
      required: true
    ServiceTestDeleteEvent:
      description: ServiceTest delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    ServiceTestSpecification_FVO:
      description: The ServiceTestSpecification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecification_FVO'
          examples:
            CreateServiceTestSpecification:
              $ref: '#/components/examples/CreateServiceTestSpecification_request'
      required: true
    ServiceTestSpecification_MVO:
      description: The ServiceTestSpecification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecification_MVO'
          examples:
            ServiceTestSpecification_partialupdate_example01:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example01_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecification_MVO'
          examples:
            ServiceTestSpecification_partialupdate_example_02:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example_02_request'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ServiceTestSpecification_partialupdate_example03:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example03_request'
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            ServiceTestSpecification_partialupdate_example04:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example04_request'
      required: true
    ServiceTestSpecificationCreateEvent:
      description: ServiceTestSpecification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecificationCreateEvent'
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
      required: true
    ServiceTestSpecificationAttributeValueChangeEvent:
      description: ServiceTestSpecification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecificationAttributeValueChangeEvent'
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
      required: true
    ServiceTestSpecificationDeleteEvent:
      description: ServiceTestSpecification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecificationDeleteEvent'
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200ServiceTestArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceTest'
          examples:
            ServiceTest_list_example:
              $ref: '#/components/examples/ServiceTest_list_example_response'
    200ServiceTest_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTest'
          examples:
            ServiceTest_retrieve_example:
              $ref: '#/components/examples/ServiceTest_retrieve_example_response'
    200ServiceTest_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTest'
          examples:
            ServiceTest_partialupdate_example01:
              $ref: '#/components/examples/ServiceTest_partialupdate_example01_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceTest'
          examples:
            ServiceTest_partialupdate_example02:
              $ref: '#/components/examples/ServiceTest_partialupdate_example02_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceTest'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceTest'
              - type: string
                nullable: true
          examples:
            ServiceTest_partialupdate_example03:
              $ref: '#/components/examples/ServiceTest_partialupdate_example03_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceTest'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceTest'
              - type: string
                nullable: true
          examples:
            ServiceTest_partialupdate_example04:
              $ref: '#/components/examples/ServiceTest_partialupdate_example04_response'
    201ServiceTest:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTest'
          examples:
            CreateServiceTest:
              $ref: '#/components/examples/CreateServiceTest_response'
    200ServiceTestSpecificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceTestSpecification'
          examples:
            ServiceTestSpecification_list_example:
              $ref: '#/components/examples/ServiceTestSpecification_list_example_response'
    200ServiceTestSpecification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecification'
          examples:
            ServiceTestSpecification_retrieve_example:
              $ref: '#/components/examples/ServiceTestSpecification_retrieve_example_response'
    200ServiceTestSpecification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecification'
          examples:
            ServiceTestSpecification_partialupdate_example01:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example01_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecification'
          examples:
            ServiceTestSpecification_partialupdate_example_02:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example_02_response'
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceTestSpecification'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceTestSpecification'
              - type: string
                nullable: true
          examples:
            ServiceTestSpecification_partialupdate_example03:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example03_response'
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ServiceTestSpecification'
              - type: array
                items:
                  $ref: '#/components/schemas/ServiceTestSpecification'
              - type: string
                nullable: true
          examples:
            ServiceTestSpecification_partialupdate_example04:
              $ref: '#/components/examples/ServiceTestSpecification_partialupdate_example04_response'
    201ServiceTestSpecification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceTestSpecification'
          examples:
            CreateServiceTestSpecification:
              $ref: '#/components/examples/CreateServiceTestSpecification_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    ServiceTest_list_example_response:
      value:
        - href: 'https://host:port/serviceTestManagement/v5/serviceTest/89757'
          id: '89757'
          '@type': ServiceTest
          description: This service test is a simple one
          endDateTime: '2016-03-02T23:00:00.00Z'
          mode: PROACTIVE
          startDateTime: '2016-03-02T00:00:00.00Z'
          state: completed
          validFor:
            '@type': TimePeriod
            startDateTime: '2016-03-02T00:00:00.00Z'
            endDateTime: '2016-03-02T20:00:00.00Z'
          relatedParty:
            - role: member
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '9866'
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
                name: Sandy Smith
                '@type': PartyRef
                '@referredType': Individual
          relatedService:
            '@type': ServiceRef
            href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
            id: '21'
            name: gameService
          testSpecification:
            '@type': ServiceTestSpecificationRef
            href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
            id: '22'
            '@referredType': PerformanceTestSpecification
      description: Here's an example of a request for retrieving service tests.
    ServiceTest_retrieve_example_response:
      value:
        href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTest/89757'
        id: '89757'
        name: serviceTestGame
        description: This service test is a simple one
        endDateTime: '2016-03-02T23:00:00.000Z'
        mode: PROACTIVE
        startDateTime: '2016-03-02T00:00:00.000Z'
        state: completed
        validFor:
          startDateTime: '2016-03-02T00:00:00.000Z'
          endDateTime: '2016-03-02T00:00:00.000Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedService:
          href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
          id: '21'
          name: gameService
          '@referredType': Service
          '@type': ServiceRef
        testSpecification:
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
          id: '22'
          '@referredType': ServiceTestSpecification
          '@type': ServiceTestSpecificationRef
        characteristic:
          - id: '1'
            '@type': NumberCharacteristic
            name: something significant
            valueType: Number
            value: 3
          - id: '2'
            '@type': BooleanCharacteristic
            name: restart
            valueType: Boolean
            value: true
        testMeasure:
          - '@type': TestMeasure
            accuracy: 0.0001
            captureDateTime: '2016-03-02T11:12:00.000Z'
            captureMethod: automatic capture by instrument
            metricDescription: This is the flow speed in a service
            metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
            metricName: Flow speed
            unitOfMeasure: A second
            value:
              id: '3'
              '@type': Value
              name: Flow speed
              valueType: number
              value: 3000
            ruleViolation:
              - '@type': MeasureThresholdRuleViolation
                conformanceTargetUpper: '2500'
                conformanceComparatorUpper: 'greater than '
                description: This speed is greater than the target upper
                name: tooMuchTraffic
                numberOfAllowedCrossing: 0
                thresholdRuleSeverity: '1'
                appliedConsequence:
                  - '@type': AppliedConsequence
                    appliedAction: sendWarning
                    description: send a warning to the system
                    name: sendWarning
                    repeatAction: false
                  - '@type': AppliedConsequence
                    appliedAction: generateReport
                    description: generate a warning report
                    name: generateReport
                    repeatAction: false
        '@type': ServiceTest
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Service/ServiceTest.schema.json'
        '@baseType': ServiceTest
      description: Here's an example of a request for retrieving a specific service test.
    ServiceTestSpecification_list_example_response:
      value:
        - description: a service description
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/12'
          id: '12'
          '@type': ServiceTestSpecification
          version: '1.0'
          name: monkey test
          lifecycleStatus: active
          validFor:
            endDateTime: '2016-03-02T24:00:00.00Z'
            startDateTime: '2016-03-02T00:00:00.00Z'
          specCharacteristic:
            - '@type': CharacteristicSpecification
              name: restart
              description: This characteristic describes if restart of the service is required
              valueType: Boolean
              configurable: true
              validFor:
                startDateTime: '2016-03-02T00:00:00.00Z'
                endDateTime: '2016-03-02T23:00:00.00Z'
              '@valueSchemaLocation': ''
              minCardinality: 0
              maxCardinality: 1
              isUnique: true
              regex: ''
              extensible: false
              characteristicValueSpecification:
                - '@type': BooleanCharacteristicValueSpecification
                  valueType: Boolean
                  isDefault: true
                  value: 'false'
                  validFor:
                    startDateTime: '2016-03-02T00:00:00.00Z'
                    endDateTime: '2016-03-02T23:00:00.00Z'
                - '@type': BooleanCharacteristicValueSpecification
                  valueType: Boolean
                  isDefault: false
                  value: 'true'
                  validFor:
                    startDateTime: '2016-03-02T00:00:00.00Z'
                    endDateTime: '2016-03-02T23:00:00.00Z'
          testMeasureDefinition:
            - '@type': TestMeasureDefinition
              captureFrequency: once
              captureMethod: automatic capture by instrument
              metricDescription: This is the flow speed in a service
              metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
              metricName: Flow speed
              name: Definition of Flow speed
              unitOfMeasure: A second
              valueType: bits
              capturePeriod:
                amount: 5
                units: seconds
              thresholdRule:
                - '@type': MetricDefMeasureThresholdRule
                  conformanceTargetUpper: '2500'
                  conformanceComparatorUpper: 'greater than '
                  description: This speed is greater than the target upper
                  name: tooMuchTraffic
                  numberOfAllowedCrossing: 0
                  thresholdRuleSeverity: '1'
                  tolerancePeriod:
                    amount: 15
                    units: minutes
                  consequence:
                    - '@type': MetricDefMeasureConsequence
                      prescribeAction: sendWarning
                      description: send a warning to the system
                      name: sendWarning
                      repeatAction: false
                      validFor:
                        '@type': TimePeriod
                        endDateTime: '2017-03-01T00:00:00.00Z'
                        startDateTime: '2016-03-01T00:00:00.00Z'
                    - '@type': MetricDefMeasureConsequence
                      prescribeAction: generateReport
                      description: 'generate a waring report '
                      name: generateReport
                      repeatAction: false
                      validFor:
                        '@type': TimePeriod
                        endDateTime: '2017-03-01T00:00:00.00Z'
                        startDateTime: '2016-03-01T00:00:00.00Z'
          relatedParty:
            - role: member
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '9866'
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
                name: Sandy Smith
                '@type': PartyRef
                '@referredType': Individual
          ServiceTestSpecRelationship:
            '@type': ServiceTestSpecRelationship
            id: '{Service id}'
            relationshipType: dependency
          relatedServiceSpecification:
            - '@type': RelatedServiceSpecification
              href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
              id: '31'
              '@referredType': vCPEServiceSpecification
      description: Here's an example of a request for retrieving multiple service test specifications.
    ServiceTestSpecification_retrieve_example_response:
      value:
        description: a service description
        href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/12'
        id: '12'
        version: '1.1'
        lifecycleStatus: Active
        name: monkey test
        validFor:
          '@type': TimePeriod
          endDateTime: '2016-03-02T24:00:00.000Z'
          startDateTime: '2016-03-02T00:00:00.000Z'
        testMeasureDefinition:
          - '@type': TestMeasureDefinition
            captureFrequency: once
            captureMethod: automatic capture by instrument
            metricDescription: This is the flow speed in a service
            metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
            metricName: Flow speed
            name: Definition of Flow speed
            unitOfMeasure: A second
            valueType: bits
            capturePeriod:
              amount: 5
              units: seconds
            thresholdRule:
              - '@type': MetricDefMeasureThresholdRule
                conformanceTargetUpper: '2500'
                conformanceComparatorUpper: 'greater than '
                description: This speed is greater than the target upper
                name: tooMuchTraffic
                numberOfAllowedCrossing: 0
                thresholdRuleSeverity: '1'
                tolerancePeriod:
                  amount: 15
                  units: minutes
                consequence:
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: sendWarning
                    description: send a warning to the system
                    name: sendWarning
                    repeatAction: false
                    validFor:
                      endDateTime: '2017-03-01T00:00:00.000Z'
                      startDateTime: '2016-03-01T00:00:00.000Z'
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: generateReport
                    description: 'generate a waring report '
                    name: generateReport
                    repeatAction: false
                    validFor:
                      endDateTime: '2017-03-01T00:00:00.000Z'
                      startDateTime: '2016-03-01T00:00:00.000Z'
            validFor:
              '@type': TimePeriod
              endDateTime: '2016-03-02T24:00:00.000Z'
              startDateTime: '2016-03-02T00:00:00.000Z'
        specCharacteristic:
          - name: restart
            description: This characteristic describes if restart of the service is required
            valueType: Boolean
            '@type': CharacteristicSpecification
            configurable: true
            validFor:
              '@type': TimePeriod
              startDateTime: '2016-03-02T24:00:00.000Z'
              endDateTime: '2016-03-02T00:00:00.000Z'
            '@valueSchemaLocation': ''
            minCardinality: 0
            maxCardinality: 1
            isUnique: true
            regex: ''
            extensible: false
            characteristicValueSpecification:
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: false
                value: 'true'
                validFor:
                  startDateTime: '2016-03-02T24:00:00.000Z'
                  endDateTime: '2016-03-02T00:00:00.000Z'
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: true
                value: 'false'
                validFor:
                  startDateTime: '2016-03-02T24:00:00.000Z'
                  endDateTime: '2016-03-02T00:00:00.000Z'
        relatedServiceSpecification:
          - href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
            id: '31'
            '@referredType': vCPEServiceSpecification
            '@type': ServiceRefSpecification
        '@baseType': ServiceTestSpecification
        '@type': ServiceTestSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/service/PerformanceTestSpecification.schema.json'
      description: Here's an example of a request for retrieving a specific service test specification.
    CreateServiceTest_request:
      value:
        '@type': ServiceTest
        description: This service test is a simple one
        name: PerformanceTest
        endDateTime: '2016-03-02T24:00:00.00Z'
        mode: PROACTIVE
        startDateTime: '2016-03-02T00:00:00.00Z'
        state: inProgress
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedService:
          '@type': ServiceRef
          href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
          id: '21'
          name: gameService
        testSpecification:
          '@type': ServiceTestSpecificationRef
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
          id: '22'
          '@referredType': PerformanceTestSpecification
      description: >-
        POST ServiceTest request example - only a subset of service test attributes are used in this
        example
    CreateServiceTest_response:
      value:
        href: 'https://host:port/serviceTestManagement/v5/serviceTest/89757'
        id: '89757'
        '@type': ServiceTest
        description: This service test is a simple one
        endDateTime: '2016-03-02T23:00:00.00Z'
        mode: PROACTIVE
        startDateTime: '2016-03-02T00:00:00.00Z'
        state: inProgress
        validFor:
          startDateTime: '2016-03-02T00:00:00.00Z'
          endDateTime: '2016-03-02T20:00:00.00Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedService:
          '@type': ServiceRef
          href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
          id: '21'
          name: gameService
        testSpecification:
          '@type': ServiceTestSpecificationRef
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
          id: '22'
          '@referredType': PerformanceTestSpecification
      description: POST ServiceTest response description.
    CreateServiceTestSpecification_request:
      value:
        '@type': ServiceTestSpecification
        description: a service description
        name: monkey test
        version: '1.0'
        lifecycleStatus: active
        validFor:
          endDateTime: '2016-03-02T24:00:00.00Z'
          startDateTime: '2016-03-02T00:00:00.00Z'
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: restart
            description: This characteristic describes if restart of the service is required
            valueType: Boolean
            configurable: true
            validFor:
              startDateTime: '2016-03-02T00:00:00.00Z'
              endDateTime: '2016-03-02T20:00:00.00Z'
            '@valueSchemaLocation': ''
            minCardinality: 0
            maxCardinality: 1
            isUnique: true
            regex: ''
            extensible: false
            characteristicValueSpecification:
              - '@type': BooleanCharacteristicValueSpecification
                valueType: Boolean
                isDefault: false
                value: 'false'
                validFor:
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T23:00:00.00Z'
              - '@type': BooleanCharacteristicValueSpecification
                valueType: Boolean
                isDefault: true
                value: 'true'
                validFor:
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T23:00:00.00Z'
        testMeasureDefinition:
          - '@type': TestMeasureDefinition
            captureFrequency: once
            captureMethod: automatic capture by instrument
            metricDescription: This is the flow speed in a service
            metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
            metricName: Flow speed
            name: Definition of Flow speed
            unitOfMeasure: A second
            valueType: bits
            capturePeriod:
              amount: 5
              units: seconds
            thresholdRule:
              - '@type': MetricDefMeasureThresholdRule
                conformanceTargetUpper: '2500'
                conformanceComparatorUpper: 'greater than '
                description: This speed is greater than the target upper
                name: tooMuchTraffic
                numberOfAllowedCrossing: 0
                thresholdRuleSeverity: '1'
                tolerancePeriod:
                  amount: 15
                  units: minutes
                consequence:
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: sendWarning
                    description: send a warning to the system
                    name: sendWarning
                    repeatAction: false
                    validFor:
                      endDateTime: '2017-03-01T00:00:00.00Z'
                      startDateTime: '2016-03-01T00:00:00.00Z'
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: generateReport
                    description: 'generate a waring report '
                    name: generateReport
                    repeatAction: false
                    validFor:
                      endDateTime: '2017-03-01T00:00:00.00Z'
                      startDateTime: '2016-03-01T00:00:00.00Z'
            validFor:
              '@type': TimePeriod
              endDateTime: '2016-03-02T24:00:00.00Z'
              startDateTime: '2016-03-02T00:00:00.00Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        ServiceTestSpecRelationship:
          '@type': ServiceTestSpecRelationship
          id: '{Service id}'
          relationshipType: dependency
        relatedServiceSpecification:
          - '@type': ServiceSpecificationRef
            href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
            id: '31'
            '@referredType': vCPEServiceSpecification
      description: >-
        POST ServiceTestSpecification request example - only a subset of service test specification
        attributes are used in this example
    CreateServiceTestSpecification_response:
      value:
        description: a service description
        href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/12'
        id: '12'
        version: '1.0'
        name: monkey test
        lifecycleStatus: active
        validFor:
          '@type': TimePeriod
          endDateTime: '2016-03-02T23:00:00.00Z'
          startDateTime: '2016-03-02T00:00:00.00Z'
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: restart
            description: This characteristic describes if restart of the service is required
            valueType: Boolean
            configurable: true
            validFor:
              startDateTime: '2016-03-02T00:00:00.00Z'
              endDateTime: '2016-03-02T23:00:00.00Z'
            '@valueSchemaLocation': ''
            minCardinality: 0
            maxCardinality: 1
            isUnique: true
            regex: ''
            extensible: false
            characteristicValueSpecification:
              - '@type': BooleanCharacteristicValueSpecification
                valueType: Boolean
                isDefault: true
                value: 'false'
                validFor:
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T23:00:00.00Z'
              - '@type': BooleanCharacteristicValueSpecification
                valueType: Boolean
                isDefault: false
                value: 'true'
                validFor:
                  '@type:': TimePeriod
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T23:00:00.00Z'
        testMeasureDefinition:
          - '@type': TestMeasureDefinition
            captureFrequency: once
            captureMethod: automatic capture by instrument
            metricDescription: This is the flow speed in a service
            metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
            metricName: Flow speed
            name: Definition of Flow speed
            unitOfMeasure: A second
            valueType: bits
            capturePeriod:
              amount: 5
              units: seconds
            thresholdRule:
              - '@type': MetricDefMeasureThresholdRule
                conformanceTargetUpper: '2500'
                conformanceComparatorUpper: 'greater than '
                description: This speed is greater than the target upper
                name: tooMuchTraffic
                numberOfAllowedCrossing: 0
                thresholdRuleSeverity: '1'
                tolerancePeriod:
                  amount: 15
                  units: minutes
                consequence:
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: sendWarning
                    description: send a warning to the system
                    name: sendWarning
                    repeatAction: false
                    validFor:
                      endDateTime: '2017-03-01T00:00:00.00Z'
                      startDateTime: '2016-03-01T00:00:00.00Z'
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: generateReport
                    description: 'generate a waring report '
                    name: generateReport
                    repeatAction: false
                    validFor:
                      '@type': TimePeriod
                      endDateTime: '2017-03-01T00:00:00.00Z'
                      startDateTime: '2016-03-01T00:00:00.00Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        ServiceTestSpecRelationship:
          '@type': ServiceTestSpecRelationship
          id: '{Service id}'
          relationshipType: dependency
        relatedServiceSpecification:
          - href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
            id: '31'
            '@referredType': vCPEServiceSpecification
            '@type': RelatedServiceSpecification
        '@type': ServiceTestSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Service/ServiceTest.schema.json'
        '@baseType': ServiceTestSpecification
      description: POST ServiceTestSpecification response description.
    ServiceTest_partialupdate_example01_request:
      value:
        '@type': ServiceTest
        description: This service test is a simple one
      description: >-
        Here's an example of a request for patching a service test using application/json. In this
        example,  description is updated.
    ServiceTest_partialupdate_example01_response:
      value:
        href: 'https://host:port/serviceTestManagement/v5/serviceTest/89757'
        id: '89757'
        '@type': ServiceTest
        name: serviceTestGame
        description: This service test is a simple one
        endDateTime: '2016-03-02T24:00:00.00Z'
        mode: PROACTIVE
        startDateTime: '2016-03-02T00:00:00.00Z'
        state: completed
        validFor:
          startDateTime: '2016-03-02T00:00:00.00Z'
          endDateTime: '2016-03-02T24:00:00.00Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedService:
          href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
          id: '21'
          name: gameService
          '@type': ServiceRef
        testSpecification:
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
          id: '22'
          '@referredType': PerformanceTestSpecification
          '@type': ServiceTestSpecificationRef
      description: Response message
    ServiceTest_partialupdate_example02_request:
      value:
        '@type': ServiceTest
        description: This service test is a simple one
      description: >-
        Here's an example of a request for patching a service test using merge-patch+json. In this
        example,  description is updated.
    ServiceTest_partialupdate_example02_response:
      value:
        href: 'https://host:port/serviceTestManagement/v5/serviceTest/89757'
        id: '89757'
        '@type': ServiceTest
        name: serviceTestGame
        description: This service test is a simple one
        endDateTime: '2016-03-02T24:00:00.00Z'
        mode: PROACTIVE
        startDateTime: '2016-03-02T00:00:00.00Z'
        state: completed
        validFor:
          startDateTime: '2016-03-02T00:00:00.00Z'
          endDateTime: '2016-03-02T24:00:00.00Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedService:
          href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
          id: '21'
          name: gameService
          '@type': ServiceRef
        testSpecification:
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
          id: '22'
          '@referredType': PerformanceTestSpecification
          '@type': ServiceTestSpecificationRef
      description: Response message
    ServiceTest_partialupdate_example03_request:
      value:
        - op: replace
          path: /description
          value: This service test is a simple one
      description: >-
        Here's an example of a request for patching a service test using json-patch+json. In this
        example, description is updated.
    ServiceTest_partialupdate_example03_response:
      value:
        href: 'https://host:port/serviceTestManagement/v5/serviceTest/89757'
        id: '89757'
        '@type': ServiceTest
        name: serviceTestGame
        description: This service test is a simple one
        endDateTime: '2016-03-02T24:00:00.00Z'
        mode: PROACTIVE
        startDateTime: '2016-03-02T00:00:00.00Z'
        state: completed
        validFor:
          startDateTime: '2016-03-02T00:00:00.00Z'
          endDateTime: '2016-03-02T24:00:00.00Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedService:
          href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
          id: '21'
          name: gameService
          '@type': ServiceRef
        testSpecification:
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
          id: '22'
          '@referredType': PerformanceTestSpecification
          '@type': ServiceTestSpecificationRef
      description: Response message
    ServiceTest_partialupdate_example04_request:
      value:
        - op: replace
          path: /relatedParty/role?relatedParty.role=member
          value: employee
      description: >-
        Here's an example of a request for patching a service test this time using
        json-patch-query+json. In this example, the RelatedParty role attribute is updated.
    ServiceTest_partialupdate_example04_response:
      value:
        href: 'https://host:port/serviceTestManagement/v5/serviceTest/89757'
        id: '89757'
        '@type': ServiceTest
        name: serviceTestGame
        description: This service test is a simple one
        endDateTime: '2016-03-02T24:00:00.00Z'
        mode: PROACTIVE
        startDateTime: '2016-03-02T00:00:00.00Z'
        state: completed
        validFor:
          startDateTime: '2016-03-02T00:00:00.00Z'
          endDateTime: '2016-03-02T24:00:00.00Z'
        relatedParty:
          - role: employee
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedService:
          href: 'https://mycsp.com:8080/tmf-api/serviceManagement/v5/service/21'
          id: '21'
          name: gameService
          '@type': ServiceRef
        testSpecification:
          href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/22'
          id: '22'
          '@referredType': PerformanceTestSpecification
          '@type': ServiceTestSpecificationRef
      description: Response message
    ServiceTestSpecification_partialupdate_example01_request:
      value:
        '@type': ServiceTestSpecification
        version: '1.1'
      description: >-
        Here's an example of a request for patching a service test specification using
        application/json. In this example, the version is updated.
    ServiceTestSpecification_partialupdate_example01_response:
      value:
        '@type:': ServiceTestSpecification
        description: a service description
        href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/12'
        id: '12'
        version: '1.1'
        name: new name
        state: completed
        lifecycleStatus: Active
        validFor:
          '@type:': TimePeriod
          endDateTime: '2016-04-02T24:00:00.00Z'
          startDateTime: '2016-03-02T00:00:00.00Z'
        specCharacteristic:
          - name: restart
            description: This characteristic describes if restart of the service is required
            '@type': CharacteristicSpecification
            valueType: Boolean
            configurable: true
            validFor:
              '@type': TimePeriod
              startDateTime: '2016-03-02T00:00:00.00Z'
              endDateTime: '2016-03-02T24:00:00.00Z'
            '@valueSchemaLocation': ''
            minCardinality: 0
            maxCardinality: 1
            isUnique: true
            regex: ''
            extensible: false
            characteristicValueSpecification:
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: false
                value: ''
                validFor:
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T24:00:00.00Z'
        relatedServiceSpecification:
          - href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
            id: '31'
            '@referredType': vCPEServiceSpecification
            '@type': ServiceRefSpecification
        '@type': ServiceTest
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Service/ServiceTest.schema.json'
        '@baseType': ServiceTest
      description: Response message
    ServiceTestSpecification_partialupdate_example_02_request:
      value:
        '@type': ServiceTestSpecification
        version: '1.1'
      description: >-
        Here's an example of a request for patching a service test specification using
        merge-patch+json. In this example, the version is updated.
    ServiceTestSpecification_partialupdate_example_02_response:
      value:
        '@type:': ServiceTestSpecification
        description: a service description
        href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/12'
        id: '12'
        version: '1.1'
        name: new name
        state: completed
        lifecycleStatus: Active
        validFor:
          '@type:': TimePeriod
          endDateTime: '2016-04-02T24:00:00.00Z'
          startDateTime: '2016-03-02T00:00:00.00Z'
        specCharacteristic:
          - name: restart
            description: This characteristic describes if restart of the service is required
            '@type': CharacteristicSpecification
            valueType: Boolean
            configurable: true
            validFor:
              '@type': TimePeriod
              startDateTime: '2016-03-02T00:00:00.00Z'
              endDateTime: '2016-03-02T24:00:00.00Z'
            '@valueSchemaLocation': ''
            minCardinality: 0
            maxCardinality: 1
            isUnique: true
            regex: ''
            extensible: false
            characteristicValueSpecification:
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: false
                value: ''
                validFor:
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T24:00:00.00Z'
        relatedServiceSpecification:
          - href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
            id: '31'
            '@referredType': vCPEServiceSpecification
            '@type': ServiceRefSpecification
        '@type': ServiceTest
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Service/ServiceTest.schema.json'
        '@baseType': ServiceTest
      description: Response message
    ServiceTestSpecification_partialupdate_example03_request:
      value:
        - op: replace
          path: /version
          value: '1.1'
      description: >-
        Here's an example of a request for patching a service test specification using
        json-patch+json. In this example, the version is updated.
    ServiceTestSpecification_partialupdate_example03_response:
      value:
        description: a service description
        href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/12'
        id: '12'
        version: '1.1'
        name: new name
        state: completed
        lifecycleStatus: Active
        validFor:
          '@type': TimePeriod
          endDateTime: '2016-03-02T24:00:00.00Z'
          startDateTime: '2016-03-02T00:00:00.00Z'
        specCharacteristic:
          - name: restart
            description: This characteristic describes if restart of the service is required
            valueType: Boolean
            '@type': CharacteristicSpecification
            configurable: true
            validFor:
              '@type:': TimePeriod
              startDateTime: '2016-03-02T00:00:00.00Z'
              endDateTime: '2016-03-02T24:00:00.00Z'
            '@valueSchemaLocation': ''
            minCardinality: 0
            maxCardinality: 1
            isUnique: true
            regex: ''
            extensible: false
            characteristicValueSpecification:
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: true
                value: 'false'
                validFor:
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T24:00:00.00Z'
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: false
                value: 'true'
                validFor:
                  startDateTime: '2016-03-02T00:00:00.00Z'
                  endDateTime: '2016-03-02T24:00:00.00Z'
        relatedParty:
          - role: member
            '@type': RelatedPartyRefOrPartyRoleRef
            partyOrPartyRole:
              id: '9866'
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
              name: Sandy Smith
              '@type': PartyRef
              '@referredType': Individual
        relatedServiceSpecification:
          - href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
            id: '31'
            '@referredType': vCPEServiceSpecification
            '@type': RelatedServiceSpecification
        '@type': ServiceTest
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Service/ServiceTest.schema.json'
        '@baseType': ServiceTest
      description: Response message
    ServiceTestSpecification_partialupdate_example04_request:
      value:
        - op: replace
          path: /testMeasureDefinition/capturePeriod/amount?testMeasureDefinition.metricName=Flow speed
          value: 10
      description: >-
        Here's an example of a request for patching a service test specification using
        json-patch-query+json. In this example, the capture period amount for the Test Measure
        Definition is updated.
    ServiceTestSpecification_partialupdate_example04_response:
      value:
        description: a service description
        href: 'https://mycsp.com:8080/tmf-api/serviceTestManagement/v5/serviceTestSpecification/12'
        id: '12'
        version: '1.1'
        lifecycleStatus: Active
        name: monkey test
        validFor:
          '@type': TimePeriod
          endDateTime: '2016-03-02T24:00:00.000Z'
          startDateTime: '2016-03-02T00:00:00.000Z'
        testMeasureDefinition:
          - '@type': TestMeasureDefinition
            captureFrequency: once
            captureMethod: automatic capture by instrument
            metricDescription: This is the flow speed in a service
            metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
            metricName: Flow speed
            name: Definition of Flow speed
            unitOfMeasure: A second
            valueType: bits
            capturePeriod:
              amount: 10
              units: seconds
            thresholdRule:
              - '@type': MetricDefMeasureThresholdRule
                conformanceTargetUpper: '2500'
                conformanceComparatorUpper: 'greater than '
                description: This speed is greater than the target upper
                name: tooMuchTraffic
                numberOfAllowedCrossing: 0
                thresholdRuleSeverity: '1'
                tolerancePeriod:
                  amount: 15
                  units: minutes
                consequence:
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: sendWarning
                    description: send a warning to the system
                    name: sendWarning
                    repeatAction: false
                    validFor:
                      endDateTime: '2017-03-01T00:00:00.000Z'
                      startDateTime: '2016-03-01T00:00:00.000Z'
                  - '@type': MetricDefMeasureConsequence
                    prescribeAction: generateReport
                    description: 'generate a waring report '
                    name: generateReport
                    repeatAction: false
                    validFor:
                      endDateTime: '2017-03-01T00:00:00.000Z'
                      startDateTime: '2016-03-01T00:00:00.000Z'
            validFor:
              '@type': TimePeriod
              endDateTime: '2016-03-02T24:00:00.000Z'
              startDateTime: '2016-03-02T00:00:00.000Z'
        specCharacteristic:
          - name: restart
            description: This characteristic describes if restart of the service is required
            valueType: Boolean
            '@type': CharacteristicSpecification
            configurable: true
            validFor:
              startDateTime: '2016-03-02T24:00:00.000Z'
              endDateTime: '2016-03-02T00:00:00.000Z'
            '@valueSchemaLocation': ''
            minCardinality: 0
            maxCardinality: 1
            isUnique: true
            regex: ''
            extensible: false
            characteristicValueSpecification:
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: false
                value: 'true'
                validFor:
                  '@type': TimePeriod
                  startDateTime: '2016-03-02T24:00:00.000Z'
                  endDateTime: '2016-03-02T00:00:00.000Z'
              - valueType: Boolean
                '@type': BooleanCharacteristicValueSpecification
                isDefault: true
                value: 'false'
                validFor:
                  startDateTime: '2016-03-02T24:00:00.000Z'
                  endDateTime: '2016-03-02T00:00:00.000Z'
        relatedServiceSpecification:
          - href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
            id: '31'
            '@referredType': vCPEServiceSpecification
            '@type': ServiceRefSpecification
        '@baseType': ServiceTestSpecification
        '@type': ServiceTestSpecification
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/service/PerformanceTestSpecification.schema.json'
      description: Response message
    Create_request:
      value:
        correlationId: ebd4d46a-e5a8
        description: ServiceTestCreateEvent illustration
        domain: Commercial
        eventId: 4e82-a3cb-de394266dbe5
        eventTime: '2022-08-25T12:21:36.704Z'
        eventType: ServiceTestCreateEvent
        priority: '1'
        timeOcurred: '2022-08-25T12:21:32.568Z'
        title: ServiceTestCreateEvent
        event:
          serviceTest:
            description: a service description
            href: 'http://servername/serviceTest/12'
            id: '12'
            version: '1.0'
            lifecycleStatus: Active
            name: monkey test
            '@baseType': ServiceTest
            '@type': ServiceTest
            '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/service/ServiceTest.schema.json'
            validFor:
              endDateTime: '2016-03-02T24:00:00.00Z'
              startDateTime: '2016-03-02T00:00:00.00Z'
            testMeasure:
              - '@type': TestMeasure
                accuracy: 0.0001
                captureDateTime: '2016-03-02T11:12:00.000Z'
                captureMethod: automatic capture by instrument
                metricDescription: This is the flow speed in a service
                metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
                metricName: Flow speed
                unitOfMeasure: A second
                value:
                  id: '3'
                  '@type': Value
                  name: Flow speed
                  valueType: number
                  value: 3000
                ruleViolation:
                  - '@type': MeasureThresholdRuleViolation
                    conformanceTargetUpper: '2500'
                    conformanceComparatorUpper: 'greater than '
                    description: This speed is greater than the target upper
                    name: tooMuchTraffic
                    numberOfAllowedCrossing: 0
                    thresholdRuleSeverity: '1'
                    appliedConsequence:
                      - '@type': AppliedConsequence
                        appliedAction: sendWarning
                        description: send a warning to the system
                        name: sendWarning
                        repeatAction: false
                      - '@type': AppliedConsequence
                        appliedAction: generateReport
                        description: generate a warning report
                        name: generateReport
                        repeatAction: false
            specCharacteristic:
              - name: restart
                description: This characteristic describes if restart of the service is required
                valueType: Boolean
                '@type': CharacteristicSpecification
                configurable: true
                validFor:
                  startDateTime: '2016-03-02T24:00:00.00Z'
                  endDateTime: '2016-03-02T00:00:00.00Z'
                '@valueSchemaLocation': ''
                minCardinality: 0
                maxCardinality: 1
                isUnique: true
                regex: ''
                extensible: false
                characteristicValueSpecification:
                  - '@type': BooleanCharacteristicValueSpecification
                    valueType: Boolean
                    isDefault: false
                    value: 'true'
                    validFor:
                      startDateTime: '2016-03-02T24:00:00.00Z'
                      endDateTime: '2016-03-02T00:00:00.00Z'
                  - '@type': BooleanCharacteristicValueSpecification
                    valueType: Boolean
                    isDefault: true
                    value: 'false'
                    validFor:
                      startDateTime: '2016-03-02T24:00:00.00Z'
                      endDateTime: '2016-03-02T00:00:00.00Z'
            relatedServiceSpecification:
              - href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
                id: '31'
                '@referredType': vCPEServiceSpecification
                '@type': ServiceRef
        reportingSystem:
          id: '409'
          name: APP-675
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '4'
          name: APP-374
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceTestCreateEvent
      description: Message example for ServiceTestSpecificationCreateEvent event
    AttributeValueChange_request:
      value:
        correlationId: 76225ba6-e7ed
        description: ServiceTestAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 480d-b29d-6ff6b8e0f5bb
        eventTime: '2022-08-25T12:21:36.714Z'
        eventType: ServiceTestAttributeValueChangeEvent
        priority: '3'
        timeOcurred: '2022-08-25T12:21:36.133Z'
        title: ServiceTestAttributeValueChangeEvent
        event:
          serviceTest:
            description: a service description
            href: 'http://servername/serviceTest/12'
            id: '12'
            version: '1.0'
            name: monkey test
            lifecycleStatus: active
            '@type': ServiceTest
            specCharacteristic:
              - name: restart
                description: This characteristic describes if restart of the service is required
                valueType: Boolean
                '@type': CharacteristicSpecification
                configurable: true
                validFor:
                  startDateTime: '2016-03-02T24:00:00.00Z'
                  endDateTime: '2016-03-02T00:00:00.00Z'
                '@valueSchemaLocation': ''
                minCardinality: 0
                maxCardinality: 1
                isUnique: true
                regex: ''
                extensible: false
                characteristicValueSpecification:
                  - '@type': BooleanCharacteristicValueSpecification
                    valueType: Boolean
                    isDefault: false
                    value: 'true'
                    validFor:
                      startDateTime: '2016-03-02T24:00:00.00Z'
                      endDateTime: '2016-03-02T00:00:00.00Z'
                  - '@type': BooleanCharacteristicValueSpecification
                    valueType: Boolean
                    isDefault: true
                    value: 'false'
                    validFor:
                      startDateTime: '2016-03-02T24:00:00.00Z'
                      endDateTime: '2016-03-02T00:00:00.00Z'
          testMeasure:
            - '@type': TestMeasure
              accuracy: 0.0001
              captureDateTime: '2016-03-02T11:12:00.000Z'
              captureMethod: automatic capture by instrument
              metricDescription: This is the flow speed in a service
              metricHref: 'https://mycsp.com:8080/tmf-api/metricManagement/v5/metric/21'
              metricName: Flow speed
              unitOfMeasure: A second
              value:
                id: '3'
                '@type': Value
                name: Flow speed
                valueType: number
                value: 3000
              ruleViolation:
                - '@type': MeasureThresholdRuleViolation
                  conformanceTargetUpper: '2500'
                  conformanceComparatorUpper: 'greater than '
                  description: This speed is greater than the target upper
                  name: tooMuchTraffic
                  numberOfAllowedCrossing: 0
                  thresholdRuleSeverity: '1'
                  appliedConsequence:
                    - '@type': AppliedConsequence
                      appliedAction: sendWarning
                      description: send a warning to the system
                      name: sendWarning
                      repeatAction: false
                    - '@type': AppliedConsequence
                      appliedAction: generateReport
                      description: generate a warning report
                      name: generateReport
                      repeatAction: false
          relatedParty:
            - role: member
              '@type': RelatedPartyRefOrPartyRoleRef
              partyOrPartyRole:
                id: '9866'
                href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/Individual/9866'
                name: Sandy Smith
                '@type': PartyRef
                '@referredType': Individual
          ServiceTestSpecRelationship:
            '@type': ServiceTestSpecRelationship
            id: '{Service id}'
            relationshipType: dependency
          relatedServiceSpecification:
            - '@type': ServiceTestSpecRelationship
              href: 'https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/31'
              id: '31'
              '@referredType': vCPEServiceSpecification
        reportingSystem:
          id: '409'
          name: APP-675
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '4'
          name: APP-374
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/Service/ServiceTest.schema.json'
        '@type': ServiceTestAttributeValueChangeEvent
      description: Message example for ServiceTestSpecificationAttributeValueChangeEvent event
    StateChange_request:
      value:
        correlationId: 1a9aaff3-697a
        description: ServiceTestStateChangeEvent illustration
        domain: Commercial
        eventId: 4242-baa3-0beca5e429ad
        eventTime: '2022-08-25T12:21:36.678Z'
        eventType: ServiceTestStateChangeEvent
        priority: '2'
        timeOcurred: '2022-08-25T12:21:28.377Z'
        title: ServiceTestStateChangeEvent
        event:
          serviceTest:
            href: 'http://servername/serviceTest/89757'
            id: '89757'
            '@type': ServiceTest
            state: completed
        reportingSystem:
          id: '409'
          name: APP-675
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '4'
          name: APP-374
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceTestStateChangeEvent
      description: Message example for ServiceTestStateChangeEvent event with ?fields=state property only
    Delete_request:
      value:
        correlationId: d7243a09-1206
        description: ServiceTestDeleteEvent illustration
        domain: Commercial
        eventId: 490b-a75e-e388a74813af
        eventTime: '2022-08-25T12:21:36.724Z'
        eventType: ServiceTestDeleteEvent
        priority: '4'
        timeOcurred: '2022-08-25T12:21:36.363Z'
        title: ServiceTestDeleteEvent
        event:
          serviceTest:
            href: 'http://servername/serviceTest/89757'
            id: '89757'
            '@type': serviceTest
        reportingSystem:
          id: '409'
          name: APP-675
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '4'
          name: APP-374
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceTestDeleteEvent
      description: Message example for ServiceTestSpecificationDeleteEvent event
