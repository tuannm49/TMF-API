openapi: 3.0.1
info:
  title: 5G Slice Service Activation and Configuration
  description: |-
    ## TMF API Reference: TMF 924 - Service Activation and Configuration

     Version 4.0 

    Service Activation and Configuration API goal is to provide the ability to activate and configure Service. This API features Monitor pattern allowing to manage service configuration/activation asynchronous request (server side will provide monitor as POST/PATCH response) 

    ### TMF640 performs the following Operations on service resource :
    - Retrieve a service or a collection of services depending on filter criteria
    - Partial update of an service
    - Create a service (including default values and creation rules)
    - Delete a service (for administration purposes)
    - Manage notification of events

    ### Monitor Resource

    Monitor resource is used to track and log activation and/or configuration request

    ### TMF640 provides following operation on Monitor resource:

    - Retrieval of a monitor or a collection of monitor

    Copyright Â© TM Forum 2019; All Rights Reserved
  version: '1.0'
servers:
  - url: http://serverRoot/tmf-api/ServiceActivationAndConfiguration/v4
tags:
  - name: service
  - name: monitor
  - name: notification listeners (client side)
  - name: events subscription
paths:
  /service:
    get:
      tags:
        - service
      summary: List or find Service objects
      description: This operation list or find Service entities
      operationId: listService
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/5GSliceService'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - service
      summary: Creates a Service
      description: This operation creates a Service entity.
      operationId: createService
      requestBody:
        description: The Service to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/5GSliceService_Create'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5GSliceService'
        '202':
          description: Accepted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: service
  /service/{id}:
    get:
      tags:
        - service
      summary: Retrieves a Service by ID
      description: This operation retrieves a Service entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveService
      parameters:
        - name: id
          in: path
          description: Identifier of the Service
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5GSliceService'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - service
      summary: Deletes a Service
      description: This operation deletes a Service entity.
      operationId: deleteService
      parameters:
        - name: id
          in: path
          description: Identifier of the Service
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - service
      summary: Updates partially a Service
      description: This operation updates partially a Service entity.
      operationId: patchService
      parameters:
        - name: id
          in: path
          description: Identifier of the Service
          required: true
          schema:
            type: string
      requestBody:
        description: The Service to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/5GSliceService_Update'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5GSliceService'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: service
  /monitor:
    get:
      tags:
        - monitor
      summary: List or find Monitor objects
      description: This operation list or find Monitor entities
      operationId: listMonitor
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Monitor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /monitor/{id}:
    get:
      tags:
        - monitor
      summary: Retrieves a Monitor by ID
      description: This operation retrieves a Monitor entity. Attribute selection is enabled for all first level attributes.
      operationId: retrieveMonitor
      parameters:
        - name: id
          in: path
          description: Identifier of the Monitor
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hub:
    post:
      tags:
        - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        required: true
      responses:
        '201':
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /hub/{id}:
    delete:
      tags:
        - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: unregisterListener
      parameters:
        - name: id
          in: path
          description: The id of the registered listener
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
          content: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /listener/serviceCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceCreateEvent
      description: Example of a client listener for receiving the notification ServiceCreateEvent
      operationId: listenToServiceCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/serviceAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification ServiceAttributeValueChangeEvent
      operationId: listenToServiceAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/serviceStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceStateChangeEvent
      description: Example of a client listener for receiving the notification ServiceStateChangeEvent
      operationId: listenToServiceStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/serviceDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity ServiceDeleteEvent
      description: Example of a client listener for receiving the notification ServiceDeleteEvent
      operationId: listenToServiceDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/monitorCreateEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MonitorCreateEvent
      description: Example of a client listener for receiving the notification MonitorCreateEvent
      operationId: listenToMonitorCreateEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorCreateEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/monitorAttributeValueChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MonitorAttributeValueChangeEvent
      description: Example of a client listener for receiving the notification MonitorAttributeValueChangeEvent
      operationId: listenToMonitorAttributeValueChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorAttributeValueChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/monitorStateChangeEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MonitorStateChangeEvent
      description: Example of a client listener for receiving the notification MonitorStateChangeEvent
      operationId: listenToMonitorStateChangeEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorStateChangeEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
  /listener/monitorDeleteEvent:
    post:
      tags:
        - notification listeners (client side)
      summary: Client listener for entity MonitorDeleteEvent
      description: Example of a client listener for receiving the notification MonitorDeleteEvent
      operationId: listenToMonitorDeleteEvent
      requestBody:
        description: The event data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorDeleteEvent'
        required: true
      responses:
        '201':
          description: Notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: data
components:
  schemas:
    Addressable:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Base schema for adressable entities
    Any:
      type: object
    Characteristic:
      required:
        - name
        - value
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        valueType:
          type: string
          description: Data type of the value of the characteristic
        characteristicRelationship:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
        value:
          $ref: '#/components/schemas/Any'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
      description: Describes a given characteristic of an object or entity through a name/value pair.
    CharacteristicRelationship:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
        relationshipType:
          type: string
          description: The type of relationship
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Another Characteristic that is related to the current Characteristic;
    ConstraintRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: reference id to the target constraint
        href:
          type: string
          description: Hyperlink reference to the target constraint
        name:
          type: string
          description: Name given to the constraint
        version:
          type: string
          description: constraint version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The (class) type of the referred constraint
      description: Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.
    EntityRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Entity reference schema to be use for all entityRef class.
    EntityValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Base entity value  schema for use in TMForum Open-APIs
    Extensible:
      type: object
      properties:
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
      description: Base Extensible schema for use in TMForum Open-APIs
    Feature:
      required:
        - featureCharacteristic
        - name
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the feature.
        isBundle:
          type: boolean
          description: True if this is a feature group. Default is false.
        isEnabled:
          type: boolean
          description: True if this feature is enabled. Default is true.
        name:
          type: string
          description: This is the name for the feature.
        constraint:
          type: array
          description: This is a list of feature constraints.
          items:
            $ref: '#/components/schemas/ConstraintRef'
        featureCharacteristic:
          minItems: 1
          type: array
          description: This is a list of Characteristics for a particular feature.
          items:
            $ref: '#/components/schemas/Characteristic'
        featureRelationship:
          type: array
          items:
            $ref: '#/components/schemas/FeatureRelationship'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Configuration feature.
    FeatureRelationship:
      required:
        - name
        - relationshipType
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the target feature.
        name:
          type: string
          description: This is the name of the target feature.
        relationshipType:
          type: string
          description: This is the type of the feature relationship.
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Configuration feature
    HeaderItem:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
          description: The name of the header item, e.g. locale
        value:
          type: string
          description: The value of the header item, e.g. en-us
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: An item typically included in a request or response
    Monitor:
      type: object
      properties:
        id:
          type: string
          description: Identifier of an instance of the monitor. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type
        href:
          type: string
          description: reference to this monitor
        sourceHref:
          type: string
          description: The monitored resource href
        state:
          type: string
          description: The Monitor state of the resource.  InProgress, InError, Completed
        request:
          $ref: '#/components/schemas/Request'
        response:
          $ref: '#/components/schemas/Response'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Monitoring of resources
    Note:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity (may or may not be globally unique, depending on provider implementation)
        author:
          type: string
          description: Author of the note
        date:
          type: string
          description: Date of the note
          format: date-time
        text:
          type: string
          description: Text of the note
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Extra information about a given entity
    OrderItemActionType:
      type: string
      description: action to be performed on the product
      enum:
        - add
        - modify
        - delete
        - noChange
    Place:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: Place reference. Place defines the places where the products are sold or delivered.
    PlaceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.
    RelatedEntityRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
        href:
          type: string
          description: Reference of the related entity.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself
    RelatedParty:
      required:
        - '@referredType'
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
    RelatedPlaceRefOrValue:
      required:
        - role
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the place
        href:
          type: string
          description: Unique reference of the place
        name:
          type: string
          description: A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]
        role:
          type: string
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself
    RelatedServiceOrderItem:
      required:
        - itemId
        - serviceOrderId
      type: object
      properties:
        itemId:
          type: string
          description: Identifier of the order item where the service was managed
        role:
          type: string
          description: role of the service order item for this service
        serviceOrderHref:
          type: string
          description: Reference of the related entity.
        serviceOrderId:
          type: string
          description: Unique identifier of a related entity.
        itemAction:
          $ref: '#/components/schemas/OrderItemActionType'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service creation/change/termination.
    Request:
      required:
        - body
        - header
      type: object
      properties:
        body:
          type: string
          description: The body of the request. For example for an HTTP request might contain content of a form .
        method:
          type: string
          description: The protocol of the request, e.g. http
        to:
          type: string
          description: The target of the request, e.g. a URL for an HTTP request
        header:
          minItems: 1
          type: array
          description: Items included in the header of the request. For example for an HTTP request might contain requested locale, basic authentication.
          items:
            $ref: '#/components/schemas/HeaderItem'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A response to a request
    ResourceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
    Response:
      required:
        - body
        - header
      type: object
      properties:
        body:
          type: string
          description: The body of the response. For example for an HTTP response might contain HTML for rendering.
        statusCode:
          type: string
          description: The status of the response. For example for an HTTP response would be codes such as 200, 400, etc.
        header:
          minItems: 1
          type: array
          description: Items included in the header of the response. For example for an HTTP response might contain negotiated locale.
          items:
            $ref: '#/components/schemas/HeaderItem'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A response to a request
    Service:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the service
        href:
          type: string
          description: Reference of the service
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          description: Date when the service ends
          format: date-time
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          description: Date when the service starts
          format: date-time
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          description: 'A list of feature associated with this service '
          items:
            $ref: '#/components/schemas/Feature'
        note:
          type: array
          description: A list of notes made on this service
          items:
            $ref: '#/components/schemas/Note'
        place:
          type: array
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedEntity:
          type: array
          description: 'A list of related  entity in relationship with this service '
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
        relatedParty:
          type: array
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
          items:
            $ref: '#/components/schemas/RelatedParty'
        serviceCharacteristic:
          type: array
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
          items:
            $ref: '#/components/schemas/Characteristic'
        serviceOrderItem:
          type: array
          description: A list of service order items related to this service
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
        serviceRelationship:
          type: array
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory (useful for describing relies-on, relies-from between CFS for example).
          items:
            $ref: '#/components/schemas/ServiceRelationship'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        state:
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources'
          items:
            $ref: '#/components/schemas/ResourceRef'
        supportingService:
          type: array
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: 'Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.'
    5GSliceService:
      properties:
        availability:
          type: number
          description: '(Communication service)availability: percentage value of the amount of time the end-to-end communication service is delivered according to an agreed QoS, divided by the amount of time the system is expected to deliver the end-to-end service according to the specification in a specific area'
        areaOfService:
          type: array
          items:
            type: object
            properties:
              country:
                pattern: ^[A-Z][A-Z]
                type: string
                description: This attribute specifies the area where the terminals can access a particular network slice. Therefore, the attribute specifies the list of the countries where the service will be provided. The list is specific to NSPs and their roaming agreements
              listOfRegion:
                type: string
                description: For every single country listed in the area of service attribute it needs to be indicated if the service will be provided in the whole country or just in part of the country. If the NSC requires a specific location, this attribute can be used to specify the regions of the country where the service will be provided. It needs to be completed for every country listed in the Area of service attribute. The list of regions is specific for each country and the way to define these regions is the decision of the NSC and NSP.
                enum:
                  - fullCountry
                  - listOfRegions
              region:
                type: array
                items:
                  type: object
                  properties:
                    regionCode:
                      type: string
                      description: List of regions
        delayTolerance:
          type: string
          description: Provide the NSC with service delivery flexibility, especially for the vertical services that are not chasing a high system performance. For instance, the service will be delivered once the mobile system has sufficient resources or during the off-peak hours. For this type of traffic, it is not too critical how long it takes to deliver the amount of data, e.g. within hours, days, weeks, etc.
          default: notSupportedd
          enum:
            - notSupported
            - supported
        deterministicCommunication:
          type: object
          properties:
            availability:
              type: string
              description: Availability describes if the network slice supports deterministic communication.
              default: notSupported
              enum:
                - notSupported
                - supported
            periodicity:
              type: array
              items:
                type: string
                description: Periodicity provides a list of periodicities supported by the network slice.
        downlinkThroughput:
          maximum: 1000000
          minimum: 0
          type: number
          description: This attribute describes the guaranteed data rate supported by the network slice in downlink.
        additionalDownlinkGBRQoSFlow:
          type: string
          description: Additional downlink GBR QoS flows .
          default: notAllowed
          enum:
            - allowed
            - notAllowed
        maxDownlinkThroughputNetworkSlice:
          maximum: 1000000
          minimum: 0
          type: number
          description: This attribute defines the maximum data rate supported by the network slice in downlink.
        maxDownlinkThroughputNetworkperUE:
          required:
            - maxDownlinkThroughputNetworkperUEValue
          type: object
          properties:
            maxDownlinkThroughputNetworkperUEValue:
              maximum: 1000000
              minimum: 0
              type: number
              description: This attribute defines the maximum data rate supported by the network slice in downlink.
            serviceCategory:
              type: array
              items:
                type: string
                description: This attribute defines a service category wich may be assigned to certain groups of devices using the netwirk slice, associated to a Maximum Dowlink Troughput
        energyEfficiency:
          type: string
          description: This attribute describes wether the network slice supports the energy efficiency KPI
          default: notSupported
          enum:
            - notSupported
            - supported
        groupCommunicationSupport:
          type: string
          description: 'This parameter describes which type of group communication is provided by the network slice. '
          default: NotSupported
          enum:
            - NotSupported
            - Single Cell Point to Multipoint (SCPTM)
            - Broadcast/Multicast
            - Broadcast/Multicast + SC-PTM
            - Unicast
        isolation:
          type: string
          description: 'Isolation is one of the key expectations of network slicing. A network slice instance may be fully or partly, logically and/or physically, isolated from another network slice instance. '
          default: No Isolation
          enum:
            - No Isolation
            - Physical Isolation
            - Logical Isolation
        physicalIsolation:
          type: string
          description: Physical network slices are physically separated (e.g. different rack, different hardware, different location, etc.). Process and threads isolation,  Physical memory isolation, Physical network isolation
          default: Process and threads Isolation
          enum:
            - Process and threads Isolation
            - Physical memory Isolation
            - Physical network isolation
        logicalIsolation:
          type: string
          description: Logical network slices are logically separated. Virtual resources isolation a network slice has access to specific range of resources that do not overlap with other network slices (e.g. VM isolation). Network functions isolation   NF (Network Function) is dedicated to the NSC, but virtual resources are shared. Tenant/Service Isolation  NSC data are isolated from other NSCs, but virtual resources and NFs are shared
          default: Virtual resource isolation
          enum:
            - Virtual resource isolation
            - Network Function isolation
            - Tenant/Service isolation
        maximumSupportedPacketSize:
          type: integer
          description: This attribute describes the maximum packet size in Bytes supported by the network slice and may be important for URLLC (Ultra-Reliable Low Latency Communication) and MIoT (Massive IoT), or to indicate a supported maximum transmission unit (MTU).
        missionCriticalSupport:
          type: string
          description: Mission-critical (MC) leads to a priority of the network slice relative to others, for C-plane (Control Plane) and U-plane (User Plane) decisions. This is relative to a customer provider relationship and to a PLMN (Public land Mobile Network)
          default: non-mission-critical
          enum:
            - non-mission-critical
            - mission-critical
        missionCriticalCapabilitySupport:
          type: string
          description: This parameter specifies what capabilities are available to support mission-critical services.  More than one capability may be supported at once.  This parameter must be present if Mission critical supportis set toMission-critical.
          default: Inter-user prioritization
          enum:
            - Inter-user prioritization
            - Pre-emption
            - Local control
        missionCriticalServiceSupport:
          type: string
          description: This attribute specifies whether or not the network slice supports mission-critical push-to-talk (MCPTT), mission-critical data (MCData)], mission-critical video (MCVideo), Isolated E-UTRAN Operation for Public Safety (IOPS), or mission-critical interworking
          default: MCPTT
          enum:
            - MCPTT
            - MCData
            - MCVideo
            - MC interworking
        MMTelSupport:
          type: string
          description: This attribute describes whether the network slice supports IP Multimedia Subsystem (IMS) and Multimedia Telephony Service MMTel. This parameter describes whether the GSMA PRD IR.92 0 compliant MMTel deployment is supported in the network slice
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        NB-IoTSupport:
          type: string
          description: This parameter describes whether NB-IoTis supported in the network slice
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        EPSCountingRequiredUE:
          type: string
          description: 'If this parameter indicates that EPS counting is required, the UE sessions counting shall also take into account the PDN connections in the EPS connected to an APN that maps to a DNN/S-NSSAI of the network slice. '
          default: 'no'
          enum:
            - 'no'
            - 'yes'
        performanceMonitoring:
          type: object
          properties:
            availability:
              type: object
              description: This parameter contains a list of KQIs and KPIs available for prediction. If the list is empty, the attribute is not available in the network slice and the other parameters might be ignored
            monitoringSampleFrequency:
              type: object
              description: This parameter describes how often the KQIs and KPIs are monitored.
        performancePrediction:
          type: object
          properties:
            availability:
              type: object
              description: This parameter contains a list of KQIs and KPIs available for prediction. If the list is empty, the attribute is not available in the network slice and the other parameters might be ignored
            predictionFrequency:
              type: object
              description: This parameter describes how often KQIs and KPIs prediction values are provided
        positioningSupportAvailability:
          type: string
          description: This parameter describes if this attribute is provided by the network slice and contains a list of positioning methods provided by the slice. If the list is empty this attribute is not available in the network slice and the other parameters might be ignored
          enum:
            - CID
            - OTDOA (LTE and NR)
            - RF fingerprinting
            - AECID
            - Hybrid positioning
            - NET-RTK
        positioningSupportPredictionFrequency:
          type: string
          description: This parameter describes how often location information is provided. This parameter simply defines how often the customer is allowed to request location information. This is not related to the time it takes to determine the location, which is a characteristic of the positioning method.
          default: per second
          enum:
            - per second
            - per minute
            - per hour
            - conditional, e.g. in case a defined threshold is crossed
        positioningSupportAccuracy:
          type: number
          description: This parameter describes the accuracy of the location information. Accuracy depends on the respective positioning solution applied in the network slice
        radioSpectrum:
          type: string
          description: Defines the radio spectrum supported by the network slice. See NR operating band identifiers in 3GPP TS 38.101-4
        rootCauseInvestigation:
          type: string
          description: Root cause investigation is the capability provided to NSC to understand or investigate the root cause of network service performance degradation or failure
          default: not supported
          enum:
            - not supported
            - passive investigation
            - active investigation
        sessionAndServiceContinuitySupport:
          type: string
          description: 'The attribute defines the continuity of a Protocol Data Unit (PDU) session. The following three Session and Service Continuity (SSC) modes are specified: SSC mode 1 - the network preserves the connectivity service provided to the UE (the IP address is preserved), SSC mode 2 - the network may release the connectivity service delivered to the UE and release the corresponding PDU Session (the network may release IP address(es) that had been allocated to the UE), SSC mode 3 - changes to the user plane can be visible to the UE, while the network ensures that the UE suffers no loss of connectivity service (the IP address is not preserved in this mode when the PDU Session Anchor changes), None â UE loses the connectivity service'
          enum:
            - SSC mode 1
            - SSC mode 2
            - SSC mode 3
        simultaneousUseOfNetworkSlice:
          type: string
          description: This attribute describes whether a network slice can be simultaneously with other network slice and if so, which group the network slice belongs to
          default: Can be used with any slice
          enum:
            - Can be used with any slice
            - Can be used with slices with same SST value
            - Can be used with any slice with same SD value
            - 'Can be used simultaneously with any network slice with the same SD value but different SST value '
            - 'Cannot be used simultaneously with any another network slice '
            - operator defined class
        simultaneousUseOfNetworkSliceServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to a UE, associated to a Simlultaneous class value
        sliceQualityOfServiceParameters5QI:
          maximum: 200
          minimum: 1
          type: integer
          description: A 5QI is a scalar used as a reference to 5G QoS characteristics defined in clause [1], i.e. access node-specific parameters that control QoS forwarding treatment for the QoS Flow (e.g. scheduling weights, admission thresholds, queue management thresholds, link layer protocol configuration, etc.). 3GPP has already defined standardized 5QI to QoS characteristics mapping. See 5QI value in the table of GNST
        sliceQualityOfServiceParametersPriorityLeve:
          type: string
          description: The Priority level associated with 5G QoS characteristics indicates a priority in scheduling resources among QoS Flows. The Priority level shall be used to differentiate between QoS Flows of the same UE, and it shall also be used to differentiate between QoS Flows from different UEs. Once all QoS requirements up to GFBR are fulfilled for all the Guaranteed Bit Rate (GBR) QoS Flows, the Priority Level may also be used to distribute resources between GBR QoS Flows (for rates above GFBR up to MFBR, Maximum Flow Bit Rate) and non- GBR QoS Flows, in an implementation specific manner. The lowest Priority level value corresponds to the highest Priority [1]. This value needs to be provided for each customised 5QI value selected..
        sliceQualityOfServiceParametersPacketDelayBudget:
          type: string
          description: The Packet Delay Budget (PDB) defines an upper bound for the time that a packet may be delayed between the UE and the UPF, that terminates the N6 interface. For a certain 5QI the value of the PDB is the same in UL (Uplink) and DL (Downlink). In the case of 3GPP access, the PDB is used to support the configuration of scheduling and link layer functions (e.g. the setting of scheduling priority weights and HARQ (Hybrid Automatic Repeat request) target operating points).
        sliceQualityOfServiceParametersPacketErrorRate:
          type: string
          description: The Packet Error Rate (PER) defines an upper bound for the rate of PDUs (e.g. IP packets) that have been processed by the sender but that are not successfully delivered by the corresponding receiver. The purpose of the PER is to allow for the appropriate link layer, protocol configurations (e.g. RLC and HARQ in RAN of a 3GPP access). For all 5QIs the value of the PER is the same in UL and DL. For GBR QoS Flows with Delay critical GBR resource type, a packet which is delayed more than PDB (but which complies with the GFBR and MDBV (Maximum Data Burst Volume) requirements) is counted as lost, and included in the PER. This value needs to be provided for each customised 5QI value selected.
        averagingWindow:
          type: integer
          description: millisecond Each GBR QoS Flow shall be associated with an Averaging window. The Averaging window represents the duration over which the GFBR and MFBR shall be calculated (e.g. in the (R)AN, UPF, UE). (see clause 5.7.3.6 of 3GPP TS 23.501 [1]).
        maximumDataBurstVolume:
          type: integer
          description: 'bytes Each GBR QoS Flow with Delay-critical resource type shall be associated with a Maximum Data Burst Volume (MDBV). MDBV denotes the largest amount of data that the 5G-AN is required to serve within a period of 5G-AN PDB (i.e. 5G-AN part of the PDB) (see clause 5.7.3.7 of 3GPP TS 23.501 [1]). '
        sliceQualityOfServiceParametersMaximumPacketLossRate:
          type: integer
          description: Percentage The Maximum Packet Loss Rate (UL, DL) indicates the maximum rate for lost packets of the QoS flow that can be tolerated in the uplink (UL) and downlink (DL) direction.
        supportForNon-IPTraffic:
          type: string
          description: Percentage The Maximum Packet Loss Rate (UL, DL) indicates the maximum rate for lost packets of the QoS flow that can be tolerated in the uplink (UL) and downlink (DL) direction.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        supportedDeviceVelocity:
          type: integer
          description: Kilometres per hour (km/h) Maximum speed supported by the network slice at which a defined QoS and seamless transfer between TRxPs (Transmission Reception Point(s)), which may belong to different deployment layers and/or radio access technologies (multi-layer /-RAT), can be achieved.
        synchronicityAvailability:
          type: string
          description: The synchronicity between devices over PC5 in absence of the network is not in scope of this attribute.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        synchronicityAccuracy:
          type: number
          description: This parameter describes the accuracy of the synchronicity. in Seconds
        UEDensity:
          type: integer
          description: This attribute describes the maximum number of connected and/or accessible devices per unit area (per km2) supported by the network slice.Number per km2
        uplinkThroughputPerNetworkSliceGuaranteedUplinkThroughput:
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in uplink. There are services (e.g. emergency services) where guaranteed uplink throughput is required. kbps
        uplinkThroughputPerNetworkSliceAdditionalUplinkGBRQoSFlows:
          type: string
          default: allowed
          enum:
            - notAllowed
            - allowed
        uplinkThroughputPerNetworkSliceMaximumUplinkThroughput:
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in uplink. There are services (e.g. emergency services) where guaranteed uplink throughput is required. bps
        uplinkThroughputPerUEMaximumUplinkThroughput:
          type: integer
          description: This attribute describes the maximum data rate supported by the network slice per UE in uplink. These parameters could be used in order to offer different contract qualities like gold, silver and bronze. kbps
        UplinkThroughputPerUEServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to a UE, associated to a Simlultaneous class value
        userManagementOpenness:
          type: string
          description: This attribute describes the capability for the NSC to manage their users or groups of usersâ network services and corresponding requirements. For instance, if NSC Y orders a network slice which is capable to support X users of Y, then Y should be capable to decide which X users could use this network slice. Hence, Y could manage the users, in terms of add, modify or delete users to receive network services provided by the specific network slice.
          default: allowed
          enum:
            - notAllowed
            - allowed
        dataNetworkAccessDataAccessPerNetwork:
          type: string
          description: This attribute describes the capability for the NSC to manage their users or groups of usersâ network services and corresponding requirements. For instance, if NSC Y orders a network slice which is capable to support X users of Y, then Y should be capable to decide which X users could use this network slice. Hence, Y could manage the users, in terms of add, modify or delete users to receive network services provided by the specific network slice.
          default: Direct internet access
          enum:
            - Direct internet access
            - Termination in the private network
            - Local traffic (no internet access)
        dataNetworkAccessTunnellingMechanism:
          type: string
          description: The attribute defines the tunnelling mechanism; how the user data can be delivered to the external private data network. 3GPP TS 29.561 [12] lists the interworking with data networks and tunnelling mechanism used
          default: L2TP Tunnel
          enum:
            - L2TP Tunnel
            - GRE Tunnel
            - VPN Tunnel
            - Label based routing
        V2XCommunicationMode:
          type: string
          description: This parameter describes if the V2X communication mode is supported by the network slice.
          default: Not supported
          enum:
            - Not supported
            - YES-EUTRA
            - YES- NR
            - YES -NR and E-UTRA
        Latency from (last) UFP to Application Server:
          type: number
          description: 'Latency in Secondsmfrom (last) UFP to Application Server This optional attribute specifies maximum or worst case one-way latency between UPF and application server offered by the slice. This does not include latency introduced by the application server. In the case of chained UPFs, this refers to the last UPF (in the chain) towards the application server. This attribute extends what is covered by the 3GPP QoS PDB attribute (see GST QoS attribute) which is only between UE and UPF. This is an optional attribute for network slices that offer latency objectives between UPF and application server residing within the operator network. '
        NSSAARequired:
          type: string
          description: 'Network Slice Specific Authentication and Authorization (NSSAA). This attribute specifies whether for the Network Slice, devices need to be also authenticated and authorized by a AAA server using additional credentials different than the ones used for the primary authentication (see Rel-16 of 3GPP TS 23.501 [1] clause 5.15.10 for a definition of the Network Slice Specific Authentication and Authorization feature). '
          default: Not supported
          enum:
            - Not supported
            - YES-EUTRA
            - YES- NR
            - YES -NR and E-UTRA
        multimediaPriorityService:
          type: string
          description: 'Multimedia Priority Service (MPS) leads to priority of traffic relative to other traffic. Note: Not including this attribute is equal to setting it to Non-MPS.  '
          default: non-MPS
          enum:
            - non-MPS
            - MPS
        multimediaPriorityServiceCapabilitySupport:
          type: string
          description: 'This parameter specifies what capabilities are available to support MPS. More than one capability may be supported at once. This parameter must be present if Multimedia Priority Service support is set to âMPSâ. '
          default: Preemption
          enum:
            - Preemption
            - user Prioritization
        multimediaPriorityServiceSupport:
          type: string
          description: 'This attribute specifies whether or not the network slice supports MPS for MMTel voice, MPS for MMTel video, and/or MPS for Data as specified in 3GPP TS 22.153 [31]. This parameter must be present if Multimedia Priority Service support is set to âMPSâ. '
          default: MPS for MMTel voice
          enum:
            - MPS for MMTel voice
            - MPS for MMTel video
            - MPS for Data
        sliceSegment:
          type: string
          description: 'This attribute specifies Subnet involved in the slice '
          default: End to End
          enum:
            - End to End
            - Ran only
            - Core only
        supportedDataNetwork:
          type: string
          description: This attribute describes the data nework the network slice provides access to
        supportedDataNetworkServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to certain groups of devices using the netwirk slice, associated to a Maximum Dowlink Troughput
      description: 5G Slice Service
      allOf:
        - $ref: '#/components/schemas/Service'
    Service_Create:
      required:
        - serviceSpecification
        - state
      type: object
      properties:
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          description: Date when the service ends
          format: date-time
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          description: Date when the service starts
          format: date-time
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          description: 'A list of feature associated with this service '
          items:
            $ref: '#/components/schemas/Feature'
        note:
          type: array
          description: A list of notes made on this service
          items:
            $ref: '#/components/schemas/Note'
        place:
          type: array
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedEntity:
          type: array
          description: 'A list of related  entity in relationship with this service '
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
        relatedParty:
          type: array
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
          items:
            $ref: '#/components/schemas/RelatedParty'
        serviceCharacteristic:
          type: array
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
          items:
            $ref: '#/components/schemas/Characteristic'
        serviceOrderItem:
          type: array
          description: A list of service order items related to this service
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
        serviceRelationship:
          type: array
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory (useful for describing relies-on, relies-from between CFS for example).
          items:
            $ref: '#/components/schemas/ServiceRelationship'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        state:
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources'
          items:
            $ref: '#/components/schemas/ResourceRef'
        supportingService:
          type: array
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.
        Skipped properties: id,href
    5GSliceService_Create:
      properties:
        availability:
          type: number
          description: '(Communication service)availability: percentage value of the amount of time the end-to-end communication service is delivered according to an agreed QoS, divided by the amount of time the system is expected to deliver the end-to-end service according to the specification in a specific area'
        areaofServiceCountry:
          pattern: 2[A,Z]
          type: string
          description: This attribute specifies the area where the terminals can access a particular network slice. Therefore, the attribute specifies the list of the countries where the service will be provided. The list is specific to NSPs and their roaming agreements
        areaofServiceRegion:
          pattern: 2[A,Z]
          type: string
          description: For every single country listed in the area of service attribute it needs to be indicated if the service will be provided in the whole country or just in part of the country. If the NSC requires a specific location, this attribute can be used to specify the regions of the country where the service will be provided. It needs to be completed for every country listed in the Area of service attribute. The list of regions is specific for each country and the way to define these regions is the decision of the NSC and NSP.
        delayTolerance:
          type: string
          description: Provide the NSC with service delivery flexibility, especially for the vertical services that are not chasing a high system performance. For instance, the service will be delivered once the mobile system has sufficient resources or during the off-peak hours. For this type of traffic, it is not too critical how long it takes to deliver the amount of data, e.g. within hours, days, weeks, etc.
        deterministicCommunicationAvailabilty:
          type: string
          description: Availability describes if the network slice supports deterministic communication.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        deterministicCommunicationPeriodicity:
          type: string
          description: Periodicity provides a list of periodicities supported by the network slice.
        downlinkThroughputPerNetworkSliceGuaranteedDownlinkThroughputQuota:
          maximum: 1000000
          minimum: 0
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in downlink.
        additionalDownlinkGBRQoSFlows:
          type: boolean
          description: Additional downlink GBR QoS flows .
          default: true
        downlinkThroughputPerNetworkSliceMaximumDownlinkThroughput:
          maximum: 1000000
          minimum: 0
          type: integer
          description: This attribute defines the maximum data rate supported by the network slice in downlink.
        downlinkThroughputperUEDownlinkMaximumRateServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to certain groups of devices using the netwirk slice, associated to a Maximum Dowlink Troughput
        energyEfficiencyNetworkSliceEnergyEfficiencyKPI:
          type: string
          description: This attribute describes wether the network slice supports the energy efficiency KPI
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        groupCommunicationSupport:
          type: string
          description: 'This parameter describes which type of group communication is provided by the network slice. '
          default: NotSupported
          enum:
            - NotSupported
            - Single Cell Point to Multipoint (SCPTM)
            - Broadcast/Multicast
            - Broadcast/Multicast + SC-PTM
            - Unicast
        isolation:
          type: string
          description: 'Isolation is one of the key expectations of network slicing. A network slice instance may be fully or partly, logically and/or physically, isolated from another network slice instance. '
          default: No Isolation
          enum:
            - No Isolation
            - Physical Isolation
            - Logical Isolation
        physicalIsolation:
          type: string
          description: Physical network slices are physically separated (e.g. different rack, different hardware, different location, etc.). Process and threads isolation,  Physical memory isolation, Physical network isolation
          default: Process and threads Isolation
          enum:
            - Process and threads Isolation
            - Physical memory Isolation
            - Physical network isolation
        logicalIsolation:
          type: string
          description: Logical network slices are logically separated. Virtual resources isolation a network slice has access to specific range of resources that do not overlap with other network slices (e.g. VM isolation). Network functions isolation   NF (Network Function) is dedicated to the NSC, but virtual resources are shared. Tenant/Service Isolation  NSC data are isolated from other NSCs, but virtual resources and NFs are shared
          default: Virtual resource isolation
          enum:
            - Virtual resource isolation
            - Network Function isolation
            - Tenant/Service isolation
        maximumSupportedPacketSize:
          type: integer
          description: This attribute describes the maximum packet size in Bytes supported by the network slice and may be important for URLLC (Ultra-Reliable Low Latency Communication) and MIoT (Massive IoT), or to indicate a supported maximum transmission unit (MTU).
        missionCriticalSupport:
          type: string
          description: Mission-critical (MC) leads to a priority of the network slice relative to others, for C-plane (Control Plane) and U-plane (User Plane) decisions. This is relative to a customer provider relationship and to a PLMN (Public land Mobile Network)
          default: non-mission-critical
          enum:
            - non-mission-critical
            - mission-critical
        missionCriticalSupportMissionCriticalCapabilitySupport:
          type: string
          description: This parameter specifies what capabilities are available to support mission-critical services.  More than one capability may be supported at once.  This parameter must be present if Mission critical supportis set toMission-critical.
          default: Inter-user prioritization
          enum:
            - Inter-user prioritization
            - Pre-emption
            - Local control
        missionCriticalSupporMissionCriticalServiceSupport:
          type: string
          description: This attribute specifies whether or not the network slice supports mission-critical push-to-talk (MCPTT), mission-critical data (MCData)], mission-critical video (MCVideo), Isolated E-UTRAN Operation for Public Safety (IOPS), or mission-critical interworking
          default: MCPTT
          enum:
            - MCPTT
            - MCData
            - MCVideo
            - MC interworking
        MMTelSupport:
          type: string
          description: This attribute describes whether the network slice supports IP Multimedia Subsystem (IMS) and Multimedia Telephony Service MMTel. This parameter describes whether the GSMA PRD IR.92 0 compliant MMTel deployment is supported in the network slice
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        NB-IoTSupport:
          type: string
          description: This parameter describes whether NB-IoTis supported in the network slice
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        EPSCountingRequiredUE:
          type: string
          description: 'If this parameter indicates that EPS counting is required, the UE sessions counting shall also take into account the PDN connections in the EPS connected to an APN that maps to a DNN/S-NSSAI of the network slice. '
          default: 'no'
          enum:
            - 'no'
            - 'yes'
        performanceMonitoringAvailability:
          type: string
          description: This parameter contains a list of KQIs and KPIs available for monitoring. If the list is empty this attribute is not available in the network slice and the other parameters might be ignored
          default: 'no'
          enum:
            - 'no'
            - 'yes'
        performanceMonitoringAvailabilityFrequency:
          type: string
          description: This parameter contains a list of KQIs and KPIs available for monitoring. If the list is empty this attribute is not available in the network slice and the other parameters might be ignored
        performanceMonitoringSampleFrequency:
          type: string
          description: This parameter describes how often the KQIs and KPIs are monitored.
          default: per second
          enum:
            - per second
            - per minute
            - per hour
            - conditional, e.g. in case a defined threshold is crossed
        performancePredictionAvailability:
          type: string
          description: This parameter contains a list of KQIs and KPIs available for prediction. If the list is empty, the attribute is not available in the network slice and the other parameters might be ignored
          default: Throughput
          enum:
            - Throughput
            - Latency
            - Service Request Success Rate
        performancePredictionFrequency:
          type: string
          description: This parameter describes how often KQIs and KPIs prediction values are provided
          default: per second
          enum:
            - per second
            - per minute
            - per hour
        positioningSupportAvailability:
          type: string
          description: This parameter describes if this attribute is provided by the network slice and contains a list of positioning methods provided by the slice. If the list is empty this attribute is not available in the network slice and the other parameters might be ignored
          enum:
            - CID
            - OTDOA (LTE and NR)
            - RF fingerprinting
            - AECID
            - Hybrid positioning
            - NET-RTK
        positioningSupportPredictionFrequency:
          type: string
          description: This parameter describes how often location information is provided. This parameter simply defines how often the customer is allowed to request location information. This is not related to the time it takes to determine the location, which is a characteristic of the positioning method.
          default: per second
          enum:
            - per second
            - per minute
            - per hour
            - conditional, e.g. in case a defined threshold is crossed
        positioningSupportAccuracy:
          type: number
          description: This parameter describes the accuracy of the location information. Accuracy depends on the respective positioning solution applied in the network slice
        radioSpectrum:
          type: string
          description: Defines the radio spectrum supported by the network slice. See NR operating band identifiers in 3GPP TS 38.101-4
        rootCauseInvestigation:
          type: string
          description: Root cause investigation is the capability provided to NSC to understand or investigate the root cause of network service performance degradation or failure
          default: not supported
          enum:
            - not supported
            - passive investigation
            - active investigation
        sessionAndServiceContinuitySupport:
          type: string
          description: 'The attribute defines the continuity of a Protocol Data Unit (PDU) session. The following three Session and Service Continuity (SSC) modes are specified: SSC mode 1 - the network preserves the connectivity service provided to the UE (the IP address is preserved), SSC mode 2 - the network may release the connectivity service delivered to the UE and release the corresponding PDU Session (the network may release IP address(es) that had been allocated to the UE), SSC mode 3 - changes to the user plane can be visible to the UE, while the network ensures that the UE suffers no loss of connectivity service (the IP address is not preserved in this mode when the PDU Session Anchor changes), None â UE loses the connectivity service'
          enum:
            - SSC mode 1
            - SSC mode 2
            - SSC mode 3
        simultaneousUseOfNetworkSlice:
          type: string
          description: This attribute describes whether a network slice can be simultaneously with other network slice and if so, which group the network slice belongs to
          default: Can be used with any slice
          enum:
            - Can be used with any slice
            - Can be used with slices with same SST value
            - Can be used with any slice with same SD value
            - 'Can be used simultaneously with any network slice with the same SD value but different SST value '
            - 'Cannot be used simultaneously with any another network slice '
            - operator defined class
        simultaneousUseOfNetworkSliceServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to a UE, associated to a Simlultaneous class value
        sliceQualityOfServiceParameters5QI:
          maximum: 200
          minimum: 1
          type: integer
          description: A 5QI is a scalar used as a reference to 5G QoS characteristics defined in clause [1], i.e. access node-specific parameters that control QoS forwarding treatment for the QoS Flow (e.g. scheduling weights, admission thresholds, queue management thresholds, link layer protocol configuration, etc.). 3GPP has already defined standardized 5QI to QoS characteristics mapping. See 5QI value in the table of GNST
        sliceQualityOfServiceParametersPriorityLeve:
          type: string
          description: The Priority level associated with 5G QoS characteristics indicates a priority in scheduling resources among QoS Flows. The Priority level shall be used to differentiate between QoS Flows of the same UE, and it shall also be used to differentiate between QoS Flows from different UEs. Once all QoS requirements up to GFBR are fulfilled for all the Guaranteed Bit Rate (GBR) QoS Flows, the Priority Level may also be used to distribute resources between GBR QoS Flows (for rates above GFBR up to MFBR, Maximum Flow Bit Rate) and non- GBR QoS Flows, in an implementation specific manner. The lowest Priority level value corresponds to the highest Priority [1]. This value needs to be provided for each customised 5QI value selected..
        sliceQualityOfServiceParametersPacketDelayBudget:
          type: string
          description: The Packet Delay Budget (PDB) defines an upper bound for the time that a packet may be delayed between the UE and the UPF, that terminates the N6 interface. For a certain 5QI the value of the PDB is the same in UL (Uplink) and DL (Downlink). In the case of 3GPP access, the PDB is used to support the configuration of scheduling and link layer functions (e.g. the setting of scheduling priority weights and HARQ (Hybrid Automatic Repeat request) target operating points).
        sliceQualityOfServiceParametersPacketErrorRate:
          type: string
          description: The Packet Error Rate (PER) defines an upper bound for the rate of PDUs (e.g. IP packets) that have been processed by the sender but that are not successfully delivered by the corresponding receiver. The purpose of the PER is to allow for the appropriate link layer, protocol configurations (e.g. RLC and HARQ in RAN of a 3GPP access). For all 5QIs the value of the PER is the same in UL and DL. For GBR QoS Flows with Delay critical GBR resource type, a packet which is delayed more than PDB (but which complies with the GFBR and MDBV (Maximum Data Burst Volume) requirements) is counted as lost, and included in the PER. This value needs to be provided for each customised 5QI value selected.
        averagingWindow:
          type: integer
          description: millisecond Each GBR QoS Flow shall be associated with an Averaging window. The Averaging window represents the duration over which the GFBR and MFBR shall be calculated (e.g. in the (R)AN, UPF, UE). (see clause 5.7.3.6 of 3GPP TS 23.501 [1]).
        maximumDataBurstVolume:
          type: integer
          description: 'bytes Each GBR QoS Flow with Delay-critical resource type shall be associated with a Maximum Data Burst Volume (MDBV). MDBV denotes the largest amount of data that the 5G-AN is required to serve within a period of 5G-AN PDB (i.e. 5G-AN part of the PDB) (see clause 5.7.3.7 of 3GPP TS 23.501 [1]). '
        sliceQualityOfServiceParametersMaximumPacketLossRate:
          type: integer
          description: Percentage The Maximum Packet Loss Rate (UL, DL) indicates the maximum rate for lost packets of the QoS flow that can be tolerated in the uplink (UL) and downlink (DL) direction.
        supportForNon-IPTraffic:
          type: string
          description: Percentage The Maximum Packet Loss Rate (UL, DL) indicates the maximum rate for lost packets of the QoS flow that can be tolerated in the uplink (UL) and downlink (DL) direction.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        supportedDeviceVelocity:
          type: integer
          description: Kilometres per hour (km/h) Maximum speed supported by the network slice at which a defined QoS and seamless transfer between TRxPs (Transmission Reception Point(s)), which may belong to different deployment layers and/or radio access technologies (multi-layer /-RAT), can be achieved.
        synchronicityAvailability:
          type: string
          description: The synchronicity between devices over PC5 in absence of the network is not in scope of this attribute.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        synchronicityAccuracy:
          type: number
          description: This parameter describes the accuracy of the synchronicity. in Seconds
        UEDensity:
          type: integer
          description: This attribute describes the maximum number of connected and/or accessible devices per unit area (per km2) supported by the network slice.Number per km2
        uplinkThroughputPerNetworkSliceGuaranteedUplinkThroughput:
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in uplink. There are services (e.g. emergency services) where guaranteed uplink throughput is required. kbps
        uplinkThroughputPerNetworkSliceAdditionalUplinkGBRQoSFlows:
          type: string
          default: allowed
          enum:
            - notAllowed
            - allowed
        uplinkThroughputPerNetworkSliceMaximumUplinkThroughput:
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in uplink. There are services (e.g. emergency services) where guaranteed uplink throughput is required. bps
        uplinkThroughputPerUEMaximumUplinkThroughput:
          type: integer
          description: This attribute describes the maximum data rate supported by the network slice per UE in uplink. These parameters could be used in order to offer different contract qualities like gold, silver and bronze. kbps
        UplinkThroughputPerUEServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to a UE, associated to a Simlultaneous class value
        userManagementOpenness:
          type: string
          description: This attribute describes the capability for the NSC to manage their users or groups of usersâ network services and corresponding requirements. For instance, if NSC Y orders a network slice which is capable to support X users of Y, then Y should be capable to decide which X users could use this network slice. Hence, Y could manage the users, in terms of add, modify or delete users to receive network services provided by the specific network slice.
          default: allowed
          enum:
            - notAllowed
            - allowed
        dataNetworkAccessDataAccessPerNetwork:
          type: string
          description: This attribute describes the capability for the NSC to manage their users or groups of usersâ network services and corresponding requirements. For instance, if NSC Y orders a network slice which is capable to support X users of Y, then Y should be capable to decide which X users could use this network slice. Hence, Y could manage the users, in terms of add, modify or delete users to receive network services provided by the specific network slice.
          default: Direct internet access
          enum:
            - Direct internet access
            - Termination in the private network
            - Local traffic (no internet access)
        dataNetworkAccessTunnellingMechanism:
          type: string
          description: The attribute defines the tunnelling mechanism; how the user data can be delivered to the external private data network. 3GPP TS 29.561 [12] lists the interworking with data networks and tunnelling mechanism used
          default: L2TP Tunnel
          enum:
            - L2TP Tunnel
            - GRE Tunnel
            - VPN Tunnel
            - Label based routing
        V2XCommunicationMode:
          type: string
          description: This parameter describes if the V2X communication mode is supported by the network slice.
          default: Not supported
          enum:
            - Not supported
            - YES-EUTRA
            - YES- NR
            - YES -NR and E-UTRA
        Latency from (last) UFP to Application Server:
          type: number
          description: 'Latency in Secondsmfrom (last) UFP to Application Server This optional attribute specifies maximum or worst case one-way latency between UPF and application server offered by the slice. This does not include latency introduced by the application server. In the case of chained UPFs, this refers to the last UPF (in the chain) towards the application server. This attribute extends what is covered by the 3GPP QoS PDB attribute (see GST QoS attribute) which is only between UE and UPF. This is an optional attribute for network slices that offer latency objectives between UPF and application server residing within the operator network. '
        NSSAARequired:
          type: string
          description: 'Network Slice Specific Authentication and Authorization (NSSAA). This attribute specifies whether for the Network Slice, devices need to be also authenticated and authorized by a AAA server using additional credentials different than the ones used for the primary authentication (see Rel-16 of 3GPP TS 23.501 [1] clause 5.15.10 for a definition of the Network Slice Specific Authentication and Authorization feature). '
          default: Not supported
          enum:
            - Not supported
            - YES-EUTRA
            - YES- NR
            - YES -NR and E-UTRA
        multimediaPriorityService:
          type: string
          description: 'Multimedia Priority Service (MPS) leads to priority of traffic relative to other traffic. Note: Not including this attribute is equal to setting it to Non-MPS.  '
          default: non-MPS
          enum:
            - non-MPS
            - MPS
        multimediaPriorityServiceCapabilitySupport:
          type: string
          description: 'This parameter specifies what capabilities are available to support MPS. More than one capability may be supported at once. This parameter must be present if Multimedia Priority Service support is set to âMPSâ. '
          default: Preemption
          enum:
            - Preemption
            - user Prioritization
        multimediaPriorityServiceSupport:
          type: string
          description: 'This attribute specifies whether or not the network slice supports MPS for MMTel voice, MPS for MMTel video, and/or MPS for Data as specified in 3GPP TS 22.153 [31]. This parameter must be present if Multimedia Priority Service support is set to âMPSâ. '
          default: MPS for MMTel voice
          enum:
            - MPS for MMTel voice
            - MPS for MMTel video
            - MPS for Data
        sliceSegment:
          type: string
          description: 'This attribute specifies Subnet involved in the slice '
          default: End to End
          enum:
            - End to End
            - Ran only
            - Core only
        supportedDataNetwork:
          type: string
          description: This attribute describes the data nework the network slice provides access to
        supportedDataNetworkServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to certain groups of devices using the netwirk slice, associated to a Maximum Dowlink Troughput
      description: |-
        Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.
        Skipped properties: id,href
      allOf:
        - $ref: '#/components/schemas/Service_Create'
    Service_Update:
      type: object
      properties:
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          description: Date when the service ends
          format: date-time
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          description: Date when the service starts
          format: date-time
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          description: 'A list of feature associated with this service '
          items:
            $ref: '#/components/schemas/Feature'
        note:
          type: array
          description: A list of notes made on this service
          items:
            $ref: '#/components/schemas/Note'
        place:
          type: array
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedEntity:
          type: array
          description: 'A list of related  entity in relationship with this service '
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
        relatedParty:
          type: array
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
          items:
            $ref: '#/components/schemas/RelatedParty'
        serviceCharacteristic:
          type: array
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
          items:
            $ref: '#/components/schemas/Characteristic'
        serviceOrderItem:
          type: array
          description: A list of service order items related to this service
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
        serviceRelationship:
          type: array
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory (useful for describing relies-on, relies-from between CFS for example).
          items:
            $ref: '#/components/schemas/ServiceRelationship'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        state:
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources'
          items:
            $ref: '#/components/schemas/ResourceRef'
        supportingService:
          type: array
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: |-
        Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.
        Skipped properties: id,href
    5GSliceService_Update:
      properties:
        availability:
          type: number
          description: '(Communication service)availability: percentage value of the amount of time the end-to-end communication service is delivered according to an agreed QoS, divided by the amount of time the system is expected to deliver the end-to-end service according to the specification in a specific area'
        areaofServiceCountry:
          pattern: 2[A,Z]
          type: string
          description: This attribute specifies the area where the terminals can access a particular network slice. Therefore, the attribute specifies the list of the countries where the service will be provided. The list is specific to NSPs and their roaming agreements
        areaofServiceRegion:
          pattern: 2[A,Z]
          type: string
          description: For every single country listed in the area of service attribute it needs to be indicated if the service will be provided in the whole country or just in part of the country. If the NSC requires a specific location, this attribute can be used to specify the regions of the country where the service will be provided. It needs to be completed for every country listed in the Area of service attribute. The list of regions is specific for each country and the way to define these regions is the decision of the NSC and NSP.
        delayTolerance:
          type: string
          description: Provide the NSC with service delivery flexibility, especially for the vertical services that are not chasing a high system performance. For instance, the service will be delivered once the mobile system has sufficient resources or during the off-peak hours. For this type of traffic, it is not too critical how long it takes to deliver the amount of data, e.g. within hours, days, weeks, etc.
        deterministicCommunicationAvailabilty:
          type: string
          description: Availability describes if the network slice supports deterministic communication.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        deterministicCommunicationPeriodicity:
          type: string
          description: Periodicity provides a list of periodicities supported by the network slice.
        downlinkThroughputPerNetworkSliceGuaranteedDownlinkThroughputQuota:
          maximum: 1000000
          minimum: 0
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in downlink.
        additionalDownlinkGBRQoSFlows:
          type: boolean
          description: Additional downlink GBR QoS flows .
          default: true
        downlinkThroughputPerNetworkSliceMaximumDownlinkThroughput:
          maximum: 1000000
          minimum: 0
          type: integer
          description: This attribute defines the maximum data rate supported by the network slice in downlink.
        downlinkThroughputperUEDownlinkMaximumRateServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to certain groups of devices using the netwirk slice, associated to a Maximum Dowlink Troughput
        energyEfficiencyNetworkSliceEnergyEfficiencyKPI:
          type: string
          description: This attribute describes wether the network slice supports the energy efficiency KPI
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        groupCommunicationSupport:
          type: string
          description: 'This parameter describes which type of group communication is provided by the network slice. '
          default: NotSupported
          enum:
            - NotSupported
            - Single Cell Point to Multipoint (SCPTM)
            - Broadcast/Multicast
            - Broadcast/Multicast + SC-PTM
            - Unicast
        isolation:
          type: string
          description: 'Isolation is one of the key expectations of network slicing. A network slice instance may be fully or partly, logically and/or physically, isolated from another network slice instance. '
          default: No Isolation
          enum:
            - No Isolation
            - Physical Isolation
            - Logical Isolation
        physicalIsolation:
          type: string
          description: Physical network slices are physically separated (e.g. different rack, different hardware, different location, etc.). Process and threads isolation,  Physical memory isolation, Physical network isolation
          default: Process and threads Isolation
          enum:
            - Process and threads Isolation
            - Physical memory Isolation
            - Physical network isolation
        logicalIsolation:
          type: string
          description: Logical network slices are logically separated. Virtual resources isolation a network slice has access to specific range of resources that do not overlap with other network slices (e.g. VM isolation). Network functions isolation   NF (Network Function) is dedicated to the NSC, but virtual resources are shared. Tenant/Service Isolation  NSC data are isolated from other NSCs, but virtual resources and NFs are shared
          default: Virtual resource isolation
          enum:
            - Virtual resource isolation
            - Network Function isolation
            - Tenant/Service isolation
        maximumSupportedPacketSize:
          type: integer
          description: This attribute describes the maximum packet size in Bytes supported by the network slice and may be important for URLLC (Ultra-Reliable Low Latency Communication) and MIoT (Massive IoT), or to indicate a supported maximum transmission unit (MTU).
        missionCriticalSupport:
          type: string
          description: Mission-critical (MC) leads to a priority of the network slice relative to others, for C-plane (Control Plane) and U-plane (User Plane) decisions. This is relative to a customer provider relationship and to a PLMN (Public land Mobile Network)
          default: non-mission-critical
          enum:
            - non-mission-critical
            - mission-critical
        missionCriticalSupportMissionCriticalCapabilitySupport:
          type: string
          description: This parameter specifies what capabilities are available to support mission-critical services.  More than one capability may be supported at once.  This parameter must be present if Mission critical supportis set toMission-critical.
          default: Inter-user prioritization
          enum:
            - Inter-user prioritization
            - Pre-emption
            - Local control
        missionCriticalSupporMissionCriticalServiceSupport:
          type: string
          description: This attribute specifies whether or not the network slice supports mission-critical push-to-talk (MCPTT), mission-critical data (MCData)], mission-critical video (MCVideo), Isolated E-UTRAN Operation for Public Safety (IOPS), or mission-critical interworking
          default: MCPTT
          enum:
            - MCPTT
            - MCData
            - MCVideo
            - MC interworking
        MMTelSupport:
          type: string
          description: This attribute describes whether the network slice supports IP Multimedia Subsystem (IMS) and Multimedia Telephony Service MMTel. This parameter describes whether the GSMA PRD IR.92 0 compliant MMTel deployment is supported in the network slice
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        NB-IoTSupport:
          type: string
          description: This parameter describes whether NB-IoTis supported in the network slice
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        EPSCountingRequiredUE:
          type: string
          description: 'If this parameter indicates that EPS counting is required, the UE sessions counting shall also take into account the PDN connections in the EPS connected to an APN that maps to a DNN/S-NSSAI of the network slice. '
          default: 'no'
          enum:
            - 'no'
            - 'yes'
        performanceMonitoringAvailability:
          type: string
          description: This parameter contains a list of KQIs and KPIs available for monitoring. If the list is empty this attribute is not available in the network slice and the other parameters might be ignored
          default: 'no'
          enum:
            - 'no'
            - 'yes'
        performanceMonitoringAvailabilityFrequency:
          type: string
          description: This parameter contains a list of KQIs and KPIs available for monitoring. If the list is empty this attribute is not available in the network slice and the other parameters might be ignored
        performanceMonitoringSampleFrequency:
          type: string
          description: This parameter describes how often the KQIs and KPIs are monitored.
          default: per second
          enum:
            - per second
            - per minute
            - per hour
            - conditional, e.g. in case a defined threshold is crossed
        performancePredictionAvailability:
          type: string
          description: This parameter contains a list of KQIs and KPIs available for prediction. If the list is empty, the attribute is not available in the network slice and the other parameters might be ignored
          default: Throughput
          enum:
            - Throughput
            - Latency
            - Service Request Success Rate
        performancePredictionFrequency:
          type: string
          description: This parameter describes how often KQIs and KPIs prediction values are provided
          default: per second
          enum:
            - per second
            - per minute
            - per hour
        positioningSupportAvailability:
          type: string
          description: This parameter describes if this attribute is provided by the network slice and contains a list of positioning methods provided by the slice. If the list is empty this attribute is not available in the network slice and the other parameters might be ignored
          enum:
            - CID
            - OTDOA (LTE and NR)
            - RF fingerprinting
            - AECID
            - Hybrid positioning
            - NET-RTK
        positioningSupportPredictionFrequency:
          type: string
          description: This parameter describes how often location information is provided. This parameter simply defines how often the customer is allowed to request location information. This is not related to the time it takes to determine the location, which is a characteristic of the positioning method.
          default: per second
          enum:
            - per second
            - per minute
            - per hour
            - conditional, e.g. in case a defined threshold is crossed
        positioningSupportAccuracy:
          type: number
          description: This parameter describes the accuracy of the location information. Accuracy depends on the respective positioning solution applied in the network slice
        radioSpectrum:
          type: string
          description: Defines the radio spectrum supported by the network slice. See NR operating band identifiers in 3GPP TS 38.101-4
        rootCauseInvestigation:
          type: string
          description: Root cause investigation is the capability provided to NSC to understand or investigate the root cause of network service performance degradation or failure
          default: not supported
          enum:
            - not supported
            - passive investigation
            - active investigation
        sessionAndServiceContinuitySupport:
          type: string
          description: 'The attribute defines the continuity of a Protocol Data Unit (PDU) session. The following three Session and Service Continuity (SSC) modes are specified: SSC mode 1 - the network preserves the connectivity service provided to the UE (the IP address is preserved), SSC mode 2 - the network may release the connectivity service delivered to the UE and release the corresponding PDU Session (the network may release IP address(es) that had been allocated to the UE), SSC mode 3 - changes to the user plane can be visible to the UE, while the network ensures that the UE suffers no loss of connectivity service (the IP address is not preserved in this mode when the PDU Session Anchor changes), None â UE loses the connectivity service'
          enum:
            - SSC mode 1
            - SSC mode 2
            - SSC mode 3
        simultaneousUseOfNetworkSlice:
          type: string
          description: This attribute describes whether a network slice can be simultaneously with other network slice and if so, which group the network slice belongs to
          default: Can be used with any slice
          enum:
            - Can be used with any slice
            - Can be used with slices with same SST value
            - Can be used with any slice with same SD value
            - 'Can be used simultaneously with any network slice with the same SD value but different SST value '
            - 'Cannot be used simultaneously with any another network slice '
            - operator defined class
        simultaneousUseOfNetworkSliceServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to a UE, associated to a Simlultaneous class value
        sliceQualityOfServiceParameters5QI:
          maximum: 200
          minimum: 1
          type: integer
          description: A 5QI is a scalar used as a reference to 5G QoS characteristics defined in clause [1], i.e. access node-specific parameters that control QoS forwarding treatment for the QoS Flow (e.g. scheduling weights, admission thresholds, queue management thresholds, link layer protocol configuration, etc.). 3GPP has already defined standardized 5QI to QoS characteristics mapping. See 5QI value in the table of GNST
        sliceQualityOfServiceParametersPriorityLeve:
          type: string
          description: The Priority level associated with 5G QoS characteristics indicates a priority in scheduling resources among QoS Flows. The Priority level shall be used to differentiate between QoS Flows of the same UE, and it shall also be used to differentiate between QoS Flows from different UEs. Once all QoS requirements up to GFBR are fulfilled for all the Guaranteed Bit Rate (GBR) QoS Flows, the Priority Level may also be used to distribute resources between GBR QoS Flows (for rates above GFBR up to MFBR, Maximum Flow Bit Rate) and non- GBR QoS Flows, in an implementation specific manner. The lowest Priority level value corresponds to the highest Priority [1]. This value needs to be provided for each customised 5QI value selected..
        sliceQualityOfServiceParametersPacketDelayBudget:
          type: string
          description: The Packet Delay Budget (PDB) defines an upper bound for the time that a packet may be delayed between the UE and the UPF, that terminates the N6 interface. For a certain 5QI the value of the PDB is the same in UL (Uplink) and DL (Downlink). In the case of 3GPP access, the PDB is used to support the configuration of scheduling and link layer functions (e.g. the setting of scheduling priority weights and HARQ (Hybrid Automatic Repeat request) target operating points).
        sliceQualityOfServiceParametersPacketErrorRate:
          type: string
          description: The Packet Error Rate (PER) defines an upper bound for the rate of PDUs (e.g. IP packets) that have been processed by the sender but that are not successfully delivered by the corresponding receiver. The purpose of the PER is to allow for the appropriate link layer, protocol configurations (e.g. RLC and HARQ in RAN of a 3GPP access). For all 5QIs the value of the PER is the same in UL and DL. For GBR QoS Flows with Delay critical GBR resource type, a packet which is delayed more than PDB (but which complies with the GFBR and MDBV (Maximum Data Burst Volume) requirements) is counted as lost, and included in the PER. This value needs to be provided for each customised 5QI value selected.
        averagingWindow:
          type: integer
          description: millisecond Each GBR QoS Flow shall be associated with an Averaging window. The Averaging window represents the duration over which the GFBR and MFBR shall be calculated (e.g. in the (R)AN, UPF, UE). (see clause 5.7.3.6 of 3GPP TS 23.501 [1]).
        maximumDataBurstVolume:
          type: integer
          description: 'bytes Each GBR QoS Flow with Delay-critical resource type shall be associated with a Maximum Data Burst Volume (MDBV). MDBV denotes the largest amount of data that the 5G-AN is required to serve within a period of 5G-AN PDB (i.e. 5G-AN part of the PDB) (see clause 5.7.3.7 of 3GPP TS 23.501 [1]). '
        sliceQualityOfServiceParametersMaximumPacketLossRate:
          type: integer
          description: Percentage The Maximum Packet Loss Rate (UL, DL) indicates the maximum rate for lost packets of the QoS flow that can be tolerated in the uplink (UL) and downlink (DL) direction.
        supportForNon-IPTraffic:
          type: string
          description: Percentage The Maximum Packet Loss Rate (UL, DL) indicates the maximum rate for lost packets of the QoS flow that can be tolerated in the uplink (UL) and downlink (DL) direction.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        supportedDeviceVelocity:
          type: integer
          description: Kilometres per hour (km/h) Maximum speed supported by the network slice at which a defined QoS and seamless transfer between TRxPs (Transmission Reception Point(s)), which may belong to different deployment layers and/or radio access technologies (multi-layer /-RAT), can be achieved.
        synchronicityAvailability:
          type: string
          description: The synchronicity between devices over PC5 in absence of the network is not in scope of this attribute.
          default: NotSupported
          enum:
            - Suported
            - NotSupported
        synchronicityAccuracy:
          type: number
          description: This parameter describes the accuracy of the synchronicity. in Seconds
        UEDensity:
          type: integer
          description: This attribute describes the maximum number of connected and/or accessible devices per unit area (per km2) supported by the network slice.Number per km2
        uplinkThroughputPerNetworkSliceGuaranteedUplinkThroughput:
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in uplink. There are services (e.g. emergency services) where guaranteed uplink throughput is required. kbps
        uplinkThroughputPerNetworkSliceAdditionalUplinkGBRQoSFlows:
          type: string
          default: allowed
          enum:
            - notAllowed
            - allowed
        uplinkThroughputPerNetworkSliceMaximumUplinkThroughput:
          type: integer
          description: This attribute describes the guaranteed data rate supported by the network slice in uplink. There are services (e.g. emergency services) where guaranteed uplink throughput is required. bps
        uplinkThroughputPerUEMaximumUplinkThroughput:
          type: integer
          description: This attribute describes the maximum data rate supported by the network slice per UE in uplink. These parameters could be used in order to offer different contract qualities like gold, silver and bronze. kbps
        UplinkThroughputPerUEServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to a UE, associated to a Simlultaneous class value
        userManagementOpenness:
          type: string
          description: This attribute describes the capability for the NSC to manage their users or groups of usersâ network services and corresponding requirements. For instance, if NSC Y orders a network slice which is capable to support X users of Y, then Y should be capable to decide which X users could use this network slice. Hence, Y could manage the users, in terms of add, modify or delete users to receive network services provided by the specific network slice.
          default: allowed
          enum:
            - notAllowed
            - allowed
        dataNetworkAccessDataAccessPerNetwork:
          type: string
          description: This attribute describes the capability for the NSC to manage their users or groups of usersâ network services and corresponding requirements. For instance, if NSC Y orders a network slice which is capable to support X users of Y, then Y should be capable to decide which X users could use this network slice. Hence, Y could manage the users, in terms of add, modify or delete users to receive network services provided by the specific network slice.
          default: Direct internet access
          enum:
            - Direct internet access
            - Termination in the private network
            - Local traffic (no internet access)
        dataNetworkAccessTunnellingMechanism:
          type: string
          description: The attribute defines the tunnelling mechanism; how the user data can be delivered to the external private data network. 3GPP TS 29.561 [12] lists the interworking with data networks and tunnelling mechanism used
          default: L2TP Tunnel
          enum:
            - L2TP Tunnel
            - GRE Tunnel
            - VPN Tunnel
            - Label based routing
        V2XCommunicationMode:
          type: string
          description: This parameter describes if the V2X communication mode is supported by the network slice.
          default: Not supported
          enum:
            - Not supported
            - YES-EUTRA
            - YES- NR
            - YES -NR and E-UTRA
        Latency from (last) UFP to Application Server:
          type: number
          description: 'Latency in Secondsmfrom (last) UFP to Application Server This optional attribute specifies maximum or worst case one-way latency between UPF and application server offered by the slice. This does not include latency introduced by the application server. In the case of chained UPFs, this refers to the last UPF (in the chain) towards the application server. This attribute extends what is covered by the 3GPP QoS PDB attribute (see GST QoS attribute) which is only between UE and UPF. This is an optional attribute for network slices that offer latency objectives between UPF and application server residing within the operator network. '
        NSSAARequired:
          type: string
          description: 'Network Slice Specific Authentication and Authorization (NSSAA). This attribute specifies whether for the Network Slice, devices need to be also authenticated and authorized by a AAA server using additional credentials different than the ones used for the primary authentication (see Rel-16 of 3GPP TS 23.501 [1] clause 5.15.10 for a definition of the Network Slice Specific Authentication and Authorization feature). '
          default: Not supported
          enum:
            - Not supported
            - YES-EUTRA
            - YES- NR
            - YES -NR and E-UTRA
        multimediaPriorityService:
          type: string
          description: 'Multimedia Priority Service (MPS) leads to priority of traffic relative to other traffic. Note: Not including this attribute is equal to setting it to Non-MPS.  '
          default: non-MPS
          enum:
            - non-MPS
            - MPS
        multimediaPriorityServiceCapabilitySupport:
          type: string
          description: 'This parameter specifies what capabilities are available to support MPS. More than one capability may be supported at once. This parameter must be present if Multimedia Priority Service support is set to âMPSâ. '
          default: Preemption
          enum:
            - Preemption
            - user Prioritization
        multimediaPriorityServiceSupport:
          type: string
          description: 'This attribute specifies whether or not the network slice supports MPS for MMTel voice, MPS for MMTel video, and/or MPS for Data as specified in 3GPP TS 22.153 [31]. This parameter must be present if Multimedia Priority Service support is set to âMPSâ. '
          default: MPS for MMTel voice
          enum:
            - MPS for MMTel voice
            - MPS for MMTel video
            - MPS for Data
        sliceSegment:
          type: string
          description: 'This attribute specifies Subnet involved in the slice '
          default: End to End
          enum:
            - End to End
            - Ran only
            - Core only
        supportedDataNetwork:
          type: string
          description: This attribute describes the data nework the network slice provides access to
        supportedDataNetworkServiceCategory:
          type: string
          description: This attribute defines a service category wich may be assigned to certain groups of devices using the netwirk slice, associated to a Maximum Dowlink Troughput
      description: |-
        Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.
        Skipped properties: id,href
      allOf:
        - $ref: '#/components/schemas/Service_Update'
    ServiceRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: Service reference, for when Service is used by other entities
    ServiceRefOrValue:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the service
        href:
          type: string
          description: Reference of the service
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          description: Date when the service ends
          format: date-time
        hasStarted:
          type: boolean
          description: If TRUE, this Service has already been started
        isBundle:
          type: boolean
          description: If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).
        isServiceEnabled:
          type: boolean
          description: 'If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed '
        isStateful:
          type: boolean
          description: If TRUE, this Service can be changed without affecting any other services
        name:
          type: string
          description: Name of the service
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          description: Date when the service starts
          format: date-time
        startMode:
          type: string
          description: 'This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above'
        feature:
          type: array
          description: 'A list of feature associated with this service '
          items:
            $ref: '#/components/schemas/Feature'
        note:
          type: array
          description: A list of notes made on this service
          items:
            $ref: '#/components/schemas/Note'
        place:
          type: array
          description: A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
        relatedEntity:
          type: array
          description: 'A list of related  entity in relationship with this service '
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
        relatedParty:
          type: array
          description: A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity
          items:
            $ref: '#/components/schemas/RelatedParty'
        serviceCharacteristic:
          type: array
          description: 'A list of characteristics that characterize this service (ServiceCharacteristic [*]) '
          items:
            $ref: '#/components/schemas/Characteristic'
        serviceOrderItem:
          type: array
          description: A list of service order items related to this service
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
        serviceRelationship:
          type: array
          description: A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory (useful for describing relies-on, relies-from between CFS for example).
          items:
            $ref: '#/components/schemas/ServiceRelationship'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        state:
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          description: 'A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources'
          items:
            $ref: '#/components/schemas/ResourceRef'
        supportingService:
          type: array
          description: A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself
    ServiceRelationship:
      required:
        - relationshipType
      type: object
      properties:
        relationshipType:
          type: string
        ServiceRelationshipCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
        service:
          $ref: '#/components/schemas/ServiceRefOrValue'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
    ServiceSpecificationRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        href:
          type: string
          description: Hyperlink reference
          format: uri
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Service specification version
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
          example: ResourceSpecification
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
          example: https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class Extensible name
          example: LogicalResourceSpecification
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
      description: 'Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.'
    ServiceStateType:
      type: string
      description: Valid values for the lifecycle state of the service
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - inactive
        - active
        - terminated
    TimePeriod:
      type: object
      properties:
        endDateTime:
          type: string
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          description: Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name
      description: A period of time, either as a deadline (endDateTime only) a startDateTime only, or both
    EventSubscription:
      required:
        - callback
        - id
      type: object
      properties:
        id:
          type: string
          description: Id of the listener
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    EventSubscriptionInput:
      required:
        - callback
      type: object
      properties:
        callback:
          type: string
          description: The callback being registered.
        query:
          type: string
          description: additional data to be passed
      description: Sets the communication endpoint address the service instance must use to deliver notification information
    ServiceCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ServiceCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceCreateEventPayload:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/5GSliceService'
      description: The event data structure
    ServiceAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/ServiceAttributeValueChangeEventPayload'
      description: The notification data structure
    ServiceAttributeValueChangeEventPayload:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/5GSliceService'
      description: The event data structure
    ServiceStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ServiceStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceStateChangeEventPayload:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/5GSliceService'
      description: The event data structure
    ServiceDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/ServiceDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    ServiceDeleteEventPayload:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/5GSliceService'
      description: The event data structure
    MonitorCreateEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MonitorCreateEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MonitorCreateEventPayload:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'
      description: The event data structure
    MonitorAttributeValueChangeEvent:
      type: object
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
        event:
          $ref: '#/components/schemas/MonitorAttributeValueChangeEventPayload'
      description: The notification data structure
    MonitorAttributeValueChangeEventPayload:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'
      description: The event data structure
    MonitorStateChangeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MonitorStateChangeEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MonitorStateChangeEventPayload:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'
      description: The event data structure
    MonitorDeleteEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/MonitorDeleteEventPayload'
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          description: Time of the event occurrence.
          format: date-time
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          description: The time the event occured.
          format: date-time
      description: The notification data structure
    MonitorDeleteEventPayload:
      type: object
      properties:
        monitor:
          $ref: '#/components/schemas/Monitor'
      description: The event data structure
    Error:
      required:
        - code
        - reason
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a client user.
        message:
          type: string
          description: More details and corrective actions related to the error which can be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
        referenceError:
          type: string
          description: URI of documentation describing the error.
          format: uri
        '@baseType':
          type: string
          description: When sub-classing, this defines the super-class.
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          format: uri
        '@type':
          type: string
          description: When sub-classing, this defines the sub-class entity name.
      description: Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)
x-original-swagger-version: '2.0'